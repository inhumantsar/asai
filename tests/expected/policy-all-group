{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "Amazon Comprehend",
            "Effect": "Allow",
            "Action": [
                "comprehend:BatchDetectDominantLanguage",
                "comprehend:BatchDetectEntities",
                "comprehend:BatchDetectKeyPhrases",
                "comprehend:BatchDetectSentiment",
                "comprehend:BatchDetectSyntax",
                "comprehend:ClassifyDocument",
                "comprehend:ContainsPiiEntities",
                "comprehend:CreateDocumentClassifier",
                "comprehend:CreateEndpoint",
                "comprehend:CreateEntityRecognizer",
                "comprehend:DeleteDocumentClassifier",
                "comprehend:DeleteEndpoint",
                "comprehend:DeleteEntityRecognizer",
                "comprehend:DescribeDocumentClassificationJob",
                "comprehend:DescribeDocumentClassifier",
                "comprehend:DescribeDominantLanguageDetectionJob",
                "comprehend:DescribeEndpoint",
                "comprehend:DescribeEntitiesDetectionJob",
                "comprehend:DescribeEntityRecognizer",
                "comprehend:DescribeEventsDetectionJob",
                "comprehend:DescribeKeyPhrasesDetectionJob",
                "comprehend:DescribePiiEntitiesDetectionJob",
                "comprehend:DescribeSentimentDetectionJob",
                "comprehend:DescribeTopicsDetectionJob",
                "comprehend:DetectDominantLanguage",
                "comprehend:DetectEntities",
                "comprehend:DetectKeyPhrases",
                "comprehend:DetectPiiEntities",
                "comprehend:DetectSentiment",
                "comprehend:DetectSyntax",
                "comprehend:ListDocumentClassificationJobs",
                "comprehend:ListDocumentClassifiers",
                "comprehend:ListDominantLanguageDetectionJobs",
                "comprehend:ListEndpoints",
                "comprehend:ListEntitiesDetectionJobs",
                "comprehend:ListEntityRecognizers",
                "comprehend:ListEventsDetectionJobs",
                "comprehend:ListKeyPhrasesDetectionJobs",
                "comprehend:ListPiiEntitiesDetectionJobs",
                "comprehend:ListSentimentDetectionJobs",
                "comprehend:ListTagsForResource",
                "comprehend:ListTopicsDetectionJobs",
                "comprehend:StartDocumentClassificationJob",
                "comprehend:StartDominantLanguageDetectionJob",
                "comprehend:StartEntitiesDetectionJob",
                "comprehend:StartEventsDetectionJob",
                "comprehend:StartKeyPhrasesDetectionJob",
                "comprehend:StartPiiEntitiesDetectionJob",
                "comprehend:StartSentimentDetectionJob",
                "comprehend:StartTopicsDetectionJob",
                "comprehend:StopDominantLanguageDetectionJob",
                "comprehend:StopEntitiesDetectionJob",
                "comprehend:StopEventsDetectionJob",
                "comprehend:StopKeyPhrasesDetectionJob",
                "comprehend:StopPiiEntitiesDetectionJob",
                "comprehend:StopSentimentDetectionJob",
                "comprehend:StopTrainingDocumentClassifier",
                "comprehend:StopTrainingEntityRecognizer",
                "comprehend:TagResource",
                "comprehend:UntagResource",
                "comprehend:UpdateEndpoint"
            ],
            "Resource": [
                "arn:${Partition}:comprehend:${Region}:${AccountId}:${ResourceType}/${ResourceName}"
            ],
            "Condition": {
                "SomeCondition-IYzBf": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-wKFjv": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-GPTKt": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-UYQWo": {
                    "comprehend:ModelKmsKey": "...some value..."
                },
                "SomeCondition-eBATX": {
                    "comprehend:OutputKmsKey": "...some value..."
                },
                "SomeCondition-UmQWK": {
                    "comprehend:VolumeKmsKey": "...some value..."
                },
                "SomeCondition-FOVko": {
                    "comprehend:VpcSecurityGroupIds": "...some value..."
                },
                "SomeCondition-zCKMG": {
                    "comprehend:VpcSubnets": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Elastic File System",
            "Effect": "Allow",
            "Action": [
                "elasticfilesystem:Backup",
                "elasticfilesystem:ClientMount",
                "elasticfilesystem:ClientRootAccess",
                "elasticfilesystem:ClientWrite",
                "elasticfilesystem:CreateAccessPoint",
                "elasticfilesystem:CreateFileSystem",
                "elasticfilesystem:CreateMountTarget",
                "elasticfilesystem:CreateTags",
                "elasticfilesystem:DeleteAccessPoint",
                "elasticfilesystem:DeleteFileSystem",
                "elasticfilesystem:DeleteFileSystemPolicy",
                "elasticfilesystem:DeleteMountTarget",
                "elasticfilesystem:DeleteTags",
                "elasticfilesystem:DescribeAccessPoints",
                "elasticfilesystem:DescribeAccountPreferences",
                "elasticfilesystem:DescribeBackupPolicy",
                "elasticfilesystem:DescribeFileSystemPolicy",
                "elasticfilesystem:DescribeFileSystems",
                "elasticfilesystem:DescribeLifecycleConfiguration",
                "elasticfilesystem:DescribeMountTargetSecurityGroups",
                "elasticfilesystem:DescribeMountTargets",
                "elasticfilesystem:DescribeTags",
                "elasticfilesystem:ListTagsForResource",
                "elasticfilesystem:ModifyMountTargetSecurityGroups",
                "elasticfilesystem:PutAccountPreferences",
                "elasticfilesystem:PutBackupPolicy",
                "elasticfilesystem:PutFileSystemPolicy",
                "elasticfilesystem:PutLifecycleConfiguration",
                "elasticfilesystem:Restore",
                "elasticfilesystem:TagResource",
                "elasticfilesystem:UntagResource",
                "elasticfilesystem:UpdateFileSystem"
            ],
            "Resource": [
                "arn:${Partition}:elasticfilesystem:${Region}:${Account}:${ResourceType}/${ResourcePath}"
            ],
            "Condition": {
                "SomeCondition-RKuAd": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-ndlke": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-qcfFk": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-qbsJn": {
                    "elasticfilesystem:AccessPointArn": "...some value..."
                },
                "SomeCondition-YsVdC": {
                    "elasticfilesystem:AccessedViaMountTarget": "...some value..."
                },
                "SomeCondition-cBwXv": {
                    "elasticfilesystem:Encrypted": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Glue",
            "Effect": "Allow",
            "Action": [
                "glue:BatchCreatePartition",
                "glue:BatchDeleteConnection",
                "glue:BatchDeletePartition",
                "glue:BatchDeleteTable",
                "glue:BatchDeleteTableVersion",
                "glue:BatchGetCrawlers",
                "glue:BatchGetDevEndpoints",
                "glue:BatchGetJobs",
                "glue:BatchGetPartition",
                "glue:BatchGetTriggers",
                "glue:BatchGetWorkflows",
                "glue:BatchStopJobRun",
                "glue:CancelMLTaskRun",
                "glue:CheckSchemaVersionValidity",
                "glue:CreateClassifier",
                "glue:CreateConnection",
                "glue:CreateCrawler",
                "glue:CreateDatabase",
                "glue:CreateDevEndpoint",
                "glue:CreateJob",
                "glue:CreateMLTransform",
                "glue:CreatePartition",
                "glue:CreateRegistry",
                "glue:CreateSchema",
                "glue:CreateScript",
                "glue:CreateSecurityConfiguration",
                "glue:CreateTable",
                "glue:CreateTrigger",
                "glue:CreateUserDefinedFunction",
                "glue:CreateWorkflow",
                "glue:DeleteClassifier",
                "glue:DeleteConnection",
                "glue:DeleteCrawler",
                "glue:DeleteDatabase",
                "glue:DeleteDevEndpoint",
                "glue:DeleteJob",
                "glue:DeleteMLTransform",
                "glue:DeletePartition",
                "glue:DeleteRegistry",
                "glue:DeleteResourcePolicy",
                "glue:DeleteSchema",
                "glue:DeleteSchemaVersions",
                "glue:DeleteSecurityConfiguration",
                "glue:DeleteTable",
                "glue:DeleteTableVersion",
                "glue:DeleteTrigger",
                "glue:DeleteUserDefinedFunction",
                "glue:DeleteWorkflow",
                "glue:GetCatalogImportStatus",
                "glue:GetClassifier",
                "glue:GetClassifiers",
                "glue:GetConnection",
                "glue:GetConnections",
                "glue:GetCrawler",
                "glue:GetCrawlerMetrics",
                "glue:GetCrawlers",
                "glue:GetDataCatalogEncryptionSettings",
                "glue:GetDatabase",
                "glue:GetDatabases",
                "glue:GetDataflowGraph",
                "glue:GetDevEndpoint",
                "glue:GetDevEndpoints",
                "glue:GetJob",
                "glue:GetJobBookmark",
                "glue:GetJobRun",
                "glue:GetJobRuns",
                "glue:GetJobs",
                "glue:GetMLTaskRun",
                "glue:GetMLTaskRuns",
                "glue:GetMLTransform",
                "glue:GetMLTransforms",
                "glue:GetMapping",
                "glue:GetPartition",
                "glue:GetPartitions",
                "glue:GetPlan",
                "glue:GetRegistry",
                "glue:GetResourcePolicies",
                "glue:GetResourcePolicy",
                "glue:GetSchema",
                "glue:GetSchemaByDefinition",
                "glue:GetSchemaVersion",
                "glue:GetSchemaVersionsDiff",
                "glue:GetSecurityConfiguration",
                "glue:GetSecurityConfigurations",
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions",
                "glue:GetTables",
                "glue:GetTags",
                "glue:GetTrigger",
                "glue:GetTriggers",
                "glue:GetUserDefinedFunction",
                "glue:GetUserDefinedFunctions",
                "glue:GetWorkflow",
                "glue:GetWorkflowRun",
                "glue:GetWorkflowRunProperties",
                "glue:GetWorkflowRuns",
                "glue:ImportCatalogToGlue",
                "glue:ListCrawlers",
                "glue:ListDevEndpoints",
                "glue:ListJobs",
                "glue:ListMLTransforms",
                "glue:ListRegistries",
                "glue:ListSchemaVersions",
                "glue:ListSchemas",
                "glue:ListTriggers",
                "glue:ListWorkflows",
                "glue:PutDataCatalogEncryptionSettings",
                "glue:PutResourcePolicy",
                "glue:PutSchemaVersionMetadata",
                "glue:PutWorkflowRunProperties",
                "glue:QuerySchemaVersionMetadata",
                "glue:RegisterSchemaVersion",
                "glue:RemoveSchemaVersionMetadata",
                "glue:ResetJobBookmark",
                "glue:ResumeWorkflowRun",
                "glue:SearchTables",
                "glue:StartCrawler",
                "glue:StartCrawlerSchedule",
                "glue:StartExportLabelsTaskRun",
                "glue:StartImportLabelsTaskRun",
                "glue:StartJobRun",
                "glue:StartMLEvaluationTaskRun",
                "glue:StartMLLabelingSetGenerationTaskRun",
                "glue:StartTrigger",
                "glue:StartWorkflowRun",
                "glue:StopCrawler",
                "glue:StopCrawlerSchedule",
                "glue:StopTrigger",
                "glue:StopWorkflowRun",
                "glue:TagResource",
                "glue:UntagResource",
                "glue:UpdateClassifier",
                "glue:UpdateConnection",
                "glue:UpdateCrawler",
                "glue:UpdateCrawlerSchedule",
                "glue:UpdateDatabase",
                "glue:UpdateDevEndpoint",
                "glue:UpdateJob",
                "glue:UpdateMLTransform",
                "glue:UpdatePartition",
                "glue:UpdateRegistry",
                "glue:UpdateSchema",
                "glue:UpdateTable",
                "glue:UpdateTrigger",
                "glue:UpdateUserDefinedFunction",
                "glue:UpdateWorkflow",
                "glue:UseMLTransforms"
            ],
            "Resource": [
                "arn:aws:glue:<region>:<accountID>:<resourceType>/<resourcePath>"
            ],
            "Condition": {
                "SomeCondition-CnGqA": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-UlCrJ": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-YxjnQ": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS IoT Things Graph",
            "Effect": "Allow",
            "Action": [
                "iotthingsgraph:AssociateEntityToThing",
                "iotthingsgraph:CreateFlowTemplate",
                "iotthingsgraph:CreateSystemInstance",
                "iotthingsgraph:CreateSystemTemplate",
                "iotthingsgraph:DeleteFlowTemplate",
                "iotthingsgraph:DeleteNamespace",
                "iotthingsgraph:DeleteSystemInstance",
                "iotthingsgraph:DeleteSystemTemplate",
                "iotthingsgraph:DeploySystemInstance",
                "iotthingsgraph:DeprecateFlowTemplate",
                "iotthingsgraph:DeprecateSystemTemplate",
                "iotthingsgraph:DescribeNamespace",
                "iotthingsgraph:DissociateEntityFromThing",
                "iotthingsgraph:GetEntities",
                "iotthingsgraph:GetFlowTemplate",
                "iotthingsgraph:GetFlowTemplateRevisions",
                "iotthingsgraph:GetNamespaceDeletionStatus",
                "iotthingsgraph:GetSystemInstance",
                "iotthingsgraph:GetSystemTemplate",
                "iotthingsgraph:GetSystemTemplateRevisions",
                "iotthingsgraph:GetUploadStatus",
                "iotthingsgraph:ListFlowExecutionMessages",
                "iotthingsgraph:ListTagsForResource",
                "iotthingsgraph:SearchEntities",
                "iotthingsgraph:SearchFlowExecutions",
                "iotthingsgraph:SearchFlowTemplates",
                "iotthingsgraph:SearchSystemInstances",
                "iotthingsgraph:SearchSystemTemplates",
                "iotthingsgraph:SearchThings",
                "iotthingsgraph:TagResource",
                "iotthingsgraph:UndeploySystemInstance",
                "iotthingsgraph:UntagResource",
                "iotthingsgraph:UpdateFlowTemplate",
                "iotthingsgraph:UpdateSystemTemplate",
                "iotthingsgraph:UploadEntityDefinitions"
            ],
            "Resource": [
                "arn:aws:iotthingsgraph:<region>:<account_id>:<type>/<name>"
            ],
            "Condition": {
                "SomeCondition-ZrNoC": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-xeTPr": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-WZKVh": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Savings Plans",
            "Effect": "Allow",
            "Action": [
                "savingsplans:CreateSavingsPlan",
                "savingsplans:DeleteQueuedSavingsPlan",
                "savingsplans:DescribeSavingsPlanRates",
                "savingsplans:DescribeSavingsPlans",
                "savingsplans:DescribeSavingsPlansOfferingRates",
                "savingsplans:DescribeSavingsPlansOfferings",
                "savingsplans:ListTagsForResource",
                "savingsplans:TagResource",
                "savingsplans:UntagResource"
            ],
            "Resource": [
                "arn:aws:savingsplans::${Account}:${ResourceType}/${ResourcePath}"
            ],
            "Condition": {
                "SomeCondition-PDfVw": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-ePrOU": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-iHhcV": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Systems Manager",
            "Effect": "Allow",
            "Action": [
                "ssm:AddTagsToResource",
                "ssm:AssociateOpsItemRelatedItem",
                "ssm:CancelCommand",
                "ssm:CancelMaintenanceWindowExecution",
                "ssm:CreateActivation",
                "ssm:CreateAssociation",
                "ssm:CreateAssociationBatch",
                "ssm:CreateDocument",
                "ssm:CreateMaintenanceWindow",
                "ssm:CreateOpsItem",
                "ssm:CreateOpsMetadata",
                "ssm:CreatePatchBaseline",
                "ssm:CreateResourceDataSync",
                "ssm:DeleteActivation",
                "ssm:DeleteAssociation",
                "ssm:DeleteDocument",
                "ssm:DeleteInventory",
                "ssm:DeleteMaintenanceWindow",
                "ssm:DeleteOpsMetadata",
                "ssm:DeleteParameter",
                "ssm:DeleteParameters",
                "ssm:DeletePatchBaseline",
                "ssm:DeleteResourceDataSync",
                "ssm:DeregisterManagedInstance",
                "ssm:DeregisterPatchBaselineForPatchGroup",
                "ssm:DeregisterTargetFromMaintenanceWindow",
                "ssm:DeregisterTaskFromMaintenanceWindow",
                "ssm:DescribeActivations",
                "ssm:DescribeAssociation",
                "ssm:DescribeAssociationExecutionTargets",
                "ssm:DescribeAssociationExecutions",
                "ssm:DescribeAutomationExecutions",
                "ssm:DescribeAutomationStepExecutions",
                "ssm:DescribeAvailablePatches",
                "ssm:DescribeDocument",
                "ssm:DescribeDocumentParameters",
                "ssm:DescribeDocumentPermission",
                "ssm:DescribeEffectiveInstanceAssociations",
                "ssm:DescribeEffectivePatchesForPatchBaseline",
                "ssm:DescribeInstanceAssociationsStatus",
                "ssm:DescribeInstanceInformation",
                "ssm:DescribeInstancePatchStates",
                "ssm:DescribeInstancePatchStatesForPatchGroup",
                "ssm:DescribeInstancePatches",
                "ssm:DescribeInstanceProperties",
                "ssm:DescribeInventoryDeletions",
                "ssm:DescribeMaintenanceWindowExecutionTaskInvocations",
                "ssm:DescribeMaintenanceWindowExecutionTasks",
                "ssm:DescribeMaintenanceWindowExecutions",
                "ssm:DescribeMaintenanceWindowSchedule",
                "ssm:DescribeMaintenanceWindowTargets",
                "ssm:DescribeMaintenanceWindowTasks",
                "ssm:DescribeMaintenanceWindows",
                "ssm:DescribeMaintenanceWindowsForTarget",
                "ssm:DescribeOpsItems",
                "ssm:DescribeParameters",
                "ssm:DescribePatchBaselines",
                "ssm:DescribePatchGroupState",
                "ssm:DescribePatchGroups",
                "ssm:DescribePatchProperties",
                "ssm:DescribeSessions",
                "ssm:DisassociateOpsItemRelatedItem",
                "ssm:GetAutomationExecution",
                "ssm:GetCalendarState",
                "ssm:GetCommandInvocation",
                "ssm:GetConnectionStatus",
                "ssm:GetDefaultPatchBaseline",
                "ssm:GetDeployablePatchSnapshotForInstance",
                "ssm:GetDocument",
                "ssm:GetInventory",
                "ssm:GetInventorySchema",
                "ssm:GetMaintenanceWindow",
                "ssm:GetMaintenanceWindowExecution",
                "ssm:GetMaintenanceWindowExecutionTask",
                "ssm:GetMaintenanceWindowExecutionTaskInvocation",
                "ssm:GetMaintenanceWindowTask",
                "ssm:GetManifest",
                "ssm:GetOpsItem",
                "ssm:GetOpsMetadata",
                "ssm:GetOpsSummary",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
                "ssm:GetParameters",
                "ssm:GetParametersByPath",
                "ssm:GetPatchBaseline",
                "ssm:GetPatchBaselineForPatchGroup",
                "ssm:GetServiceSetting",
                "ssm:LabelParameterVersion",
                "ssm:ListAssociationVersions",
                "ssm:ListAssociations",
                "ssm:ListCommandInvocations",
                "ssm:ListCommands",
                "ssm:ListComplianceItems",
                "ssm:ListComplianceSummaries",
                "ssm:ListDocumentMetadataHistory",
                "ssm:ListDocumentVersions",
                "ssm:ListDocuments",
                "ssm:ListInstanceAssociations",
                "ssm:ListInventoryEntries",
                "ssm:ListOpsItemEvents",
                "ssm:ListOpsItemRelatedItems",
                "ssm:ListOpsMetadata",
                "ssm:ListResourceComplianceSummaries",
                "ssm:ListResourceDataSync",
                "ssm:ListTagsForResource",
                "ssm:ModifyDocumentPermission",
                "ssm:PutComplianceItems",
                "ssm:PutConfigurePackageResult",
                "ssm:PutInventory",
                "ssm:PutParameter",
                "ssm:RegisterDefaultPatchBaseline",
                "ssm:RegisterPatchBaselineForPatchGroup",
                "ssm:RegisterTargetWithMaintenanceWindow",
                "ssm:RegisterTaskWithMaintenanceWindow",
                "ssm:RemoveTagsFromResource",
                "ssm:ResetServiceSetting",
                "ssm:ResumeSession",
                "ssm:SendAutomationSignal",
                "ssm:SendCommand",
                "ssm:StartAssociationsOnce",
                "ssm:StartAutomationExecution",
                "ssm:StartChangeRequestExecution",
                "ssm:StartSession",
                "ssm:StopAutomationExecution",
                "ssm:TerminateSession",
                "ssm:UpdateAssociation",
                "ssm:UpdateAssociationStatus",
                "ssm:UpdateDocument",
                "ssm:UpdateDocumentDefaultVersion",
                "ssm:UpdateDocumentMetadata",
                "ssm:UpdateInstanceAssociationStatus",
                "ssm:UpdateInstanceInformation",
                "ssm:UpdateMaintenanceWindow",
                "ssm:UpdateMaintenanceWindowTarget",
                "ssm:UpdateMaintenanceWindowTask",
                "ssm:UpdateManagedInstanceRole",
                "ssm:UpdateOpsItem",
                "ssm:UpdateOpsMetadata",
                "ssm:UpdatePatchBaseline",
                "ssm:UpdateResourceDataSync",
                "ssm:UpdateServiceSetting"
            ],
            "Resource": [
                "arn:aws:ssm:<region>:<account_ID>:<relative-id>"
            ],
            "Condition": {
                "SomeCondition-uSgVf": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-SPUwq": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-McEaR": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-YzBFb": {
                    "ecs:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-ZdCKM": {
                    "ecs:cluster": "...some value..."
                },
                "SomeCondition-hNTCf": {
                    "ssm:Overwrite": "...some value..."
                },
                "SomeCondition-pIAtG": {
                    "ssm:Recursive": "...some value..."
                },
                "SomeCondition-UrLAQ": {
                    "ssm:SessionDocumentAccessCheck": "...some value..."
                },
                "SomeCondition-wbTrQ": {
                    "ssm:SyncType": "...some value..."
                },
                "SomeCondition-aykGd": {
                    "ssm:resourceTag/tag-key": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS SSO",
            "Effect": "Allow",
            "Action": [
                "sso:AssociateDirectory",
                "sso:AssociateProfile",
                "sso:AttachManagedPolicyToPermissionSet",
                "sso:CreateAccountAssignment",
                "sso:CreateApplicationInstance",
                "sso:CreateApplicationInstanceCertificate",
                "sso:CreateInstanceAccessControlAttributeConfiguration",
                "sso:CreateManagedApplicationInstance",
                "sso:CreatePermissionSet",
                "sso:CreateProfile",
                "sso:CreateTrust",
                "sso:DeleteAccountAssignment",
                "sso:DeleteApplicationInstance",
                "sso:DeleteApplicationInstanceCertificate",
                "sso:DeleteInlinePolicyFromPermissionSet",
                "sso:DeleteInstanceAccessControlAttributeConfiguration",
                "sso:DeleteManagedApplicationInstance",
                "sso:DeletePermissionSet",
                "sso:DeletePermissionsPolicy",
                "sso:DeleteProfile",
                "sso:DescribeAccountAssignmentCreationStatus",
                "sso:DescribeAccountAssignmentDeletionStatus",
                "sso:DescribeInstanceAccessControlAttributeConfiguration",
                "sso:DescribePermissionSet",
                "sso:DescribePermissionSetProvisioningStatus",
                "sso:DescribePermissionsPolicies",
                "sso:DescribeRegisteredRegions",
                "sso:DetachManagedPolicyFromPermissionSet",
                "sso:DisassociateDirectory",
                "sso:DisassociateProfile",
                "sso:GetApplicationInstance",
                "sso:GetApplicationTemplate",
                "sso:GetInlinePolicyForPermissionSet",
                "sso:GetManagedApplicationInstance",
                "sso:GetMfaDeviceManagementForDirectory",
                "sso:GetPermissionSet",
                "sso:GetPermissionsPolicy",
                "sso:GetProfile",
                "sso:GetSSOStatus",
                "sso:GetSharedSsoConfiguration",
                "sso:GetSsoConfiguration",
                "sso:GetTrust",
                "sso:ImportApplicationInstanceServiceProviderMetadata",
                "sso:ListAccountAssignmentCreationStatus",
                "sso:ListAccountAssignmentDeletionStatus",
                "sso:ListAccountAssignments",
                "sso:ListAccountsForProvisionedPermissionSet",
                "sso:ListApplicationInstanceCertificates",
                "sso:ListApplicationInstances",
                "sso:ListApplicationTemplates",
                "sso:ListApplications",
                "sso:ListDirectoryAssociations",
                "sso:ListInstances",
                "sso:ListManagedPoliciesInPermissionSet",
                "sso:ListPermissionSetProvisioningStatus",
                "sso:ListPermissionSets",
                "sso:ListPermissionSetsProvisionedToAccount",
                "sso:ListProfileAssociations",
                "sso:ListProfiles",
                "sso:ListTagsForResource",
                "sso:ProvisionPermissionSet",
                "sso:PutInlinePolicyToPermissionSet",
                "sso:PutMfaDeviceManagementForDirectory",
                "sso:PutPermissionsPolicy",
                "sso:SearchGroups",
                "sso:SearchUsers",
                "sso:StartSSO",
                "sso:TagResource",
                "sso:UntagResource",
                "sso:UpdateApplicationInstanceActiveCertificate",
                "sso:UpdateApplicationInstanceDisplayData",
                "sso:UpdateApplicationInstanceResponseConfiguration",
                "sso:UpdateApplicationInstanceResponseSchemaConfiguration",
                "sso:UpdateApplicationInstanceSecurityConfiguration",
                "sso:UpdateApplicationInstanceServiceProviderConfiguration",
                "sso:UpdateApplicationInstanceStatus",
                "sso:UpdateDirectoryAssociation",
                "sso:UpdateInstanceAccessControlAttributeConfiguration",
                "sso:UpdateManagedApplicationInstanceStatus",
                "sso:UpdatePermissionSet",
                "sso:UpdateProfile",
                "sso:UpdateSSOConfiguration",
                "sso:UpdateTrust"
            ],
            "Resource": [
                "arn:${Partition}:sso:::<relative-id>"
            ],
            "Condition": {
                "SomeCondition-bHwvy": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-LgNfJ": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-uIZeH": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS IoT",
            "Effect": "Allow",
            "Action": [
                "iot:AcceptCertificateTransfer",
                "iot:AddThingToBillingGroup",
                "iot:AddThingToThingGroup",
                "iot:AssociateTargetsWithJob",
                "iot:AttachPolicy",
                "iot:AttachPrincipalPolicy",
                "iot:AttachSecurityProfile",
                "iot:AttachThingPrincipal",
                "iot:CancelAuditMitigationActionsTask",
                "iot:CancelAuditTask",
                "iot:CancelCertificateTransfer",
                "iot:CancelDetectMitigationActionsTask",
                "iot:CancelJob",
                "iot:CancelJobExecution",
                "iot:ClearDefaultAuthorizer",
                "iot:CloseTunnel",
                "iot:ConfirmTopicRuleDestination",
                "iot:Connect",
                "iot:CreateAuditSuppression",
                "iot:CreateAuthorizer",
                "iot:CreateBillingGroup",
                "iot:CreateCertificateFromCsr",
                "iot:CreateCustomMetric",
                "iot:CreateDimension",
                "iot:CreateDomainConfiguration",
                "iot:CreateDynamicThingGroup",
                "iot:CreateFleetMetric",
                "iot:CreateJob",
                "iot:CreateJobTemplate",
                "iot:CreateKeysAndCertificate",
                "iot:CreateMitigationAction",
                "iot:CreateOTAUpdate",
                "iot:CreatePolicy",
                "iot:CreatePolicyVersion",
                "iot:CreateProvisioningClaim",
                "iot:CreateProvisioningTemplate",
                "iot:CreateProvisioningTemplateVersion",
                "iot:CreateRoleAlias",
                "iot:CreateScheduledAudit",
                "iot:CreateSecurityProfile",
                "iot:CreateStream",
                "iot:CreateThing",
                "iot:CreateThingGroup",
                "iot:CreateThingType",
                "iot:CreateTopicRule",
                "iot:CreateTopicRuleDestination",
                "iot:DeleteAccountAuditConfiguration",
                "iot:DeleteAuditSuppression",
                "iot:DeleteAuthorizer",
                "iot:DeleteBillingGroup",
                "iot:DeleteCACertificate",
                "iot:DeleteCertificate",
                "iot:DeleteCustomMetric",
                "iot:DeleteDimension",
                "iot:DeleteDomainConfiguration",
                "iot:DeleteDynamicThingGroup",
                "iot:DeleteFleetMetric",
                "iot:DeleteJob",
                "iot:DeleteJobExecution",
                "iot:DeleteJobTemplate",
                "iot:DeleteMitigationAction",
                "iot:DeleteOTAUpdate",
                "iot:DeletePolicy",
                "iot:DeletePolicyVersion",
                "iot:DeleteProvisioningTemplate",
                "iot:DeleteProvisioningTemplateVersion",
                "iot:DeleteRegistrationCode",
                "iot:DeleteRoleAlias",
                "iot:DeleteScheduledAudit",
                "iot:DeleteSecurityProfile",
                "iot:DeleteStream",
                "iot:DeleteThing",
                "iot:DeleteThingGroup",
                "iot:DeleteThingShadow",
                "iot:DeleteThingType",
                "iot:DeleteTopicRule",
                "iot:DeleteTopicRuleDestination",
                "iot:DeleteV2LoggingLevel",
                "iot:DeprecateThingType",
                "iot:DescribeAccountAuditConfiguration",
                "iot:DescribeAuditFinding",
                "iot:DescribeAuditMitigationActionsTask",
                "iot:DescribeAuditSuppression",
                "iot:DescribeAuditTask",
                "iot:DescribeAuthorizer",
                "iot:DescribeBillingGroup",
                "iot:DescribeCACertificate",
                "iot:DescribeCertificate",
                "iot:DescribeCustomMetric",
                "iot:DescribeDefaultAuthorizer",
                "iot:DescribeDetectMitigationActionsTask",
                "iot:DescribeDimension",
                "iot:DescribeDomainConfiguration",
                "iot:DescribeEndpoint",
                "iot:DescribeEventConfigurations",
                "iot:DescribeFleetMetric",
                "iot:DescribeIndex",
                "iot:DescribeJob",
                "iot:DescribeJobExecution",
                "iot:DescribeJobTemplate",
                "iot:DescribeMitigationAction",
                "iot:DescribeProvisioningTemplate",
                "iot:DescribeProvisioningTemplateVersion",
                "iot:DescribeRoleAlias",
                "iot:DescribeScheduledAudit",
                "iot:DescribeSecurityProfile",
                "iot:DescribeStream",
                "iot:DescribeThing",
                "iot:DescribeThingGroup",
                "iot:DescribeThingRegistrationTask",
                "iot:DescribeThingType",
                "iot:DescribeTunnel",
                "iot:DetachPolicy",
                "iot:DetachPrincipalPolicy",
                "iot:DetachSecurityProfile",
                "iot:DetachThingPrincipal",
                "iot:DisableTopicRule",
                "iot:EnableTopicRule",
                "iot:GetBehaviorModelTrainingSummaries",
                "iot:GetBucketsAggregation",
                "iot:GetCardinality",
                "iot:GetEffectivePolicies",
                "iot:GetIndexingConfiguration",
                "iot:GetJobDocument",
                "iot:GetLoggingOptions",
                "iot:GetOTAUpdate",
                "iot:GetPendingJobExecutions",
                "iot:GetPercentiles",
                "iot:GetPolicy",
                "iot:GetPolicyVersion",
                "iot:GetRegistrationCode",
                "iot:GetRetainedMessage",
                "iot:GetStatistics",
                "iot:GetThingShadow",
                "iot:GetTopicRule",
                "iot:GetTopicRuleDestination",
                "iot:GetV2LoggingOptions",
                "iot:ListActiveViolations",
                "iot:ListAttachedPolicies",
                "iot:ListAuditFindings",
                "iot:ListAuditMitigationActionsExecutions",
                "iot:ListAuditMitigationActionsTasks",
                "iot:ListAuditSuppressions",
                "iot:ListAuditTasks",
                "iot:ListAuthorizers",
                "iot:ListBillingGroups",
                "iot:ListCACertificates",
                "iot:ListCertificates",
                "iot:ListCertificatesByCA",
                "iot:ListCustomMetrics",
                "iot:ListDetectMitigationActionsExecutions",
                "iot:ListDetectMitigationActionsTasks",
                "iot:ListDimensions",
                "iot:ListDomainConfigurations",
                "iot:ListFleetMetrics",
                "iot:ListIndices",
                "iot:ListJobExecutionsForJob",
                "iot:ListJobExecutionsForThing",
                "iot:ListJobTemplates",
                "iot:ListJobs",
                "iot:ListMitigationActions",
                "iot:ListNamedShadowsForThing",
                "iot:ListOTAUpdates",
                "iot:ListOutgoingCertificates",
                "iot:ListPolicies",
                "iot:ListPolicyPrincipals",
                "iot:ListPolicyVersions",
                "iot:ListPrincipalPolicies",
                "iot:ListPrincipalThings",
                "iot:ListProvisioningTemplateVersions",
                "iot:ListProvisioningTemplates",
                "iot:ListRetainedMessages",
                "iot:ListRoleAliases",
                "iot:ListScheduledAudits",
                "iot:ListSecurityProfiles",
                "iot:ListSecurityProfilesForTarget",
                "iot:ListStreams",
                "iot:ListTagsForResource",
                "iot:ListTargetsForPolicy",
                "iot:ListTargetsForSecurityProfile",
                "iot:ListThingGroups",
                "iot:ListThingGroupsForThing",
                "iot:ListThingPrincipals",
                "iot:ListThingRegistrationTaskReports",
                "iot:ListThingRegistrationTasks",
                "iot:ListThingTypes",
                "iot:ListThings",
                "iot:ListThingsInBillingGroup",
                "iot:ListThingsInThingGroup",
                "iot:ListTopicRuleDestinations",
                "iot:ListTopicRules",
                "iot:ListTunnels",
                "iot:ListV2LoggingLevels",
                "iot:ListViolationEvents",
                "iot:OpenTunnel",
                "iot:Publish",
                "iot:Receive",
                "iot:RegisterCACertificate",
                "iot:RegisterCertificate",
                "iot:RegisterCertificateWithoutCA",
                "iot:RegisterThing",
                "iot:RejectCertificateTransfer",
                "iot:RemoveThingFromBillingGroup",
                "iot:RemoveThingFromThingGroup",
                "iot:ReplaceTopicRule",
                "iot:RetainPublish",
                "iot:SearchIndex",
                "iot:SetDefaultAuthorizer",
                "iot:SetDefaultPolicyVersion",
                "iot:SetLoggingOptions",
                "iot:SetV2LoggingLevel",
                "iot:SetV2LoggingOptions",
                "iot:StartAuditMitigationActionsTask",
                "iot:StartDetectMitigationActionsTask",
                "iot:StartNextPendingJobExecution",
                "iot:StartOnDemandAuditTask",
                "iot:StartThingRegistrationTask",
                "iot:StopThingRegistrationTask",
                "iot:Subscribe",
                "iot:TagResource",
                "iot:TestAuthorization",
                "iot:TestInvokeAuthorizer",
                "iot:TransferCertificate",
                "iot:UntagResource",
                "iot:UpdateAccountAuditConfiguration",
                "iot:UpdateAuditSuppression",
                "iot:UpdateAuthorizer",
                "iot:UpdateBillingGroup",
                "iot:UpdateCACertificate",
                "iot:UpdateCertificate",
                "iot:UpdateCustomMetric",
                "iot:UpdateDimension",
                "iot:UpdateDomainConfiguration",
                "iot:UpdateDynamicThingGroup",
                "iot:UpdateEventConfigurations",
                "iot:UpdateFleetMetric",
                "iot:UpdateIndexingConfiguration",
                "iot:UpdateJob",
                "iot:UpdateJobExecution",
                "iot:UpdateMitigationAction",
                "iot:UpdateProvisioningTemplate",
                "iot:UpdateRoleAlias",
                "iot:UpdateScheduledAudit",
                "iot:UpdateSecurityProfile",
                "iot:UpdateStream",
                "iot:UpdateThing",
                "iot:UpdateThingGroup",
                "iot:UpdateThingGroupsForThing",
                "iot:UpdateThingShadow",
                "iot:UpdateTopicRuleDestination",
                "iot:ValidateSecurityProfileBehaviors"
            ],
            "Resource": [
                "arn:aws:iot:${Region}:${Account}:${Type}/${Name}"
            ],
            "Condition": {
                "SomeCondition-zmrOQ": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-uXasp": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-uDxjr": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-ThRsn": {
                    "iot:Delete": "...some value..."
                },
                "SomeCondition-cOiJQ": {
                    "iot:DomainName": "...some value..."
                },
                "SomeCondition-tnWvf": {
                    "iot:ThingGroupArn": "...some value..."
                },
                "SomeCondition-zvhqs": {
                    "iot:TunnelDestinationService": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Migration Hub",
            "Effect": "Allow",
            "Action": [
                "mgh:AssociateCreatedArtifact",
                "mgh:AssociateDiscoveredResource",
                "mgh:CreateHomeRegionControl",
                "mgh:CreateProgressUpdateStream",
                "mgh:DeleteProgressUpdateStream",
                "mgh:DescribeApplicationState",
                "mgh:DescribeHomeRegionControls",
                "mgh:DescribeMigrationTask",
                "mgh:DisassociateCreatedArtifact",
                "mgh:DisassociateDiscoveredResource",
                "mgh:GetHomeRegion",
                "mgh:ImportMigrationTask",
                "mgh:ListApplicationStates",
                "mgh:ListCreatedArtifacts",
                "mgh:ListDiscoveredResources",
                "mgh:ListMigrationTasks",
                "mgh:ListProgressUpdateStreams",
                "mgh:NotifyApplicationState",
                "mgh:NotifyMigrationTaskState",
                "mgh:PutResourceAttributes"
            ],
            "Resource": [
                "arn:aws:mgh:<region>:<namespace>:<relative-id>"
            ]
        },
        {
            "Sid": "AWS Fault Injection Simulator",
            "Effect": "Allow",
            "Action": [
                "fis:CreateExperimentTemplate",
                "fis:DeleteExperimentTemplate",
                "fis:GetAction",
                "fis:GetExperiment",
                "fis:GetExperimentTemplate",
                "fis:InjectApiInternalError",
                "fis:InjectApiThrottleError",
                "fis:InjectApiUnavailableError",
                "fis:ListActions",
                "fis:ListExperimentTemplates",
                "fis:ListExperiments",
                "fis:ListTagsForResource",
                "fis:StartExperiment",
                "fis:StopExperiment",
                "fis:TagResource",
                "fis:UntagResource",
                "fis:UpdateExperimentTemplate"
            ],
            "Resource": [
                "arn:aws:fis:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-qKaLR": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-ctrfH": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-iYRJA": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-ZBRLG": {
                    "fis:Operations": "...some value..."
                },
                "SomeCondition-Cgsot": {
                    "fis:Percentage": "...some value..."
                },
                "SomeCondition-CWNEV": {
                    "fis:Service": "...some value..."
                },
                "SomeCondition-HkGDM": {
                    "fis:Targets": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Lambda",
            "Effect": "Allow",
            "Action": [
                "lambda:AddLayerVersionPermission",
                "lambda:AddPermission",
                "lambda:CreateAlias",
                "lambda:CreateCodeSigningConfig",
                "lambda:CreateEventSourceMapping",
                "lambda:CreateFunction",
                "lambda:DeleteAlias",
                "lambda:DeleteCodeSigningConfig",
                "lambda:DeleteEventSourceMapping",
                "lambda:DeleteFunction",
                "lambda:DeleteFunctionCodeSigningConfig",
                "lambda:DeleteFunctionConcurrency",
                "lambda:DeleteFunctionEventInvokeConfig",
                "lambda:DeleteLayerVersion",
                "lambda:DeleteProvisionedConcurrencyConfig",
                "lambda:DisableReplication",
                "lambda:EnableReplication",
                "lambda:GetAccountSettings",
                "lambda:GetAlias",
                "lambda:GetCodeSigningConfig",
                "lambda:GetEventSourceMapping",
                "lambda:GetFunction",
                "lambda:GetFunctionCodeSigningConfig",
                "lambda:GetFunctionConcurrency",
                "lambda:GetFunctionConfiguration",
                "lambda:GetFunctionEventInvokeConfig",
                "lambda:GetLayerVersion",
                "lambda:GetLayerVersionPolicy",
                "lambda:GetPolicy",
                "lambda:GetProvisionedConcurrencyConfig",
                "lambda:InvokeAsync",
                "lambda:InvokeFunction",
                "lambda:ListAliases",
                "lambda:ListCodeSigningConfigs",
                "lambda:ListEventSourceMappings",
                "lambda:ListFunctionEventInvokeConfigs",
                "lambda:ListFunctions",
                "lambda:ListFunctionsByCodeSigningConfig",
                "lambda:ListLayerVersions",
                "lambda:ListLayers",
                "lambda:ListProvisionedConcurrencyConfigs",
                "lambda:ListTags",
                "lambda:ListVersionsByFunction",
                "lambda:PublishLayerVersion",
                "lambda:PublishVersion",
                "lambda:PutFunctionCodeSigningConfig",
                "lambda:PutFunctionConcurrency",
                "lambda:PutFunctionEventInvokeConfig",
                "lambda:PutProvisionedConcurrencyConfig",
                "lambda:RemoveLayerVersionPermission",
                "lambda:RemovePermission",
                "lambda:TagResource",
                "lambda:UntagResource",
                "lambda:UpdateAlias",
                "lambda:UpdateCodeSigningConfig",
                "lambda:UpdateEventSourceMapping",
                "lambda:UpdateFunctionCode",
                "lambda:UpdateFunctionCodeSigningConfig",
                "lambda:UpdateFunctionConfiguration",
                "lambda:UpdateFunctionEventInvokeConfig"
            ],
            "Resource": [
                "arn:aws:lambda:<region>:<account>:<resourceType>:<resourceId>"
            ],
            "Condition": {
                "SomeCondition-KSIge": {
                    "lambda:CodeSigningConfigArn": "...some value..."
                },
                "SomeCondition-Utfeb": {
                    "lambda:FunctionArn": "...some value..."
                },
                "SomeCondition-IyrXD": {
                    "lambda:Layer": "...some value..."
                },
                "SomeCondition-jShGA": {
                    "lambda:Principal": "...some value..."
                },
                "SomeCondition-XPGob": {
                    "lambda:SecurityGroupIds": "...some value..."
                },
                "SomeCondition-YLSQX": {
                    "lambda:SubnetIds": "...some value..."
                },
                "SomeCondition-CzfRP": {
                    "lambda:VpcIds": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Application Migration Service",
            "Effect": "Allow",
            "Action": [
                "mgn:BatchCreateVolumeSnapshotGroupForMgn",
                "mgn:BatchDeleteSnapshotRequestForMgn",
                "mgn:ChangeServerLifeCycleState",
                "mgn:CreateReplicationConfigurationTemplate",
                "mgn:DeleteJob",
                "mgn:DeleteReplicationConfigurationTemplate",
                "mgn:DeleteSourceServer",
                "mgn:DescribeJobLogItems",
                "mgn:DescribeJobs",
                "mgn:DescribeReplicationConfigurationTemplates",
                "mgn:DescribeReplicationServerAssociationsForMgn",
                "mgn:DescribeSnapshotRequestsForMgn",
                "mgn:DescribeSourceServers",
                "mgn:DisconnectFromService",
                "mgn:FinalizeCutover",
                "mgn:GetAgentCommandForMgn",
                "mgn:GetAgentConfirmedResumeInfoForMgn",
                "mgn:GetAgentInstallationAssetsForMgn",
                "mgn:GetAgentReplicationInfoForMgn",
                "mgn:GetAgentRuntimeConfigurationForMgn",
                "mgn:GetAgentSnapshotCreditsForMgn",
                "mgn:GetChannelCommandsForMgn",
                "mgn:GetLaunchConfiguration",
                "mgn:GetReplicationConfiguration",
                "mgn:InitializeService",
                "mgn:ListTagsForResource",
                "mgn:MarkAsArchived",
                "mgn:NotifyAgentAuthenticationForMgn",
                "mgn:NotifyAgentConnectedForMgn",
                "mgn:NotifyAgentDisconnectedForMgn",
                "mgn:NotifyAgentReplicationProgressForMgn",
                "mgn:RegisterAgentForMgn",
                "mgn:RetryDataReplication",
                "mgn:SendAgentLogsForMgn",
                "mgn:SendAgentMetricsForMgn",
                "mgn:SendChannelCommandResultForMgn",
                "mgn:SendClientLogsForMgn",
                "mgn:SendClientMetricsForMgn",
                "mgn:StartCutover",
                "mgn:StartTest",
                "mgn:TagResource",
                "mgn:TerminateTargetInstances",
                "mgn:UntagResource",
                "mgn:UpdateAgentBacklogForMgn",
                "mgn:UpdateAgentConversionInfoForMgn",
                "mgn:UpdateAgentReplicationInfoForMgn",
                "mgn:UpdateAgentReplicationProcessStateForMgn",
                "mgn:UpdateAgentSourcePropertiesForMgn",
                "mgn:UpdateLaunchConfiguration",
                "mgn:UpdateReplicationConfiguration",
                "mgn:UpdateReplicationConfigurationTemplate"
            ],
            "Resource": [
                "arn:aws:mgn:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-mVdRX": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-FsVtI": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-Yreot": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Data Exchange",
            "Effect": "Allow",
            "Action": [
                "dataexchange:CancelJob",
                "dataexchange:CreateAsset",
                "dataexchange:CreateDataSet",
                "dataexchange:CreateJob",
                "dataexchange:CreateRevision",
                "dataexchange:DeleteAsset",
                "dataexchange:DeleteDataSet",
                "dataexchange:DeleteRevision",
                "dataexchange:GetAsset",
                "dataexchange:GetDataSet",
                "dataexchange:GetJob",
                "dataexchange:GetRevision",
                "dataexchange:ListDataSetRevisions",
                "dataexchange:ListDataSets",
                "dataexchange:ListJobs",
                "dataexchange:ListRevisionAssets",
                "dataexchange:ListTagsForResource",
                "dataexchange:PublishDataSet",
                "dataexchange:StartJob",
                "dataexchange:TagResource",
                "dataexchange:UntagResource",
                "dataexchange:UpdateAsset",
                "dataexchange:UpdateDataSet",
                "dataexchange:UpdateRevision"
            ],
            "Resource": [
                "arn:aws:dataexchange:<region>:<account-id>:<resource-type>/<resource_id>"
            ],
            "Condition": {
                "SomeCondition-xbPSs": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-PtmSL": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-fCPxi": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-eyYov": {
                    "dataexchange:JobType": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Machine Learning",
            "Effect": "Allow",
            "Action": [
                "machinelearning:AddTags",
                "machinelearning:CreateBatchPrediction",
                "machinelearning:CreateDataSourceFromRDS",
                "machinelearning:CreateDataSourceFromRedshift",
                "machinelearning:CreateDataSourceFromS3",
                "machinelearning:CreateEvaluation",
                "machinelearning:CreateMLModel",
                "machinelearning:CreateRealtimeEndpoint",
                "machinelearning:DeleteBatchPrediction",
                "machinelearning:DeleteDataSource",
                "machinelearning:DeleteEvaluation",
                "machinelearning:DeleteMLModel",
                "machinelearning:DeleteRealtimeEndpoint",
                "machinelearning:DeleteTags",
                "machinelearning:DescribeBatchPredictions",
                "machinelearning:DescribeDataSources",
                "machinelearning:DescribeEvaluations",
                "machinelearning:DescribeMLModels",
                "machinelearning:DescribeTags",
                "machinelearning:GetBatchPrediction",
                "machinelearning:GetDataSource",
                "machinelearning:GetEvaluation",
                "machinelearning:GetMLModel",
                "machinelearning:Predict",
                "machinelearning:UpdateBatchPrediction",
                "machinelearning:UpdateDataSource",
                "machinelearning:UpdateEvaluation",
                "machinelearning:UpdateMLModel"
            ],
            "Resource": [
                "arn:aws:machinelearning:<region>:<account_ID>:<resource_type>/<relative_ID>"
            ]
        },
        {
            "Sid": "AWS Audit Manager",
            "Effect": "Allow",
            "Action": [
                "auditmanager:AssociateAssessmentReportEvidenceFolder",
                "auditmanager:BatchAssociateAssessmentReportEvidence",
                "auditmanager:BatchCreateDelegationByAssessment",
                "auditmanager:BatchDeleteDelegationByAssessment",
                "auditmanager:BatchDisassociateAssessmentReportEvidence",
                "auditmanager:BatchImportEvidenceToAssessmentControl",
                "auditmanager:CreateAssessment",
                "auditmanager:CreateAssessmentFramework",
                "auditmanager:CreateAssessmentReport",
                "auditmanager:CreateControl",
                "auditmanager:DeleteAssessment",
                "auditmanager:DeleteAssessmentFramework",
                "auditmanager:DeleteAssessmentReport",
                "auditmanager:DeleteControl",
                "auditmanager:DeregisterAccount",
                "auditmanager:DeregisterOrganizationAdminAccount",
                "auditmanager:DisassociateAssessmentReportEvidenceFolder",
                "auditmanager:GetAccountStatus",
                "auditmanager:GetAssessment",
                "auditmanager:GetAssessmentFramework",
                "auditmanager:GetAssessmentReportUrl",
                "auditmanager:GetChangeLogs",
                "auditmanager:GetControl",
                "auditmanager:GetDelegations",
                "auditmanager:GetEvidence",
                "auditmanager:GetEvidenceByEvidenceFolder",
                "auditmanager:GetEvidenceFolder",
                "auditmanager:GetEvidenceFoldersByAssessment",
                "auditmanager:GetEvidenceFoldersByAssessmentControl",
                "auditmanager:GetOrganizationAdminAccount",
                "auditmanager:GetServicesInScope",
                "auditmanager:GetSettings",
                "auditmanager:ListAssessmentFrameworks",
                "auditmanager:ListAssessmentReports",
                "auditmanager:ListAssessments",
                "auditmanager:ListControls",
                "auditmanager:ListKeywordsForDataSource",
                "auditmanager:ListNotifications",
                "auditmanager:ListTagsForResource",
                "auditmanager:RegisterAccount",
                "auditmanager:RegisterOrganizationAdminAccount",
                "auditmanager:TagResource",
                "auditmanager:UntagResource",
                "auditmanager:UpdateAssessment",
                "auditmanager:UpdateAssessmentControl",
                "auditmanager:UpdateAssessmentControlSetStatus",
                "auditmanager:UpdateAssessmentFramework",
                "auditmanager:UpdateAssessmentStatus",
                "auditmanager:UpdateControl",
                "auditmanager:UpdateSettings",
                "auditmanager:ValidateAssessmentReportIntegrity"
            ],
            "Resource": [
                "arn:aws:auditmanager::<namespace>:<relative-id>"
            ],
            "Condition": {
                "SomeCondition-WrObM": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-hfzvj": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-GKome": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon GuardDuty",
            "Effect": "Allow",
            "Action": [
                "guardduty:AcceptInvitation",
                "guardduty:ArchiveFindings",
                "guardduty:CreateDetector",
                "guardduty:CreateFilter",
                "guardduty:CreateIPSet",
                "guardduty:CreateMembers",
                "guardduty:CreatePublishingDestination",
                "guardduty:CreateSampleFindings",
                "guardduty:CreateThreatIntelSet",
                "guardduty:DeclineInvitations",
                "guardduty:DeleteDetector",
                "guardduty:DeleteFilter",
                "guardduty:DeleteIPSet",
                "guardduty:DeleteInvitations",
                "guardduty:DeleteMembers",
                "guardduty:DeletePublishingDestination",
                "guardduty:DeleteThreatIntelSet",
                "guardduty:DescribeOrganizationConfiguration",
                "guardduty:DescribePublishingDestination",
                "guardduty:DisableOrganizationAdminAccount",
                "guardduty:DisassociateFromMasterAccount",
                "guardduty:DisassociateMembers",
                "guardduty:EnableOrganizationAdminAccount",
                "guardduty:GetDetector",
                "guardduty:GetFilter",
                "guardduty:GetFindings",
                "guardduty:GetFindingsStatistics",
                "guardduty:GetIPSet",
                "guardduty:GetInvitationsCount",
                "guardduty:GetMasterAccount",
                "guardduty:GetMemberDetectors",
                "guardduty:GetMembers",
                "guardduty:GetThreatIntelSet",
                "guardduty:GetUsageStatistics",
                "guardduty:InviteMembers",
                "guardduty:ListDetectors",
                "guardduty:ListFilters",
                "guardduty:ListFindings",
                "guardduty:ListIPSets",
                "guardduty:ListInvitations",
                "guardduty:ListMembers",
                "guardduty:ListOrganizationAdminAccounts",
                "guardduty:ListPublishingDestinations",
                "guardduty:ListTagsForResource",
                "guardduty:ListThreatIntelSets",
                "guardduty:StartMonitoringMembers",
                "guardduty:StopMonitoringMembers",
                "guardduty:TagResource",
                "guardduty:UnarchiveFindings",
                "guardduty:UntagResource",
                "guardduty:UpdateDetector",
                "guardduty:UpdateFilter",
                "guardduty:UpdateFindingsFeedback",
                "guardduty:UpdateIPSet",
                "guardduty:UpdateMemberDetectors",
                "guardduty:UpdateOrganizationConfiguration",
                "guardduty:UpdatePublishingDestination",
                "guardduty:UpdateThreatIntelSet"
            ],
            "Resource": [
                "arn:aws:guardduty:<region>:<account_ID>:.+"
            ],
            "Condition": {
                "SomeCondition-LpETv": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-wJPnZ": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-zZYDH": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon EventBridge",
            "Effect": "Allow",
            "Action": [
                "events:ActivateEventSource",
                "events:CancelReplay",
                "events:CreateApiDestination",
                "events:CreateArchive",
                "events:CreateConnection",
                "events:CreateEventBus",
                "events:CreatePartnerEventSource",
                "events:DeactivateEventSource",
                "events:DeauthorizeConnection",
                "events:DeleteApiDestination",
                "events:DeleteArchive",
                "events:DeleteConnection",
                "events:DeleteEventBus",
                "events:DeletePartnerEventSource",
                "events:DeleteRule",
                "events:DescribeApiDestination",
                "events:DescribeArchive",
                "events:DescribeConnection",
                "events:DescribeEventBus",
                "events:DescribeEventSource",
                "events:DescribePartnerEventSource",
                "events:DescribeReplay",
                "events:DescribeRule",
                "events:DisableRule",
                "events:EnableRule",
                "events:InvokeApiDestination",
                "events:ListApiDestinations",
                "events:ListArchives",
                "events:ListConnections",
                "events:ListEventBuses",
                "events:ListEventSources",
                "events:ListPartnerEventSourceAccounts",
                "events:ListPartnerEventSources",
                "events:ListReplays",
                "events:ListRuleNamesByTarget",
                "events:ListRules",
                "events:ListTagsForResource",
                "events:ListTargetsByRule",
                "events:PutEvents",
                "events:PutPartnerEvents",
                "events:PutPermission",
                "events:PutRule",
                "events:PutTargets",
                "events:RemovePermission",
                "events:RemoveTargets",
                "events:StartReplay",
                "events:TagResource",
                "events:TestEventPattern",
                "events:UntagResource",
                "events:UpdateApiDestination",
                "events:UpdateArchive",
                "events:UpdateConnection"
            ],
            "Resource": [
                "arn:aws:<serviceName>:<region>:<account>:<resourceType>/<resourceName>"
            ],
            "Condition": {
                "SomeCondition-euKwL": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-IDAhp": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-jgvUY": {
                    "aws:SourceAccount": "...some value..."
                },
                "SomeCondition-CeSZL": {
                    "aws:SourceArn": "...some value..."
                },
                "SomeCondition-WuSUz": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-kBVgc": {
                    "events:ManagedBy": "...some value..."
                },
                "SomeCondition-ljeJh": {
                    "events:TargetArn": "...some value..."
                },
                "SomeCondition-NxMbA": {
                    "events:creatorAccount": "...some value..."
                },
                "SomeCondition-gihZa": {
                    "events:detail-type": "...some value..."
                },
                "SomeCondition-pjJza": {
                    "events:detail.eventTypeCode": "...some value..."
                },
                "SomeCondition-pTjPt": {
                    "events:detail.service": "...some value..."
                },
                "SomeCondition-jJtWe": {
                    "events:detail.userIdentity.principalId": "...some value..."
                },
                "SomeCondition-mUcay": {
                    "events:eventBusInvocation": "...some value..."
                },
                "SomeCondition-rmgKM": {
                    "events:source": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Lex V2",
            "Effect": "Allow",
            "Action": [
                "lex:BuildBotLocale",
                "lex:CreateBot",
                "lex:CreateBotAlias",
                "lex:CreateBotChannel",
                "lex:CreateBotLocale",
                "lex:CreateBotVersion",
                "lex:CreateExport",
                "lex:CreateIntent",
                "lex:CreateResourcePolicy",
                "lex:CreateSlot",
                "lex:CreateSlotType",
                "lex:CreateUploadUrl",
                "lex:DeleteBot",
                "lex:DeleteBotAlias",
                "lex:DeleteBotChannel",
                "lex:DeleteBotLocale",
                "lex:DeleteBotVersion",
                "lex:DeleteExport",
                "lex:DeleteImport",
                "lex:DeleteIntent",
                "lex:DeleteResourcePolicy",
                "lex:DeleteSession",
                "lex:DeleteSlot",
                "lex:DeleteSlotType",
                "lex:DescribeBot",
                "lex:DescribeBotAlias",
                "lex:DescribeBotChannel",
                "lex:DescribeBotLocale",
                "lex:DescribeBotVersion",
                "lex:DescribeExport",
                "lex:DescribeImport",
                "lex:DescribeIntent",
                "lex:DescribeResourcePolicy",
                "lex:DescribeSlot",
                "lex:DescribeSlotType",
                "lex:GetSession",
                "lex:ListBotAliases",
                "lex:ListBotChannels",
                "lex:ListBotLocales",
                "lex:ListBotVersions",
                "lex:ListBots",
                "lex:ListBuiltInIntents",
                "lex:ListBuiltInSlotTypes",
                "lex:ListExports",
                "lex:ListImports",
                "lex:ListIntents",
                "lex:ListSlotTypes",
                "lex:ListSlots",
                "lex:ListTagsForResource",
                "lex:PutSession",
                "lex:RecognizeText",
                "lex:RecognizeUtterance",
                "lex:StartConversation",
                "lex:StartImport",
                "lex:TagResource",
                "lex:UntagResource",
                "lex:UpdateBot",
                "lex:UpdateBotAlias",
                "lex:UpdateBotLocale",
                "lex:UpdateExport",
                "lex:UpdateIntent",
                "lex:UpdateResourcePolicy",
                "lex:UpdateSlot",
                "lex:UpdateSlotType"
            ],
            "Resource": [
                "arn:aws:lex:${Region}:${Account}:${ResourceType}/${ResourceId}"
            ],
            "Condition": {
                "SomeCondition-ZeuPq": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-WXcSL": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-MfRZA": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Lex",
            "Effect": "Allow",
            "Action": [
                "lex:CreateBotVersion",
                "lex:CreateIntentVersion",
                "lex:CreateSlotTypeVersion",
                "lex:DeleteBot",
                "lex:DeleteBotAlias",
                "lex:DeleteBotChannelAssociation",
                "lex:DeleteBotVersion",
                "lex:DeleteIntent",
                "lex:DeleteIntentVersion",
                "lex:DeleteSession",
                "lex:DeleteSlotType",
                "lex:DeleteSlotTypeVersion",
                "lex:DeleteUtterances",
                "lex:GetBot",
                "lex:GetBotAlias",
                "lex:GetBotAliases",
                "lex:GetBotChannelAssociation",
                "lex:GetBotChannelAssociations",
                "lex:GetBotVersions",
                "lex:GetBots",
                "lex:GetBuiltinIntent",
                "lex:GetBuiltinIntents",
                "lex:GetBuiltinSlotTypes",
                "lex:GetExport",
                "lex:GetImport",
                "lex:GetIntent",
                "lex:GetIntentVersions",
                "lex:GetIntents",
                "lex:GetSession",
                "lex:GetSlotType",
                "lex:GetSlotTypeVersions",
                "lex:GetSlotTypes",
                "lex:GetUtterancesView",
                "lex:ListTagsForResource",
                "lex:PostContent",
                "lex:PostText",
                "lex:PutBot",
                "lex:PutBotAlias",
                "lex:PutIntent",
                "lex:PutSession",
                "lex:PutSlotType",
                "lex:StartImport",
                "lex:TagResource",
                "lex:UntagResource"
            ],
            "Resource": [
                "arn:aws:lex:<region>:<account_ID>:<type>:<name>"
            ],
            "Condition": {
                "SomeCondition-nDNPI": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-qyNcE": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-FgtUl": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-kAlLM": {
                    "lex:associatedIntents": "...some value..."
                },
                "SomeCondition-yESaB": {
                    "lex:associatedSlotTypes": "...some value..."
                },
                "SomeCondition-nNhBW": {
                    "lex:channelType": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Proton",
            "Effect": "Allow",
            "Action": [
                "proton:AcceptEnvironmentAccountConnection",
                "proton:CancelEnvironmentDeployment",
                "proton:CancelServiceInstanceDeployment",
                "proton:CancelServicePipelineDeployment",
                "proton:CreateEnvironment",
                "proton:CreateEnvironmentAccountConnection",
                "proton:CreateEnvironmentTemplate",
                "proton:CreateEnvironmentTemplateMajorVersion",
                "proton:CreateEnvironmentTemplateMinorVersion",
                "proton:CreateEnvironmentTemplateVersion",
                "proton:CreateService",
                "proton:CreateServiceTemplate",
                "proton:CreateServiceTemplateMajorVersion",
                "proton:CreateServiceTemplateMinorVersion",
                "proton:CreateServiceTemplateVersion",
                "proton:DeleteAccountRoles",
                "proton:DeleteEnvironment",
                "proton:DeleteEnvironmentAccountConnection",
                "proton:DeleteEnvironmentTemplate",
                "proton:DeleteEnvironmentTemplateMajorVersion",
                "proton:DeleteEnvironmentTemplateMinorVersion",
                "proton:DeleteEnvironmentTemplateVersion",
                "proton:DeleteService",
                "proton:DeleteServiceTemplate",
                "proton:DeleteServiceTemplateMajorVersion",
                "proton:DeleteServiceTemplateMinorVersion",
                "proton:DeleteServiceTemplateVersion",
                "proton:GetAccountRoles",
                "proton:GetAccountSettings",
                "proton:GetEnvironment",
                "proton:GetEnvironmentAccountConnection",
                "proton:GetEnvironmentTemplate",
                "proton:GetEnvironmentTemplateMajorVersion",
                "proton:GetEnvironmentTemplateMinorVersion",
                "proton:GetEnvironmentTemplateVersion",
                "proton:GetService",
                "proton:GetServiceInstance",
                "proton:GetServiceTemplate",
                "proton:GetServiceTemplateMajorVersion",
                "proton:GetServiceTemplateMinorVersion",
                "proton:GetServiceTemplateVersion",
                "proton:ListEnvironmentAccountConnections",
                "proton:ListEnvironmentTemplateMajorVersions",
                "proton:ListEnvironmentTemplateMinorVersions",
                "proton:ListEnvironmentTemplateVersions",
                "proton:ListEnvironmentTemplates",
                "proton:ListEnvironments",
                "proton:ListServiceInstances",
                "proton:ListServiceTemplateMajorVersions",
                "proton:ListServiceTemplateMinorVersions",
                "proton:ListServiceTemplateVersions",
                "proton:ListServiceTemplates",
                "proton:ListServices",
                "proton:ListTagsForResource",
                "proton:RejectEnvironmentAccountConnection",
                "proton:TagResource",
                "proton:UntagResource",
                "proton:UpdateAccountRoles",
                "proton:UpdateAccountSettings",
                "proton:UpdateEnvironment",
                "proton:UpdateEnvironmentAccountConnection",
                "proton:UpdateEnvironmentTemplate",
                "proton:UpdateEnvironmentTemplateMajorVersion",
                "proton:UpdateEnvironmentTemplateMinorVersion",
                "proton:UpdateEnvironmentTemplateVersion",
                "proton:UpdateService",
                "proton:UpdateServiceInstance",
                "proton:UpdateServicePipeline",
                "proton:UpdateServiceTemplate",
                "proton:UpdateServiceTemplateMajorVersion",
                "proton:UpdateServiceTemplateMinorVersion",
                "proton:UpdateServiceTemplateVersion"
            ],
            "Resource": [
                "arn:aws:proton:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-vHuMK": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-qnuwP": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-JORxw": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-sJrKg": {
                    "proton:EnvironmentTemplate": "...some value..."
                },
                "SomeCondition-HlScd": {
                    "proton:ServiceTemplate": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Resource Access Manager",
            "Effect": "Allow",
            "Action": [
                "ram:AcceptResourceShareInvitation",
                "ram:AssociateResourceShare",
                "ram:AssociateResourceSharePermission",
                "ram:CreateResourceShare",
                "ram:DeleteResourceShare",
                "ram:DisassociateResourceShare",
                "ram:DisassociateResourceSharePermission",
                "ram:EnableSharingWithAwsOrganization",
                "ram:GetPermission",
                "ram:GetResourcePolicies",
                "ram:GetResourceShareAssociations",
                "ram:GetResourceShareInvitations",
                "ram:GetResourceShares",
                "ram:ListPendingInvitationResources",
                "ram:ListPermissions",
                "ram:ListPrincipals",
                "ram:ListResourceSharePermissions",
                "ram:ListResourceTypes",
                "ram:ListResources",
                "ram:PromoteResourceShareCreatedFromPolicy",
                "ram:RejectResourceShareInvitation",
                "ram:TagResource",
                "ram:UntagResource",
                "ram:UpdateResourceShare"
            ],
            "Resource": [
                "arn:aws:ram:<region>:<account-id>:resource-share/<resource-uuid>"
            ],
            "Condition": {
                "SomeCondition-jnUmR": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-vIYZP": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-YBiAE": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-bIaml": {
                    "ram:AllowsExternalPrincipals": "...some value..."
                },
                "SomeCondition-Ylnru": {
                    "ram:PermissionArn": "...some value..."
                },
                "SomeCondition-DBapx": {
                    "ram:PermissionResourceType": "...some value..."
                },
                "SomeCondition-sXTzL": {
                    "ram:Principal": "...some value..."
                },
                "SomeCondition-KhekA": {
                    "ram:RequestedAllowsExternalPrincipals": "...some value..."
                },
                "SomeCondition-bhWBE": {
                    "ram:RequestedResourceType": "...some value..."
                },
                "SomeCondition-RUFVy": {
                    "ram:ResourceArn": "...some value..."
                },
                "SomeCondition-XSTAL": {
                    "ram:ResourceShareName": "...some value..."
                },
                "SomeCondition-OJXaN": {
                    "ram:ShareOwnerAccountId": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Elemental MediaConnect",
            "Effect": "Allow",
            "Action": [
                "mediaconnect:AddFlowMediaStreams",
                "mediaconnect:AddFlowOutputs",
                "mediaconnect:AddFlowSources",
                "mediaconnect:AddFlowVpcInterfaces",
                "mediaconnect:CreateFlow",
                "mediaconnect:DeleteFlow",
                "mediaconnect:DescribeFlow",
                "mediaconnect:DescribeOffering",
                "mediaconnect:DescribeReservation",
                "mediaconnect:GrantFlowEntitlements",
                "mediaconnect:ListEntitlements",
                "mediaconnect:ListFlows",
                "mediaconnect:ListOfferings",
                "mediaconnect:ListReservations",
                "mediaconnect:ListTagsForResource",
                "mediaconnect:PurchaseOffering",
                "mediaconnect:RemoveFlowMediaStream",
                "mediaconnect:RemoveFlowOutput",
                "mediaconnect:RemoveFlowSource",
                "mediaconnect:RemoveFlowVpcInterface",
                "mediaconnect:RevokeFlowEntitlement",
                "mediaconnect:StartFlow",
                "mediaconnect:StopFlow",
                "mediaconnect:TagResource",
                "mediaconnect:UntagResource",
                "mediaconnect:UpdateFlow",
                "mediaconnect:UpdateFlowEntitlement",
                "mediaconnect:UpdateFlowMediaStream",
                "mediaconnect:UpdateFlowOutput",
                "mediaconnect:UpdateFlowSource"
            ],
            "Resource": [
                "arn:${Partition}:mediaconnect:${Region}:${Account}:<namespace>:<relative-id>:<relative-name>"
            ]
        },
        {
            "Sid": "Amazon S3",
            "Effect": "Allow",
            "Action": [
                "s3:AbortMultipartUpload",
                "s3:BypassGovernanceRetention",
                "s3:CreateAccessPoint",
                "s3:CreateAccessPointForObjectLambda",
                "s3:CreateBucket",
                "s3:CreateJob",
                "s3:DeleteAccessPoint",
                "s3:DeleteAccessPointForObjectLambda",
                "s3:DeleteAccessPointPolicy",
                "s3:DeleteAccessPointPolicyForObjectLambda",
                "s3:DeleteBucket",
                "s3:DeleteBucketOwnershipControls",
                "s3:DeleteBucketPolicy",
                "s3:DeleteBucketWebsite",
                "s3:DeleteJobTagging",
                "s3:DeleteObject",
                "s3:DeleteObjectTagging",
                "s3:DeleteObjectVersion",
                "s3:DeleteObjectVersionTagging",
                "s3:DeleteStorageLensConfiguration",
                "s3:DeleteStorageLensConfigurationTagging",
                "s3:DescribeJob",
                "s3:GetAccelerateConfiguration",
                "s3:GetAccessPoint",
                "s3:GetAccessPointConfigurationForObjectLambda",
                "s3:GetAccessPointForObjectLambda",
                "s3:GetAccessPointPolicy",
                "s3:GetAccessPointPolicyForObjectLambda",
                "s3:GetAccessPointPolicyStatus",
                "s3:GetAccessPointPolicyStatusForObjectLambda",
                "s3:GetAccountPublicAccessBlock",
                "s3:GetAnalyticsConfiguration",
                "s3:GetBucketAcl",
                "s3:GetBucketCORS",
                "s3:GetBucketLocation",
                "s3:GetBucketLogging",
                "s3:GetBucketNotification",
                "s3:GetBucketObjectLockConfiguration",
                "s3:GetBucketOwnershipControls",
                "s3:GetBucketPolicy",
                "s3:GetBucketPolicyStatus",
                "s3:GetBucketPublicAccessBlock",
                "s3:GetBucketRequestPayment",
                "s3:GetBucketTagging",
                "s3:GetBucketVersioning",
                "s3:GetBucketWebsite",
                "s3:GetEncryptionConfiguration",
                "s3:GetIntelligentTieringConfiguration",
                "s3:GetInventoryConfiguration",
                "s3:GetJobTagging",
                "s3:GetLifecycleConfiguration",
                "s3:GetMetricsConfiguration",
                "s3:GetObject",
                "s3:GetObjectAcl",
                "s3:GetObjectLegalHold",
                "s3:GetObjectRetention",
                "s3:GetObjectTagging",
                "s3:GetObjectTorrent",
                "s3:GetObjectVersion",
                "s3:GetObjectVersionAcl",
                "s3:GetObjectVersionForReplication",
                "s3:GetObjectVersionTagging",
                "s3:GetObjectVersionTorrent",
                "s3:GetReplicationConfiguration",
                "s3:GetStorageLensConfiguration",
                "s3:GetStorageLensConfigurationTagging",
                "s3:GetStorageLensDashboard",
                "s3:ListAccessPoints",
                "s3:ListAccessPointsForObjectLambda",
                "s3:ListAllMyBuckets",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:ListBucketVersions",
                "s3:ListJobs",
                "s3:ListMultipartUploadParts",
                "s3:ListStorageLensConfigurations",
                "s3:ObjectOwnerOverrideToBucketOwner",
                "s3:PutAccelerateConfiguration",
                "s3:PutAccessPointConfigurationForObjectLambda",
                "s3:PutAccessPointPolicy",
                "s3:PutAccessPointPolicyForObjectLambda",
                "s3:PutAccountPublicAccessBlock",
                "s3:PutAnalyticsConfiguration",
                "s3:PutBucketAcl",
                "s3:PutBucketCORS",
                "s3:PutBucketLogging",
                "s3:PutBucketNotification",
                "s3:PutBucketObjectLockConfiguration",
                "s3:PutBucketOwnershipControls",
                "s3:PutBucketPolicy",
                "s3:PutBucketPublicAccessBlock",
                "s3:PutBucketRequestPayment",
                "s3:PutBucketTagging",
                "s3:PutBucketVersioning",
                "s3:PutBucketWebsite",
                "s3:PutEncryptionConfiguration",
                "s3:PutIntelligentTieringConfiguration",
                "s3:PutInventoryConfiguration",
                "s3:PutJobTagging",
                "s3:PutLifecycleConfiguration",
                "s3:PutMetricsConfiguration",
                "s3:PutObject",
                "s3:PutObjectAcl",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionAcl",
                "s3:PutObjectVersionTagging",
                "s3:PutReplicationConfiguration",
                "s3:PutStorageLensConfiguration",
                "s3:PutStorageLensConfigurationTagging",
                "s3:ReplicateDelete",
                "s3:ReplicateObject",
                "s3:ReplicateTags",
                "s3:RestoreObject",
                "s3:UpdateJobPriority",
                "s3:UpdateJobStatus"
            ],
            "Resource": [
                "arn:aws:s3:::<bucket_name>/<key_name>"
            ],
            "Condition": {
                "SomeCondition-YzfvQ": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-vzjDs": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-cXsPI": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-pZTUM": {
                    "s3:AccessPointNetworkOrigin": "...some value..."
                },
                "SomeCondition-XdafV": {
                    "s3:DataAccessPointAccount": "...some value..."
                },
                "SomeCondition-cmPKn": {
                    "s3:DataAccessPointArn": "...some value..."
                },
                "SomeCondition-LHRSM": {
                    "s3:ExistingJobOperation": "...some value..."
                },
                "SomeCondition-sazVD": {
                    "s3:ExistingJobPriority": "...some value..."
                },
                "SomeCondition-gMsnd": {
                    "s3:ExistingObjectTag/<key>": "...some value..."
                },
                "SomeCondition-FDSgb": {
                    "s3:JobSuspendedCause": "...some value..."
                },
                "SomeCondition-JogiO": {
                    "s3:LocationConstraint": "...some value..."
                },
                "SomeCondition-DCJaj": {
                    "s3:RequestJobOperation": "...some value..."
                },
                "SomeCondition-QSCuT": {
                    "s3:RequestJobPriority": "...some value..."
                },
                "SomeCondition-qjmPG": {
                    "s3:RequestObjectTag/<key>": "...some value..."
                },
                "SomeCondition-WMYbh": {
                    "s3:RequestObjectTagKeys": "...some value..."
                },
                "SomeCondition-kTSKu": {
                    "s3:ResourceAccount": "...some value..."
                },
                "SomeCondition-OEcsm": {
                    "s3:TlsVersion": "...some value..."
                },
                "SomeCondition-WDkNb": {
                    "s3:VersionId": "...some value..."
                },
                "SomeCondition-sIVqA": {
                    "s3:authType": "...some value..."
                },
                "SomeCondition-qeMFA": {
                    "s3:delimiter": "...some value..."
                },
                "SomeCondition-xikoT": {
                    "s3:locationconstraint": "...some value..."
                },
                "SomeCondition-ECmhq": {
                    "s3:max-keys": "...some value..."
                },
                "SomeCondition-ztpfO": {
                    "s3:object-lock-legal-hold": "...some value..."
                },
                "SomeCondition-uRnMl": {
                    "s3:object-lock-mode": "...some value..."
                },
                "SomeCondition-iIyZd": {
                    "s3:object-lock-remaining-retention-days": "...some value..."
                },
                "SomeCondition-uAhKH": {
                    "s3:object-lock-retain-until-date": "...some value..."
                },
                "SomeCondition-wScWr": {
                    "s3:prefix": "...some value..."
                },
                "SomeCondition-Yxvqs": {
                    "s3:signatureAge": "...some value..."
                },
                "SomeCondition-UHpgk": {
                    "s3:signatureversion": "...some value..."
                },
                "SomeCondition-hEiuf": {
                    "s3:versionid": "...some value..."
                },
                "SomeCondition-dsycU": {
                    "s3:x-amz-acl": "...some value..."
                },
                "SomeCondition-zJkKp": {
                    "s3:x-amz-content-sha256": "...some value..."
                },
                "SomeCondition-VrBFD": {
                    "s3:x-amz-copy-source": "...some value..."
                },
                "SomeCondition-AxmOd": {
                    "s3:x-amz-grant-full-control": "...some value..."
                },
                "SomeCondition-meqCA": {
                    "s3:x-amz-grant-read": "...some value..."
                },
                "SomeCondition-ribdy": {
                    "s3:x-amz-grant-read-acp": "...some value..."
                },
                "SomeCondition-CtTUw": {
                    "s3:x-amz-grant-write": "...some value..."
                },
                "SomeCondition-NYZUV": {
                    "s3:x-amz-grant-write-acp": "...some value..."
                },
                "SomeCondition-dJFUY": {
                    "s3:x-amz-metadata-directive": "...some value..."
                },
                "SomeCondition-VOtRD": {
                    "s3:x-amz-server-side-encryption": "...some value..."
                },
                "SomeCondition-mzXkG": {
                    "s3:x-amz-server-side-encryption-aws-kms-key-id": "...some value..."
                },
                "SomeCondition-kafWy": {
                    "s3:x-amz-storage-class": "...some value..."
                },
                "SomeCondition-dGEwn": {
                    "s3:x-amz-website-redirect-location": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon SageMaker",
            "Effect": "Allow",
            "Action": [
                "sagemaker:AddAssociation",
                "sagemaker:AddTags",
                "sagemaker:AssociateTrialComponent",
                "sagemaker:BatchGetMetrics",
                "sagemaker:BatchGetRecord",
                "sagemaker:BatchPutMetrics",
                "sagemaker:CreateAction",
                "sagemaker:CreateAlgorithm",
                "sagemaker:CreateApp",
                "sagemaker:CreateAppImageConfig",
                "sagemaker:CreateArtifact",
                "sagemaker:CreateAutoMLJob",
                "sagemaker:CreateCodeRepository",
                "sagemaker:CreateCompilationJob",
                "sagemaker:CreateContext",
                "sagemaker:CreateDataQualityJobDefinition",
                "sagemaker:CreateDeviceFleet",
                "sagemaker:CreateDomain",
                "sagemaker:CreateEdgePackagingJob",
                "sagemaker:CreateEndpoint",
                "sagemaker:CreateEndpointConfig",
                "sagemaker:CreateExperiment",
                "sagemaker:CreateFeatureGroup",
                "sagemaker:CreateFlowDefinition",
                "sagemaker:CreateHumanTaskUi",
                "sagemaker:CreateHyperParameterTuningJob",
                "sagemaker:CreateImage",
                "sagemaker:CreateImageVersion",
                "sagemaker:CreateLabelingJob",
                "sagemaker:CreateModel",
                "sagemaker:CreateModelBiasJobDefinition",
                "sagemaker:CreateModelExplainabilityJobDefinition",
                "sagemaker:CreateModelPackage",
                "sagemaker:CreateModelPackageGroup",
                "sagemaker:CreateModelQualityJobDefinition",
                "sagemaker:CreateMonitoringSchedule",
                "sagemaker:CreateNotebookInstance",
                "sagemaker:CreateNotebookInstanceLifecycleConfig",
                "sagemaker:CreatePipeline",
                "sagemaker:CreatePresignedDomainUrl",
                "sagemaker:CreatePresignedNotebookInstanceUrl",
                "sagemaker:CreateProcessingJob",
                "sagemaker:CreateProject",
                "sagemaker:CreateTrainingJob",
                "sagemaker:CreateTransformJob",
                "sagemaker:CreateTrial",
                "sagemaker:CreateTrialComponent",
                "sagemaker:CreateUserProfile",
                "sagemaker:CreateWorkforce",
                "sagemaker:CreateWorkteam",
                "sagemaker:DeleteAction",
                "sagemaker:DeleteAlgorithm",
                "sagemaker:DeleteApp",
                "sagemaker:DeleteAppImageConfig",
                "sagemaker:DeleteArtifact",
                "sagemaker:DeleteAssociation",
                "sagemaker:DeleteCodeRepository",
                "sagemaker:DeleteContext",
                "sagemaker:DeleteDataQualityJobDefinition",
                "sagemaker:DeleteDeviceFleet",
                "sagemaker:DeleteDomain",
                "sagemaker:DeleteEndpoint",
                "sagemaker:DeleteEndpointConfig",
                "sagemaker:DeleteExperiment",
                "sagemaker:DeleteFeatureGroup",
                "sagemaker:DeleteFlowDefinition",
                "sagemaker:DeleteHumanLoop",
                "sagemaker:DeleteHumanTaskUi",
                "sagemaker:DeleteImage",
                "sagemaker:DeleteImageVersion",
                "sagemaker:DeleteModel",
                "sagemaker:DeleteModelBiasJobDefinition",
                "sagemaker:DeleteModelExplainabilityJobDefinition",
                "sagemaker:DeleteModelPackage",
                "sagemaker:DeleteModelPackageGroup",
                "sagemaker:DeleteModelPackageGroupPolicy",
                "sagemaker:DeleteModelQualityJobDefinition",
                "sagemaker:DeleteMonitoringSchedule",
                "sagemaker:DeleteNotebookInstance",
                "sagemaker:DeleteNotebookInstanceLifecycleConfig",
                "sagemaker:DeletePipeline",
                "sagemaker:DeleteProject",
                "sagemaker:DeleteRecord",
                "sagemaker:DeleteTags",
                "sagemaker:DeleteTrial",
                "sagemaker:DeleteTrialComponent",
                "sagemaker:DeleteUserProfile",
                "sagemaker:DeleteWorkforce",
                "sagemaker:DeleteWorkteam",
                "sagemaker:DeregisterDevices",
                "sagemaker:DescribeAction",
                "sagemaker:DescribeAlgorithm",
                "sagemaker:DescribeApp",
                "sagemaker:DescribeAppImageConfig",
                "sagemaker:DescribeArtifact",
                "sagemaker:DescribeAutoMLJob",
                "sagemaker:DescribeCodeRepository",
                "sagemaker:DescribeCompilationJob",
                "sagemaker:DescribeContext",
                "sagemaker:DescribeDataQualityJobDefinition",
                "sagemaker:DescribeDevice",
                "sagemaker:DescribeDeviceFleet",
                "sagemaker:DescribeDomain",
                "sagemaker:DescribeEdgePackagingJob",
                "sagemaker:DescribeEndpoint",
                "sagemaker:DescribeEndpointConfig",
                "sagemaker:DescribeExperiment",
                "sagemaker:DescribeFeatureGroup",
                "sagemaker:DescribeFlowDefinition",
                "sagemaker:DescribeHumanLoop",
                "sagemaker:DescribeHumanTaskUi",
                "sagemaker:DescribeHyperParameterTuningJob",
                "sagemaker:DescribeImage",
                "sagemaker:DescribeImageVersion",
                "sagemaker:DescribeLabelingJob",
                "sagemaker:DescribeModel",
                "sagemaker:DescribeModelBiasJobDefinition",
                "sagemaker:DescribeModelExplainabilityJobDefinition",
                "sagemaker:DescribeModelPackage",
                "sagemaker:DescribeModelPackageGroup",
                "sagemaker:DescribeModelQualityJobDefinition",
                "sagemaker:DescribeMonitoringSchedule",
                "sagemaker:DescribeNotebookInstance",
                "sagemaker:DescribeNotebookInstanceLifecycleConfig",
                "sagemaker:DescribePipeline",
                "sagemaker:DescribePipelineDefinitionForExecution",
                "sagemaker:DescribePipelineExecution",
                "sagemaker:DescribeProcessingJob",
                "sagemaker:DescribeProject",
                "sagemaker:DescribeSubscribedWorkteam",
                "sagemaker:DescribeTrainingJob",
                "sagemaker:DescribeTransformJob",
                "sagemaker:DescribeTrial",
                "sagemaker:DescribeTrialComponent",
                "sagemaker:DescribeUserProfile",
                "sagemaker:DescribeWorkforce",
                "sagemaker:DescribeWorkteam",
                "sagemaker:DisableSagemakerServicecatalogPortfolio",
                "sagemaker:DisassociateTrialComponent",
                "sagemaker:EnableSagemakerServicecatalogPortfolio",
                "sagemaker:GetDeviceFleetReport",
                "sagemaker:GetDeviceRegistration",
                "sagemaker:GetModelPackageGroupPolicy",
                "sagemaker:GetRecord",
                "sagemaker:GetSagemakerServicecatalogPortfolioStatus",
                "sagemaker:GetSearchSuggestions",
                "sagemaker:InvokeEndpoint",
                "sagemaker:ListActions",
                "sagemaker:ListAlgorithms",
                "sagemaker:ListAppImageConfigs",
                "sagemaker:ListApps",
                "sagemaker:ListArtifacts",
                "sagemaker:ListAssociations",
                "sagemaker:ListAutoMLJobs",
                "sagemaker:ListCandidatesForAutoMLJob",
                "sagemaker:ListCodeRepositories",
                "sagemaker:ListCompilationJobs",
                "sagemaker:ListContexts",
                "sagemaker:ListDataQualityJobDefinitions",
                "sagemaker:ListDeviceFleets",
                "sagemaker:ListDevices",
                "sagemaker:ListDomains",
                "sagemaker:ListEdgePackagingJobs",
                "sagemaker:ListEndpointConfigs",
                "sagemaker:ListEndpoints",
                "sagemaker:ListExperiments",
                "sagemaker:ListFeatureGroups",
                "sagemaker:ListFlowDefinitions",
                "sagemaker:ListHumanLoops",
                "sagemaker:ListHumanTaskUis",
                "sagemaker:ListHyperParameterTuningJobs",
                "sagemaker:ListImageVersions",
                "sagemaker:ListImages",
                "sagemaker:ListLabelingJobs",
                "sagemaker:ListLabelingJobsForWorkteam",
                "sagemaker:ListModelBiasJobDefinitions",
                "sagemaker:ListModelExplainabilityJobDefinitions",
                "sagemaker:ListModelPackageGroups",
                "sagemaker:ListModelPackages",
                "sagemaker:ListModelQualityJobDefinitions",
                "sagemaker:ListModels",
                "sagemaker:ListMonitoringExecutions",
                "sagemaker:ListMonitoringSchedules",
                "sagemaker:ListNotebookInstanceLifecycleConfigs",
                "sagemaker:ListNotebookInstances",
                "sagemaker:ListPipelineExecutionSteps",
                "sagemaker:ListPipelineExecutions",
                "sagemaker:ListPipelineParametersForExecution",
                "sagemaker:ListPipelines",
                "sagemaker:ListProcessingJobs",
                "sagemaker:ListProjects",
                "sagemaker:ListSubscribedWorkteams",
                "sagemaker:ListTags",
                "sagemaker:ListTrainingJobs",
                "sagemaker:ListTrainingJobsForHyperParameterTuningJob",
                "sagemaker:ListTransformJobs",
                "sagemaker:ListTrialComponents",
                "sagemaker:ListTrials",
                "sagemaker:ListUserProfiles",
                "sagemaker:ListWorkforces",
                "sagemaker:ListWorkteams",
                "sagemaker:PutModelPackageGroupPolicy",
                "sagemaker:PutRecord",
                "sagemaker:RegisterDevices",
                "sagemaker:RenderUiTemplate",
                "sagemaker:Search",
                "sagemaker:SendHeartbeat",
                "sagemaker:SendPipelineExecutionStepFailure",
                "sagemaker:SendPipelineExecutionStepSuccess",
                "sagemaker:StartHumanLoop",
                "sagemaker:StartMonitoringSchedule",
                "sagemaker:StartNotebookInstance",
                "sagemaker:StartPipelineExecution",
                "sagemaker:StopAutoMLJob",
                "sagemaker:StopCompilationJob",
                "sagemaker:StopEdgePackagingJob",
                "sagemaker:StopHumanLoop",
                "sagemaker:StopHyperParameterTuningJob",
                "sagemaker:StopLabelingJob",
                "sagemaker:StopMonitoringSchedule",
                "sagemaker:StopNotebookInstance",
                "sagemaker:StopPipelineExecution",
                "sagemaker:StopProcessingJob",
                "sagemaker:StopTrainingJob",
                "sagemaker:StopTransformJob",
                "sagemaker:UpdateAction",
                "sagemaker:UpdateAppImageConfig",
                "sagemaker:UpdateArtifact",
                "sagemaker:UpdateCodeRepository",
                "sagemaker:UpdateContext",
                "sagemaker:UpdateDeviceFleet",
                "sagemaker:UpdateDevices",
                "sagemaker:UpdateDomain",
                "sagemaker:UpdateEndpoint",
                "sagemaker:UpdateEndpointWeightsAndCapacities",
                "sagemaker:UpdateExperiment",
                "sagemaker:UpdateImage",
                "sagemaker:UpdateModelPackage",
                "sagemaker:UpdateMonitoringSchedule",
                "sagemaker:UpdateNotebookInstance",
                "sagemaker:UpdateNotebookInstanceLifecycleConfig",
                "sagemaker:UpdatePipeline",
                "sagemaker:UpdatePipelineExecution",
                "sagemaker:UpdateTrainingJob",
                "sagemaker:UpdateTrial",
                "sagemaker:UpdateTrialComponent",
                "sagemaker:UpdateUserProfile",
                "sagemaker:UpdateWorkforce",
                "sagemaker:UpdateWorkteam"
            ],
            "Resource": [
                "arn:aws:sagemaker:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-wfYRu": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-WPuQn": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-NlodD": {
                    "aws:SourceIp": "...some value..."
                },
                "SomeCondition-cSPoh": {
                    "aws:SourceVpc": "...some value..."
                },
                "SomeCondition-DSAMw": {
                    "aws:SourceVpce": "...some value..."
                },
                "SomeCondition-oQJzG": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-wiFXQ": {
                    "sagemaker:AcceleratorTypes": "...some value..."
                },
                "SomeCondition-GMjSr": {
                    "sagemaker:AppNetworkAccessType": "...some value..."
                },
                "SomeCondition-TAyck": {
                    "sagemaker:DirectInternetAccess": "...some value..."
                },
                "SomeCondition-rpCPO": {
                    "sagemaker:DomainSharingOutputKmsKey": "...some value..."
                },
                "SomeCondition-jaTtL": {
                    "sagemaker:FeatureGroupOfflineStoreKmsKey": "...some value..."
                },
                "SomeCondition-nDseS": {
                    "sagemaker:FeatureGroupOfflineStoreS3Uri": "...some value..."
                },
                "SomeCondition-QgOsP": {
                    "sagemaker:FeatureGroupOnlineStoreKmsKey": "...some value..."
                },
                "SomeCondition-fzNbi": {
                    "sagemaker:FileSystemAccessMode": "...some value..."
                },
                "SomeCondition-fzEoW": {
                    "sagemaker:FileSystemDirectoryPath": "...some value..."
                },
                "SomeCondition-lLHSJ": {
                    "sagemaker:FileSystemId": "...some value..."
                },
                "SomeCondition-hVTCJ": {
                    "sagemaker:FileSystemType": "...some value..."
                },
                "SomeCondition-vbdpr": {
                    "sagemaker:HomeEfsFileSystemKmsKey": "...some value..."
                },
                "SomeCondition-qBbRV": {
                    "sagemaker:ImageArns": "...some value..."
                },
                "SomeCondition-XaAcL": {
                    "sagemaker:ImageVersionArns": "...some value..."
                },
                "SomeCondition-Hdmyq": {
                    "sagemaker:InstanceTypes": "...some value..."
                },
                "SomeCondition-lUCDn": {
                    "sagemaker:InterContainerTrafficEncryption": "...some value..."
                },
                "SomeCondition-PQhOw": {
                    "sagemaker:MaxRuntimeInSeconds": "...some value..."
                },
                "SomeCondition-ZXxQR": {
                    "sagemaker:ModelArn": "...some value..."
                },
                "SomeCondition-LUPHg": {
                    "sagemaker:NetworkIsolation": "...some value..."
                },
                "SomeCondition-DdWfV": {
                    "sagemaker:OutputKmsKey": "...some value..."
                },
                "SomeCondition-ynBkN": {
                    "sagemaker:ResourceTag/": "...some value..."
                },
                "SomeCondition-eInKJ": {
                    "sagemaker:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-gXYvw": {
                    "sagemaker:RootAccess": "...some value..."
                },
                "SomeCondition-PNitU": {
                    "sagemaker:TargetModel": "...some value..."
                },
                "SomeCondition-hLJxT": {
                    "sagemaker:VolumeKmsKey": "...some value..."
                },
                "SomeCondition-ZeQGY": {
                    "sagemaker:VpcSecurityGroupIds": "...some value..."
                },
                "SomeCondition-xefdN": {
                    "sagemaker:VpcSubnets": "...some value..."
                },
                "SomeCondition-NKkjh": {
                    "sagemaker:WorkteamArn": "...some value..."
                },
                "SomeCondition-evjsB": {
                    "sagemaker:WorkteamType": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Lake Formation",
            "Effect": "Allow",
            "Action": [
                "lakeformation:BatchGrantPermissions",
                "lakeformation:BatchRevokePermissions",
                "lakeformation:DeregisterResource",
                "lakeformation:DescribeResource",
                "lakeformation:GetDataAccess",
                "lakeformation:GetDataLakeSettings",
                "lakeformation:GetEffectivePermissionsForPath",
                "lakeformation:GrantPermissions",
                "lakeformation:ListPermissions",
                "lakeformation:ListResources",
                "lakeformation:PutDataLakeSettings",
                "lakeformation:RegisterResource",
                "lakeformation:RevokePermissions",
                "lakeformation:UpdateResource"
            ]
        },
        {
            "Sid": "Amazon Redshift Data API",
            "Effect": "Allow",
            "Action": [
                "redshift-data:BatchExecuteStatement",
                "redshift-data:CancelStatement",
                "redshift-data:DescribeStatement",
                "redshift-data:DescribeTable",
                "redshift-data:ExecuteStatement",
                "redshift-data:GetStatementResult",
                "redshift-data:ListDatabases",
                "redshift-data:ListSchemas",
                "redshift-data:ListStatements",
                "redshift-data:ListTables"
            ],
            "Resource": [
                "arn:aws:redshift:<region>:<accountID>:<relative-id>"
            ],
            "Condition": {
                "SomeCondition-zadku": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-OnciG": {
                    "redshift-data:statement-owner-iam-userid": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Managed Service for Prometheus",
            "Effect": "Allow",
            "Action": [
                "aps:CreateWorkspace",
                "aps:DeleteWorkspace",
                "aps:DescribeWorkspace",
                "aps:GetLabels",
                "aps:GetMetricMetadata",
                "aps:GetSeries",
                "aps:ListWorkspaces",
                "aps:QueryMetrics",
                "aps:RemoteWrite",
                "aps:UpdateWorkspaceAlias"
            ],
            "Resource": [
                "arn:aws:aps:<region>:<account-id>:<resource-type>/<resource_name>"
            ]
        },
        {
            "Sid": "AWS Mobile Hub",
            "Effect": "Allow",
            "Action": [
                "mobilehub:CreateProject",
                "mobilehub:CreateServiceRole",
                "mobilehub:DeleteProject",
                "mobilehub:DeleteProjectSnapshot",
                "mobilehub:DeployToStage",
                "mobilehub:DescribeBundle",
                "mobilehub:ExportBundle",
                "mobilehub:ExportProject",
                "mobilehub:GenerateProjectParameters",
                "mobilehub:GetProject",
                "mobilehub:GetProjectSnapshot",
                "mobilehub:ImportProject",
                "mobilehub:InstallBundle",
                "mobilehub:ListAvailableConnectors",
                "mobilehub:ListAvailableFeatures",
                "mobilehub:ListAvailableRegions",
                "mobilehub:ListBundles",
                "mobilehub:ListProjectSnapshots",
                "mobilehub:ListProjects",
                "mobilehub:SynchronizeProject",
                "mobilehub:UpdateProject",
                "mobilehub:ValidateProject",
                "mobilehub:VerifyServiceRole"
            ],
            "Resource": [
                "arn:aws:mobilehub:<region>:<aws_account_ID>:project/<project_ID>"
            ]
        },
        {
            "Sid": "AWS Global Accelerator",
            "Effect": "Allow",
            "Action": [
                "globalaccelerator:AddCustomRoutingEndpoints",
                "globalaccelerator:AdvertiseByoipCidr",
                "globalaccelerator:AllowCustomRoutingTraffic",
                "globalaccelerator:CreateAccelerator",
                "globalaccelerator:CreateCustomRoutingAccelerator",
                "globalaccelerator:CreateCustomRoutingEndpointGroup",
                "globalaccelerator:CreateCustomRoutingListener",
                "globalaccelerator:CreateEndpointGroup",
                "globalaccelerator:CreateListener",
                "globalaccelerator:DeleteAccelerator",
                "globalaccelerator:DeleteCustomRoutingAccelerator",
                "globalaccelerator:DeleteCustomRoutingEndpointGroup",
                "globalaccelerator:DeleteCustomRoutingListener",
                "globalaccelerator:DeleteEndpointGroup",
                "globalaccelerator:DeleteListener",
                "globalaccelerator:DenyCustomRoutingTraffic",
                "globalaccelerator:DeprovisionByoipCidr",
                "globalaccelerator:DescribeAccelerator",
                "globalaccelerator:DescribeAcceleratorAttributes",
                "globalaccelerator:DescribeCustomRoutingAccelerator",
                "globalaccelerator:DescribeCustomRoutingAcceleratorAttributes",
                "globalaccelerator:DescribeCustomRoutingEndpointGroup",
                "globalaccelerator:DescribeCustomRoutingListener",
                "globalaccelerator:DescribeEndpointGroup",
                "globalaccelerator:DescribeListener",
                "globalaccelerator:ListAccelerators",
                "globalaccelerator:ListByoipCidrs",
                "globalaccelerator:ListCustomRoutingAccelerators",
                "globalaccelerator:ListCustomRoutingEndpointGroups",
                "globalaccelerator:ListCustomRoutingListeners",
                "globalaccelerator:ListCustomRoutingPortMappings",
                "globalaccelerator:ListCustomRoutingPortMappingsByDestination",
                "globalaccelerator:ListEndpointGroups",
                "globalaccelerator:ListListeners",
                "globalaccelerator:ListTagsForResource",
                "globalaccelerator:ProvisionByoipCidr",
                "globalaccelerator:RemoveCustomRoutingEndpoints",
                "globalaccelerator:TagResource",
                "globalaccelerator:UntagResource",
                "globalaccelerator:UpdateAccelerator",
                "globalaccelerator:UpdateAcceleratorAttributes",
                "globalaccelerator:UpdateCustomRoutingAccelerator",
                "globalaccelerator:UpdateCustomRoutingAcceleratorAttributes",
                "globalaccelerator:UpdateCustomRoutingListener",
                "globalaccelerator:UpdateEndpointGroup",
                "globalaccelerator:UpdateListener",
                "globalaccelerator:WithdrawByoipCidr"
            ],
            "Resource": [
                "arn:aws:globalaccelerator::<account>:accelerator/<AcceleratorId>"
            ],
            "Condition": {
                "SomeCondition-jkomY": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-jMAZd": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-mfvMX": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Connect Customer Profiles",
            "Effect": "Allow",
            "Action": [
                "profile:AddProfileKey",
                "profile:CreateDomain",
                "profile:CreateProfile",
                "profile:DeleteDomain",
                "profile:DeleteIntegration",
                "profile:DeleteProfile",
                "profile:DeleteProfileKey",
                "profile:DeleteProfileObject",
                "profile:DeleteProfileObjectType",
                "profile:GetDomain",
                "profile:GetIntegration",
                "profile:GetProfileObjectType",
                "profile:GetProfileObjectTypeTemplate",
                "profile:ListAccountIntegrations",
                "profile:ListDomains",
                "profile:ListIntegrations",
                "profile:ListProfileObjectTypeTemplates",
                "profile:ListProfileObjectTypes",
                "profile:ListProfileObjects",
                "profile:ListTagsForResource",
                "profile:PutIntegration",
                "profile:PutProfileObject",
                "profile:PutProfileObjectType",
                "profile:SearchProfiles",
                "profile:TagResource",
                "profile:UntagResource",
                "profile:UpdateDomain",
                "profile:UpdateProfile"
            ],
            "Resource": [
                "arn:aws:profile:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-BLcMv": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-jWmFb": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-nNhaP": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Serverless Application Repository",
            "Effect": "Allow",
            "Action": [
                "serverlessrepo:CreateApplication",
                "serverlessrepo:CreateApplicationVersion",
                "serverlessrepo:CreateCloudFormationChangeSet",
                "serverlessrepo:CreateCloudFormationTemplate",
                "serverlessrepo:DeleteApplication",
                "serverlessrepo:GetApplication",
                "serverlessrepo:GetApplicationPolicy",
                "serverlessrepo:GetCloudFormationTemplate",
                "serverlessrepo:ListApplicationDependencies",
                "serverlessrepo:ListApplicationVersions",
                "serverlessrepo:ListApplications",
                "serverlessrepo:PutApplicationPolicy",
                "serverlessrepo:SearchApplications",
                "serverlessrepo:UnshareApplication",
                "serverlessrepo:UpdateApplication"
            ],
            "Resource": [
                "arn:aws:serverlessrepo:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-YbpMS": {
                    "serverlessrepo:applicationType": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Forecast",
            "Effect": "Allow",
            "Action": [
                "forecast:CreateDataset",
                "forecast:CreateDatasetGroup",
                "forecast:CreateDatasetImportJob",
                "forecast:CreateForecast",
                "forecast:CreateForecastExportJob",
                "forecast:CreatePredictor",
                "forecast:CreatePredictorBacktestExportJob",
                "forecast:DeleteDataset",
                "forecast:DeleteDatasetGroup",
                "forecast:DeleteDatasetImportJob",
                "forecast:DeleteForecast",
                "forecast:DeleteForecastExportJob",
                "forecast:DeletePredictor",
                "forecast:DeletePredictorBacktestExportJob",
                "forecast:DeleteResourceTree",
                "forecast:DescribeDataset",
                "forecast:DescribeDatasetGroup",
                "forecast:DescribeDatasetImportJob",
                "forecast:DescribeForecast",
                "forecast:DescribeForecastExportJob",
                "forecast:DescribePredictor",
                "forecast:DescribePredictorBacktestExportJob",
                "forecast:GetAccuracyMetrics",
                "forecast:ListDatasetGroups",
                "forecast:ListDatasetImportJobs",
                "forecast:ListDatasets",
                "forecast:ListForecastExportJobs",
                "forecast:ListForecasts",
                "forecast:ListPredictorBacktestExportJobs",
                "forecast:ListPredictors",
                "forecast:ListTagsForResource",
                "forecast:QueryForecast",
                "forecast:StopResource",
                "forecast:TagResource",
                "forecast:UntagResource",
                "forecast:UpdateDatasetGroup"
            ],
            "Resource": [
                "arn:aws:forecast:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-uUTHe": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-VdCLt": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-OciFz": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Cloud Directory",
            "Effect": "Allow",
            "Action": [
                "clouddirectory:AddFacetToObject",
                "clouddirectory:ApplySchema",
                "clouddirectory:AttachObject",
                "clouddirectory:AttachPolicy",
                "clouddirectory:AttachToIndex",
                "clouddirectory:AttachTypedLink",
                "clouddirectory:BatchRead",
                "clouddirectory:BatchWrite",
                "clouddirectory:CreateDirectory",
                "clouddirectory:CreateFacet",
                "clouddirectory:CreateIndex",
                "clouddirectory:CreateObject",
                "clouddirectory:CreateSchema",
                "clouddirectory:CreateTypedLinkFacet",
                "clouddirectory:DeleteDirectory",
                "clouddirectory:DeleteFacet",
                "clouddirectory:DeleteObject",
                "clouddirectory:DeleteSchema",
                "clouddirectory:DeleteTypedLinkFacet",
                "clouddirectory:DetachFromIndex",
                "clouddirectory:DetachObject",
                "clouddirectory:DetachPolicy",
                "clouddirectory:DetachTypedLink",
                "clouddirectory:DisableDirectory",
                "clouddirectory:EnableDirectory",
                "clouddirectory:GetDirectory",
                "clouddirectory:GetFacet",
                "clouddirectory:GetLinkAttributes",
                "clouddirectory:GetObjectAttributes",
                "clouddirectory:GetObjectInformation",
                "clouddirectory:GetSchemaAsJson",
                "clouddirectory:GetTypedLinkFacetInformation",
                "clouddirectory:ListAppliedSchemaArns",
                "clouddirectory:ListAttachedIndices",
                "clouddirectory:ListDevelopmentSchemaArns",
                "clouddirectory:ListDirectories",
                "clouddirectory:ListFacetAttributes",
                "clouddirectory:ListFacetNames",
                "clouddirectory:ListIncomingTypedLinks",
                "clouddirectory:ListIndex",
                "clouddirectory:ListManagedSchemaArns",
                "clouddirectory:ListObjectAttributes",
                "clouddirectory:ListObjectChildren",
                "clouddirectory:ListObjectParentPaths",
                "clouddirectory:ListObjectParents",
                "clouddirectory:ListObjectPolicies",
                "clouddirectory:ListOutgoingTypedLinks",
                "clouddirectory:ListPolicyAttachments",
                "clouddirectory:ListPublishedSchemaArns",
                "clouddirectory:ListTagsForResource",
                "clouddirectory:ListTypedLinkFacetAttributes",
                "clouddirectory:ListTypedLinkFacetNames",
                "clouddirectory:LookupPolicy",
                "clouddirectory:PublishSchema",
                "clouddirectory:PutSchemaFromJson",
                "clouddirectory:RemoveFacetFromObject",
                "clouddirectory:TagResource",
                "clouddirectory:UntagResource",
                "clouddirectory:UpdateFacet",
                "clouddirectory:UpdateLinkAttributes",
                "clouddirectory:UpdateObjectAttributes",
                "clouddirectory:UpdateSchema",
                "clouddirectory:UpdateTypedLinkFacet"
            ],
            "Resource": [
                "arn:aws:clouddirectory:<region>:<accountId>:<relative-id>"
            ]
        },
        {
            "Sid": "AWS Elemental MediaTailor",
            "Effect": "Allow",
            "Action": [
                "mediatailor:DeletePlaybackConfiguration",
                "mediatailor:GetPlaybackConfiguration",
                "mediatailor:ListPlaybackConfigurations",
                "mediatailor:ListTagsForResource",
                "mediatailor:PutPlaybackConfiguration",
                "mediatailor:TagResource",
                "mediatailor:UntagResource"
            ],
            "Resource": [
                "arn:aws:mediatailor:<region>:<account-id>:<resource-type>/<resource-name>"
            ],
            "Condition": {
                "SomeCondition-sqWyj": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-cRWAe": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-oSEhH": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Route 53",
            "Effect": "Allow",
            "Action": [
                "route53:ActivateKeySigningKey",
                "route53:AssociateVPCWithHostedZone",
                "route53:ChangeResourceRecordSets",
                "route53:ChangeTagsForResource",
                "route53:CreateHealthCheck",
                "route53:CreateHostedZone",
                "route53:CreateKeySigningKey",
                "route53:CreateQueryLoggingConfig",
                "route53:CreateReusableDelegationSet",
                "route53:CreateTrafficPolicy",
                "route53:CreateTrafficPolicyInstance",
                "route53:CreateTrafficPolicyVersion",
                "route53:CreateVPCAssociationAuthorization",
                "route53:DeactivateKeySigningKey",
                "route53:DeleteHealthCheck",
                "route53:DeleteHostedZone",
                "route53:DeleteKeySigningKey",
                "route53:DeleteQueryLoggingConfig",
                "route53:DeleteReusableDelegationSet",
                "route53:DeleteTrafficPolicy",
                "route53:DeleteTrafficPolicyInstance",
                "route53:DeleteVPCAssociationAuthorization",
                "route53:DisableHostedZoneDNSSEC",
                "route53:DisassociateVPCFromHostedZone",
                "route53:EnableHostedZoneDNSSEC",
                "route53:GetAccountLimit",
                "route53:GetChange",
                "route53:GetCheckerIpRanges",
                "route53:GetDNSSEC",
                "route53:GetGeoLocation",
                "route53:GetHealthCheck",
                "route53:GetHealthCheckCount",
                "route53:GetHealthCheckLastFailureReason",
                "route53:GetHealthCheckStatus",
                "route53:GetHostedZone",
                "route53:GetHostedZoneCount",
                "route53:GetHostedZoneLimit",
                "route53:GetQueryLoggingConfig",
                "route53:GetReusableDelegationSet",
                "route53:GetReusableDelegationSetLimit",
                "route53:GetTrafficPolicy",
                "route53:GetTrafficPolicyInstance",
                "route53:GetTrafficPolicyInstanceCount",
                "route53:ListGeoLocations",
                "route53:ListHealthChecks",
                "route53:ListHostedZones",
                "route53:ListHostedZonesByName",
                "route53:ListHostedZonesByVPC",
                "route53:ListQueryLoggingConfigs",
                "route53:ListResourceRecordSets",
                "route53:ListReusableDelegationSets",
                "route53:ListTagsForResource",
                "route53:ListTagsForResources",
                "route53:ListTrafficPolicies",
                "route53:ListTrafficPolicyInstances",
                "route53:ListTrafficPolicyInstancesByHostedZone",
                "route53:ListTrafficPolicyInstancesByPolicy",
                "route53:ListTrafficPolicyVersions",
                "route53:ListVPCAssociationAuthorizations",
                "route53:TestDNSAnswer",
                "route53:UpdateHealthCheck",
                "route53:UpdateHostedZoneComment",
                "route53:UpdateTrafficPolicyComment",
                "route53:UpdateTrafficPolicyInstance"
            ],
            "Resource": [
                "arn:aws:route53:::<resource>/<id>"
            ]
        },
        {
            "Sid": "Amazon SimpleDB",
            "Effect": "Allow",
            "Action": [
                "sdb:BatchDeleteAttributes",
                "sdb:BatchPutAttributes",
                "sdb:CreateDomain",
                "sdb:DeleteAttributes",
                "sdb:DeleteDomain",
                "sdb:DomainMetadata",
                "sdb:GetAttributes",
                "sdb:ListDomains",
                "sdb:PutAttributes",
                "sdb:Select"
            ],
            "Resource": [
                "arn:aws:sdb:<region>:<account_ID>:domain/<domain_name>"
            ]
        },
        {
            "Sid": "AWS Security Token Service",
            "Effect": "Allow",
            "Action": [
                "sts:AssumeRole",
                "sts:AssumeRoleWithSAML",
                "sts:AssumeRoleWithWebIdentity",
                "sts:DecodeAuthorizationMessage",
                "sts:GetAccessKeyInfo",
                "sts:GetCallerIdentity",
                "sts:GetFederationToken",
                "sts:GetServiceBearerToken",
                "sts:GetSessionToken",
                "sts:SetSourceIdentity",
                "sts:TagSession"
            ],
            "Resource": [
                "arn:aws:iam::<namespace>:<relative-id>"
            ],
            "Condition": {
                "SomeCondition-wZmjQ": {
                    "accounts.google.com:aud": "...some value..."
                },
                "SomeCondition-ocJlt": {
                    "accounts.google.com:oaud": "...some value..."
                },
                "SomeCondition-WUbwN": {
                    "accounts.google.com:sub": "...some value..."
                },
                "SomeCondition-gSHlm": {
                    "aws:FederatedProvider": "...some value..."
                },
                "SomeCondition-aVDUk": {
                    "aws:PrincipalTag/${TagKey}": "...some value..."
                },
                "SomeCondition-nCQhd": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-QdXzG": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-lMjmt": {
                    "aws:SourceIdentity": "...some value..."
                },
                "SomeCondition-zrenL": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-NQluC": {
                    "cognito-identity.amazonaws.com:amr": "...some value..."
                },
                "SomeCondition-qGPyT": {
                    "cognito-identity.amazonaws.com:aud": "...some value..."
                },
                "SomeCondition-WiuGA": {
                    "cognito-identity.amazonaws.com:sub": "...some value..."
                },
                "SomeCondition-pgqGT": {
                    "graph.facebook.com:app_id": "...some value..."
                },
                "SomeCondition-XWRkY": {
                    "graph.facebook.com:id": "...some value..."
                },
                "SomeCondition-wtxUg": {
                    "iam:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-qmuDg": {
                    "saml:aud": "...some value..."
                },
                "SomeCondition-AFUSl": {
                    "saml:cn": "...some value..."
                },
                "SomeCondition-SLCND": {
                    "saml:commonName": "...some value..."
                },
                "SomeCondition-axONX": {
                    "saml:doc": "...some value..."
                },
                "SomeCondition-kqbCI": {
                    "saml:eduorghomepageuri": "...some value..."
                },
                "SomeCondition-qmdDg": {
                    "saml:eduorgidentityauthnpolicyuri": "...some value..."
                },
                "SomeCondition-OsoAJ": {
                    "saml:eduorglegalname": "...some value..."
                },
                "SomeCondition-Idaqb": {
                    "saml:eduorgsuperioruri": "...some value..."
                },
                "SomeCondition-XBLGC": {
                    "saml:eduorgwhitepagesuri": "...some value..."
                },
                "SomeCondition-RYofO": {
                    "saml:edupersonaffiliation": "...some value..."
                },
                "SomeCondition-kJsCM": {
                    "saml:edupersonassurance": "...some value..."
                },
                "SomeCondition-ayKMA": {
                    "saml:edupersonentitlement": "...some value..."
                },
                "SomeCondition-mSiwu": {
                    "saml:edupersonnickname": "...some value..."
                },
                "SomeCondition-TbsQu": {
                    "saml:edupersonorgdn": "...some value..."
                },
                "SomeCondition-QKBif": {
                    "saml:edupersonorgunitdn": "...some value..."
                },
                "SomeCondition-pqdvK": {
                    "saml:edupersonprimaryaffiliation": "...some value..."
                },
                "SomeCondition-AWySn": {
                    "saml:edupersonprimaryorgunitdn": "...some value..."
                },
                "SomeCondition-TLBmx": {
                    "saml:edupersonprincipalname": "...some value..."
                },
                "SomeCondition-IiWGm": {
                    "saml:edupersonscopedaffiliation": "...some value..."
                },
                "SomeCondition-Byjkn": {
                    "saml:edupersontargetedid": "...some value..."
                },
                "SomeCondition-xhzRd": {
                    "saml:givenName": "...some value..."
                },
                "SomeCondition-nusHv": {
                    "saml:iss": "...some value..."
                },
                "SomeCondition-HJfiN": {
                    "saml:mail": "...some value..."
                },
                "SomeCondition-qfMWk": {
                    "saml:name": "...some value..."
                },
                "SomeCondition-wSiWp": {
                    "saml:namequalifier": "...some value..."
                },
                "SomeCondition-HVzLS": {
                    "saml:organizationStatus": "...some value..."
                },
                "SomeCondition-QIAjs": {
                    "saml:primaryGroupSID": "...some value..."
                },
                "SomeCondition-kBXmG": {
                    "saml:sub": "...some value..."
                },
                "SomeCondition-mIPAd": {
                    "saml:sub_type": "...some value..."
                },
                "SomeCondition-otJex": {
                    "saml:surname": "...some value..."
                },
                "SomeCondition-VZhHU": {
                    "saml:uid": "...some value..."
                },
                "SomeCondition-zsATx": {
                    "saml:x500UniqueIdentifier": "...some value..."
                },
                "SomeCondition-vgxre": {
                    "sts:ExternalId": "...some value..."
                },
                "SomeCondition-NUXSz": {
                    "sts:RoleSessionName": "...some value..."
                },
                "SomeCondition-JMOnV": {
                    "sts:SourceIdentity": "...some value..."
                },
                "SomeCondition-JkBqO": {
                    "sts:TransitiveTagKeys": "...some value..."
                },
                "SomeCondition-dBTSA": {
                    "www.amazon.com:app_id": "...some value..."
                },
                "SomeCondition-Ltmde": {
                    "www.amazon.com:user_id": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Elemental MediaPackage",
            "Effect": "Allow",
            "Action": [
                "mediapackage:CreateChannel",
                "mediapackage:CreateHarvestJob",
                "mediapackage:CreateOriginEndpoint",
                "mediapackage:DeleteChannel",
                "mediapackage:DeleteOriginEndpoint",
                "mediapackage:DescribeChannel",
                "mediapackage:DescribeHarvestJob",
                "mediapackage:DescribeOriginEndpoint",
                "mediapackage:ListChannels",
                "mediapackage:ListHarvestJobs",
                "mediapackage:ListOriginEndpoints",
                "mediapackage:ListTagsForResource",
                "mediapackage:RotateChannelCredentials",
                "mediapackage:RotateIngestEndpointCredentials",
                "mediapackage:TagResource",
                "mediapackage:UntagResource",
                "mediapackage:UpdateChannel",
                "mediapackage:UpdateOriginEndpoint"
            ],
            "Resource": [
                "arn:aws:mediapackage:<region>:<account_ID>:<resource>/<identifier>"
            ],
            "Condition": {
                "SomeCondition-HfsaO": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-eJFLT": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-qRyXo": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Keyspaces (for Apache Cassandra)",
            "Effect": "Allow",
            "Action": [
                "cassandra:Alter",
                "cassandra:Create",
                "cassandra:Drop",
                "cassandra:Modify",
                "cassandra:Restore",
                "cassandra:Select",
                "cassandra:TagResource",
                "cassandra:UntagResource"
            ],
            "Resource": [
                "arn:${Partition}:cassandra:${region}:${account}:/${resourceType}/${resourcePath}/"
            ],
            "Condition": {
                "SomeCondition-vbwUq": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-TFQGX": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-Ptzid": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Athena",
            "Effect": "Allow",
            "Action": [
                "athena:BatchGetNamedQuery",
                "athena:BatchGetQueryExecution",
                "athena:CreateDataCatalog",
                "athena:CreateNamedQuery",
                "athena:CreatePreparedStatement",
                "athena:CreateWorkGroup",
                "athena:DeleteDataCatalog",
                "athena:DeleteNamedQuery",
                "athena:DeletePreparedStatement",
                "athena:DeleteWorkGroup",
                "athena:GetDataCatalog",
                "athena:GetDatabase",
                "athena:GetNamedQuery",
                "athena:GetPreparedStatement",
                "athena:GetQueryExecution",
                "athena:GetQueryResults",
                "athena:GetQueryResultsStream",
                "athena:GetTableMetadata",
                "athena:GetWorkGroup",
                "athena:ListDataCatalogs",
                "athena:ListDatabases",
                "athena:ListEngineVersions",
                "athena:ListNamedQueries",
                "athena:ListPreparedStatements",
                "athena:ListQueryExecutions",
                "athena:ListTableMetadata",
                "athena:ListTagsForResource",
                "athena:ListWorkGroups",
                "athena:StartQueryExecution",
                "athena:StopQueryExecution",
                "athena:TagResource",
                "athena:UntagResource",
                "athena:UpdateDataCatalog",
                "athena:UpdatePreparedStatement",
                "athena:UpdateWorkGroup"
            ],
            "Resource": [
                "arn:${Partition}:athena:${Region}:${Account}:${resourceType}/${resourcePath}"
            ],
            "Condition": {
                "SomeCondition-UaSzY": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-ImpTx": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-mhfdw": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Marketplace Metering Service",
            "Effect": "Allow",
            "Action": [
                "aws-marketplace:BatchMeterUsage",
                "aws-marketplace:MeterUsage",
                "aws-marketplace:RegisterUsage",
                "aws-marketplace:ResolveCustomer"
            ]
        },
        {
            "Sid": "AWS Marketplace Procurement Systems Integration",
            "Effect": "Allow",
            "Action": [
                "aws-marketplace:DescribeProcurementSystemConfiguration",
                "aws-marketplace:PutProcurementSystemConfiguration"
            ]
        },
        {
            "Sid": "AWS Marketplace Catalog",
            "Effect": "Allow",
            "Action": [
                "aws-marketplace:CancelChangeSet",
                "aws-marketplace:CompleteTask",
                "aws-marketplace:DescribeChangeSet",
                "aws-marketplace:DescribeEntity",
                "aws-marketplace:DescribeTask",
                "aws-marketplace:ListChangeSets",
                "aws-marketplace:ListEntities",
                "aws-marketplace:ListTasks",
                "aws-marketplace:StartChangeSet",
                "aws-marketplace:UpdateTask"
            ],
            "Resource": [
                "arn:aws:aws-marketplace:<region>:<account>:<catalog>/<resource_type>/<resource_id>"
            ],
            "Condition": {
                "SomeCondition-tThsl": {
                    "catalog:ChangeType": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Marketplace Image Building Service",
            "Effect": "Allow",
            "Action": [
                "aws-marketplace:DescribeBuilds",
                "aws-marketplace:ListBuilds",
                "aws-marketplace:StartBuild"
            ]
        },
        {
            "Sid": "AWS Marketplace Entitlement Service",
            "Effect": "Allow",
            "Action": [
                "aws-marketplace:GetEntitlements"
            ]
        },
        {
            "Sid": "AWS Marketplace",
            "Effect": "Allow",
            "Action": [
                "aws-marketplace:AcceptAgreementApprovalRequest",
                "aws-marketplace:CancelAgreementRequest",
                "aws-marketplace:DescribeAgreement",
                "aws-marketplace:GetAgreementApprovalRequest",
                "aws-marketplace:GetAgreementRequest",
                "aws-marketplace:GetAgreementTerms",
                "aws-marketplace:ListAgreementApprovalRequests",
                "aws-marketplace:ListAgreementRequests",
                "aws-marketplace:RejectAgreementApprovalRequest",
                "aws-marketplace:SearchAgreements",
                "aws-marketplace:Subscribe",
                "aws-marketplace:Unsubscribe",
                "aws-marketplace:UpdateAgreementApprovalRequest",
                "aws-marketplace:ViewSubscriptions"
            ],
            "Condition": {
                "SomeCondition-pwNMJ": {
                    "aws-marketplace:AgreementType": "...some value..."
                },
                "SomeCondition-UxkyT": {
                    "aws-marketplace:PartyType": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Private Marketplace",
            "Effect": "Allow",
            "Action": [
                "aws-marketplace:AssociateProductsWithPrivateMarketplace",
                "aws-marketplace:CreatePrivateMarketplace",
                "aws-marketplace:CreatePrivateMarketplaceRequests",
                "aws-marketplace:DescribePrivateMarketplaceRequests",
                "aws-marketplace:DescribePrivateMarketplaceStatus",
                "aws-marketplace:DisassociateProductsFromPrivateMarketplace",
                "aws-marketplace:ListPrivateMarketplaceRequests"
            ]
        },
        {
            "Sid": "Amazon Pinpoint",
            "Effect": "Allow",
            "Action": [
                "mobiletargeting:CreateApp",
                "mobiletargeting:CreateCampaign",
                "mobiletargeting:CreateEmailTemplate",
                "mobiletargeting:CreateExportJob",
                "mobiletargeting:CreateImportJob",
                "mobiletargeting:CreateJourney",
                "mobiletargeting:CreatePushTemplate",
                "mobiletargeting:CreateRecommenderConfiguration",
                "mobiletargeting:CreateSegment",
                "mobiletargeting:CreateSmsTemplate",
                "mobiletargeting:CreateVoiceTemplate",
                "mobiletargeting:DeleteAdmChannel",
                "mobiletargeting:DeleteApnsChannel",
                "mobiletargeting:DeleteApnsSandboxChannel",
                "mobiletargeting:DeleteApnsVoipChannel",
                "mobiletargeting:DeleteApnsVoipSandboxChannel",
                "mobiletargeting:DeleteApp",
                "mobiletargeting:DeleteBaiduChannel",
                "mobiletargeting:DeleteCampaign",
                "mobiletargeting:DeleteEmailChannel",
                "mobiletargeting:DeleteEmailTemplate",
                "mobiletargeting:DeleteEndpoint",
                "mobiletargeting:DeleteEventStream",
                "mobiletargeting:DeleteGcmChannel",
                "mobiletargeting:DeleteJourney",
                "mobiletargeting:DeletePushTemplate",
                "mobiletargeting:DeleteRecommenderConfiguration",
                "mobiletargeting:DeleteSegment",
                "mobiletargeting:DeleteSmsChannel",
                "mobiletargeting:DeleteSmsTemplate",
                "mobiletargeting:DeleteUserEndpoints",
                "mobiletargeting:DeleteVoiceChannel",
                "mobiletargeting:DeleteVoiceTemplate",
                "mobiletargeting:GetAdmChannel",
                "mobiletargeting:GetApnsChannel",
                "mobiletargeting:GetApnsSandboxChannel",
                "mobiletargeting:GetApnsVoipChannel",
                "mobiletargeting:GetApnsVoipSandboxChannel",
                "mobiletargeting:GetApp",
                "mobiletargeting:GetApplicationDateRangeKpi",
                "mobiletargeting:GetApplicationSettings",
                "mobiletargeting:GetApps",
                "mobiletargeting:GetBaiduChannel",
                "mobiletargeting:GetCampaign",
                "mobiletargeting:GetCampaignActivities",
                "mobiletargeting:GetCampaignDateRangeKpi",
                "mobiletargeting:GetCampaignVersion",
                "mobiletargeting:GetCampaignVersions",
                "mobiletargeting:GetCampaigns",
                "mobiletargeting:GetChannels",
                "mobiletargeting:GetEmailChannel",
                "mobiletargeting:GetEmailTemplate",
                "mobiletargeting:GetEndpoint",
                "mobiletargeting:GetEventStream",
                "mobiletargeting:GetExportJob",
                "mobiletargeting:GetExportJobs",
                "mobiletargeting:GetGcmChannel",
                "mobiletargeting:GetImportJob",
                "mobiletargeting:GetImportJobs",
                "mobiletargeting:GetJourney",
                "mobiletargeting:GetJourneyDateRangeKpi",
                "mobiletargeting:GetJourneyExecutionActivityMetrics",
                "mobiletargeting:GetJourneyExecutionMetrics",
                "mobiletargeting:GetPushTemplate",
                "mobiletargeting:GetRecommenderConfiguration",
                "mobiletargeting:GetRecommenderConfigurations",
                "mobiletargeting:GetSegment",
                "mobiletargeting:GetSegmentExportJobs",
                "mobiletargeting:GetSegmentImportJobs",
                "mobiletargeting:GetSegmentVersion",
                "mobiletargeting:GetSegmentVersions",
                "mobiletargeting:GetSegments",
                "mobiletargeting:GetSmsChannel",
                "mobiletargeting:GetSmsTemplate",
                "mobiletargeting:GetUserEndpoints",
                "mobiletargeting:GetVoiceChannel",
                "mobiletargeting:GetVoiceTemplate",
                "mobiletargeting:ListJourneys",
                "mobiletargeting:ListTagsForResource",
                "mobiletargeting:ListTemplateVersions",
                "mobiletargeting:ListTemplates",
                "mobiletargeting:PhoneNumberValidate",
                "mobiletargeting:PutEventStream",
                "mobiletargeting:PutEvents",
                "mobiletargeting:RemoveAttributes",
                "mobiletargeting:SendMessages",
                "mobiletargeting:SendUsersMessages",
                "mobiletargeting:TagResource",
                "mobiletargeting:UntagResource",
                "mobiletargeting:UpdateAdmChannel",
                "mobiletargeting:UpdateApnsChannel",
                "mobiletargeting:UpdateApnsSandboxChannel",
                "mobiletargeting:UpdateApnsVoipChannel",
                "mobiletargeting:UpdateApnsVoipSandboxChannel",
                "mobiletargeting:UpdateApplicationSettings",
                "mobiletargeting:UpdateBaiduChannel",
                "mobiletargeting:UpdateCampaign",
                "mobiletargeting:UpdateEmailChannel",
                "mobiletargeting:UpdateEmailTemplate",
                "mobiletargeting:UpdateEndpoint",
                "mobiletargeting:UpdateEndpointsBatch",
                "mobiletargeting:UpdateGcmChannel",
                "mobiletargeting:UpdateJourney",
                "mobiletargeting:UpdateJourneyState",
                "mobiletargeting:UpdatePushTemplate",
                "mobiletargeting:UpdateRecommenderConfiguration",
                "mobiletargeting:UpdateSegment",
                "mobiletargeting:UpdateSmsChannel",
                "mobiletargeting:UpdateSmsTemplate",
                "mobiletargeting:UpdateTemplateActiveVersion",
                "mobiletargeting:UpdateVoiceChannel",
                "mobiletargeting:UpdateVoiceTemplate"
            ],
            "Resource": [
                "arn:aws:mobiletargeting:<region>:<account_ID>:.+"
            ],
            "Condition": {
                "SomeCondition-QXhEH": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-ZitPI": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-BQcCP": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Sumerian",
            "Effect": "Allow",
            "Action": [
                "sumerian:Login",
                "sumerian:ViewRelease"
            ],
            "Resource": [
                "arn:aws:sumerian:<region>:<account-id>:<sumerian_resource_path>"
            ]
        },
        {
            "Sid": "AWS Auto Scaling",
            "Effect": "Allow",
            "Action": [
                "autoscaling-plans:CreateScalingPlan",
                "autoscaling-plans:DeleteScalingPlan",
                "autoscaling-plans:DescribeScalingPlanResources",
                "autoscaling-plans:DescribeScalingPlans",
                "autoscaling-plans:GetScalingPlanResourceForecastData",
                "autoscaling-plans:UpdateScalingPlan"
            ]
        },
        {
            "Sid": "AWS Cost and Usage Report",
            "Effect": "Allow",
            "Action": [
                "cur:DeleteReportDefinition",
                "cur:DescribeReportDefinitions",
                "cur:ModifyReportDefinition",
                "cur:PutReportDefinition"
            ],
            "Resource": [
                "arn:aws:cur:<region>:<account_ID>:definition/<reportname>"
            ]
        },
        {
            "Sid": "AWS Identity Store",
            "Effect": "Allow",
            "Action": [
                "identitystore:DescribeGroup",
                "identitystore:DescribeUser",
                "identitystore:ListGroups",
                "identitystore:ListUsers"
            ]
        },
        {
            "Sid": "Elemental Support Cases",
            "Effect": "Allow",
            "Action": [
                "elemental-support-cases:CheckCasePermission",
                "elemental-support-cases:CreateCase",
                "elemental-support-cases:GetCase",
                "elemental-support-cases:GetCases",
                "elemental-support-cases:UpdateCase"
            ]
        },
        {
            "Sid": "Amazon Route 53 Domains",
            "Effect": "Allow",
            "Action": [
                "route53domains:AcceptDomainTransferFromAnotherAwsAccount",
                "route53domains:CancelDomainTransferToAnotherAwsAccount",
                "route53domains:CheckDomainAvailability",
                "route53domains:CheckDomainTransferability",
                "route53domains:DeleteTagsForDomain",
                "route53domains:DisableDomainAutoRenew",
                "route53domains:DisableDomainTransferLock",
                "route53domains:EnableDomainAutoRenew",
                "route53domains:EnableDomainTransferLock",
                "route53domains:GetContactReachabilityStatus",
                "route53domains:GetDomainDetail",
                "route53domains:GetDomainSuggestions",
                "route53domains:GetOperationDetail",
                "route53domains:ListDomains",
                "route53domains:ListOperations",
                "route53domains:ListTagsForDomain",
                "route53domains:RegisterDomain",
                "route53domains:RejectDomainTransferFromAnotherAwsAccount",
                "route53domains:RenewDomain",
                "route53domains:ResendContactReachabilityEmail",
                "route53domains:RetrieveDomainAuthCode",
                "route53domains:TransferDomain",
                "route53domains:TransferDomainToAnotherAwsAccount",
                "route53domains:UpdateDomainContact",
                "route53domains:UpdateDomainContactPrivacy",
                "route53domains:UpdateDomainNameservers",
                "route53domains:UpdateTagsForDomain",
                "route53domains:ViewBilling"
            ]
        },
        {
            "Sid": "AWS OpsWorks",
            "Effect": "Allow",
            "Action": [
                "opsworks:AssignInstance",
                "opsworks:AssignVolume",
                "opsworks:AssociateElasticIp",
                "opsworks:AttachElasticLoadBalancer",
                "opsworks:CloneStack",
                "opsworks:CreateApp",
                "opsworks:CreateDeployment",
                "opsworks:CreateInstance",
                "opsworks:CreateLayer",
                "opsworks:CreateStack",
                "opsworks:CreateUserProfile",
                "opsworks:DeleteApp",
                "opsworks:DeleteInstance",
                "opsworks:DeleteLayer",
                "opsworks:DeleteStack",
                "opsworks:DeleteUserProfile",
                "opsworks:DeregisterEcsCluster",
                "opsworks:DeregisterElasticIp",
                "opsworks:DeregisterInstance",
                "opsworks:DeregisterRdsDbInstance",
                "opsworks:DeregisterVolume",
                "opsworks:DescribeAgentVersions",
                "opsworks:DescribeApps",
                "opsworks:DescribeCommands",
                "opsworks:DescribeDeployments",
                "opsworks:DescribeEcsClusters",
                "opsworks:DescribeElasticIps",
                "opsworks:DescribeElasticLoadBalancers",
                "opsworks:DescribeInstances",
                "opsworks:DescribeLayers",
                "opsworks:DescribeLoadBasedAutoScaling",
                "opsworks:DescribeMyUserProfile",
                "opsworks:DescribeOperatingSystems",
                "opsworks:DescribePermissions",
                "opsworks:DescribeRaidArrays",
                "opsworks:DescribeRdsDbInstances",
                "opsworks:DescribeServiceErrors",
                "opsworks:DescribeStackProvisioningParameters",
                "opsworks:DescribeStackSummary",
                "opsworks:DescribeStacks",
                "opsworks:DescribeTimeBasedAutoScaling",
                "opsworks:DescribeUserProfiles",
                "opsworks:DescribeVolumes",
                "opsworks:DetachElasticLoadBalancer",
                "opsworks:DisassociateElasticIp",
                "opsworks:GetHostnameSuggestion",
                "opsworks:GrantAccess",
                "opsworks:ListTags",
                "opsworks:RebootInstance",
                "opsworks:RegisterEcsCluster",
                "opsworks:RegisterElasticIp",
                "opsworks:RegisterInstance",
                "opsworks:RegisterRdsDbInstance",
                "opsworks:RegisterVolume",
                "opsworks:SetLoadBasedAutoScaling",
                "opsworks:SetPermission",
                "opsworks:SetTimeBasedAutoScaling",
                "opsworks:StartInstance",
                "opsworks:StartStack",
                "opsworks:StopInstance",
                "opsworks:StopStack",
                "opsworks:TagResource",
                "opsworks:UnassignInstance",
                "opsworks:UnassignVolume",
                "opsworks:UntagResource",
                "opsworks:UpdateApp",
                "opsworks:UpdateElasticIp",
                "opsworks:UpdateInstance",
                "opsworks:UpdateLayer",
                "opsworks:UpdateMyUserProfile",
                "opsworks:UpdateRdsDbInstance",
                "opsworks:UpdateStack",
                "opsworks:UpdateUserProfile",
                "opsworks:UpdateVolume"
            ],
            "Resource": [
                "arn:aws:<serviceName>:<region>:<account>:<resourceType>/<resourceName>"
            ]
        },
        {
            "Sid": "Amazon FreeRTOS",
            "Effect": "Allow",
            "Action": [
                "freertos:CreateSoftwareConfiguration",
                "freertos:DeleteSoftwareConfiguration",
                "freertos:DescribeHardwarePlatform",
                "freertos:DescribeSoftwareConfiguration",
                "freertos:GetSoftwareURL",
                "freertos:GetSoftwareURLForConfiguration",
                "freertos:ListFreeRTOSVersions",
                "freertos:ListHardwarePlatforms",
                "freertos:ListHardwareVendors",
                "freertos:ListSoftwareConfigurations",
                "freertos:UpdateSoftwareConfiguration"
            ],
            "Resource": [
                "arn:${Partition}:freertos:<region>:<account_ID>:<type>/<name>"
            ],
            "Condition": {
                "SomeCondition-jtRGA": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-gNtxp": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-uxItm": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS CodeDeploy",
            "Effect": "Allow",
            "Action": [
                "codedeploy:AddTagsToOnPremisesInstances",
                "codedeploy:BatchGetApplicationRevisions",
                "codedeploy:BatchGetApplications",
                "codedeploy:BatchGetDeploymentGroups",
                "codedeploy:BatchGetDeploymentInstances",
                "codedeploy:BatchGetDeploymentTargets",
                "codedeploy:BatchGetDeployments",
                "codedeploy:BatchGetOnPremisesInstances",
                "codedeploy:ContinueDeployment",
                "codedeploy:CreateApplication",
                "codedeploy:CreateCloudFormationDeployment",
                "codedeploy:CreateDeployment",
                "codedeploy:CreateDeploymentConfig",
                "codedeploy:CreateDeploymentGroup",
                "codedeploy:DeleteApplication",
                "codedeploy:DeleteDeploymentConfig",
                "codedeploy:DeleteDeploymentGroup",
                "codedeploy:DeleteGitHubAccountToken",
                "codedeploy:DeleteResourcesByExternalId",
                "codedeploy:DeregisterOnPremisesInstance",
                "codedeploy:GetApplication",
                "codedeploy:GetApplicationRevision",
                "codedeploy:GetDeployment",
                "codedeploy:GetDeploymentConfig",
                "codedeploy:GetDeploymentGroup",
                "codedeploy:GetDeploymentInstance",
                "codedeploy:GetDeploymentTarget",
                "codedeploy:GetOnPremisesInstance",
                "codedeploy:ListApplicationRevisions",
                "codedeploy:ListApplications",
                "codedeploy:ListDeploymentConfigs",
                "codedeploy:ListDeploymentGroups",
                "codedeploy:ListDeploymentInstances",
                "codedeploy:ListDeploymentTargets",
                "codedeploy:ListDeployments",
                "codedeploy:ListGitHubAccountTokenNames",
                "codedeploy:ListOnPremisesInstances",
                "codedeploy:ListTagsForResource",
                "codedeploy:PutLifecycleEventHookExecutionStatus",
                "codedeploy:RegisterApplicationRevision",
                "codedeploy:RegisterOnPremisesInstance",
                "codedeploy:RemoveTagsFromOnPremisesInstances",
                "codedeploy:SkipWaitTimeForInstanceTermination",
                "codedeploy:StopDeployment",
                "codedeploy:TagResource",
                "codedeploy:UntagResource",
                "codedeploy:UpdateApplication",
                "codedeploy:UpdateDeploymentGroup"
            ],
            "Resource": [
                "arn:aws:codedeploy:region:account:resource-type:resource-specifier"
            ],
            "Condition": {
                "SomeCondition-mDsnT": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-XaIkN": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-VXNFQ": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Identity And Access Management",
            "Effect": "Allow",
            "Action": [
                "iam:AddClientIDToOpenIDConnectProvider",
                "iam:AddRoleToInstanceProfile",
                "iam:AddUserToGroup",
                "iam:AttachGroupPolicy",
                "iam:AttachRolePolicy",
                "iam:AttachUserPolicy",
                "iam:ChangePassword",
                "iam:CreateAccessKey",
                "iam:CreateAccountAlias",
                "iam:CreateGroup",
                "iam:CreateInstanceProfile",
                "iam:CreateLoginProfile",
                "iam:CreateOpenIDConnectProvider",
                "iam:CreatePolicy",
                "iam:CreatePolicyVersion",
                "iam:CreateRole",
                "iam:CreateSAMLProvider",
                "iam:CreateServiceLinkedRole",
                "iam:CreateServiceSpecificCredential",
                "iam:CreateUser",
                "iam:CreateVirtualMFADevice",
                "iam:DeactivateMFADevice",
                "iam:DeleteAccessKey",
                "iam:DeleteAccountAlias",
                "iam:DeleteAccountPasswordPolicy",
                "iam:DeleteGroup",
                "iam:DeleteGroupPolicy",
                "iam:DeleteInstanceProfile",
                "iam:DeleteLoginProfile",
                "iam:DeleteOpenIDConnectProvider",
                "iam:DeletePolicy",
                "iam:DeletePolicyVersion",
                "iam:DeleteRole",
                "iam:DeleteRolePermissionsBoundary",
                "iam:DeleteRolePolicy",
                "iam:DeleteSAMLProvider",
                "iam:DeleteSSHPublicKey",
                "iam:DeleteServerCertificate",
                "iam:DeleteServiceLinkedRole",
                "iam:DeleteServiceSpecificCredential",
                "iam:DeleteSigningCertificate",
                "iam:DeleteUser",
                "iam:DeleteUserPermissionsBoundary",
                "iam:DeleteUserPolicy",
                "iam:DeleteVirtualMFADevice",
                "iam:DetachGroupPolicy",
                "iam:DetachRolePolicy",
                "iam:DetachUserPolicy",
                "iam:EnableMFADevice",
                "iam:GenerateCredentialReport",
                "iam:GenerateOrganizationsAccessReport",
                "iam:GenerateServiceLastAccessedDetails",
                "iam:GetAccessKeyLastUsed",
                "iam:GetAccountAuthorizationDetails",
                "iam:GetAccountPasswordPolicy",
                "iam:GetAccountSummary",
                "iam:GetContextKeysForCustomPolicy",
                "iam:GetContextKeysForPrincipalPolicy",
                "iam:GetCredentialReport",
                "iam:GetGroup",
                "iam:GetGroupPolicy",
                "iam:GetInstanceProfile",
                "iam:GetLoginProfile",
                "iam:GetOpenIDConnectProvider",
                "iam:GetOrganizationsAccessReport",
                "iam:GetPolicy",
                "iam:GetPolicyVersion",
                "iam:GetRole",
                "iam:GetRolePolicy",
                "iam:GetSAMLProvider",
                "iam:GetSSHPublicKey",
                "iam:GetServerCertificate",
                "iam:GetServiceLastAccessedDetails",
                "iam:GetServiceLastAccessedDetailsWithEntities",
                "iam:GetServiceLinkedRoleDeletionStatus",
                "iam:GetUser",
                "iam:GetUserPolicy",
                "iam:ListAccessKeys",
                "iam:ListAccountAliases",
                "iam:ListAttachedGroupPolicies",
                "iam:ListAttachedRolePolicies",
                "iam:ListAttachedUserPolicies",
                "iam:ListEntitiesForPolicy",
                "iam:ListGroupPolicies",
                "iam:ListGroups",
                "iam:ListGroupsForUser",
                "iam:ListInstanceProfileTags",
                "iam:ListInstanceProfiles",
                "iam:ListInstanceProfilesForRole",
                "iam:ListMFADeviceTags",
                "iam:ListMFADevices",
                "iam:ListOpenIDConnectProviderTags",
                "iam:ListOpenIDConnectProviders",
                "iam:ListPolicies",
                "iam:ListPoliciesGrantingServiceAccess",
                "iam:ListPolicyTags",
                "iam:ListPolicyVersions",
                "iam:ListRolePolicies",
                "iam:ListRoleTags",
                "iam:ListRoles",
                "iam:ListSAMLProviderTags",
                "iam:ListSAMLProviders",
                "iam:ListSSHPublicKeys",
                "iam:ListServerCertificateTags",
                "iam:ListServerCertificates",
                "iam:ListServiceSpecificCredentials",
                "iam:ListSigningCertificates",
                "iam:ListUserPolicies",
                "iam:ListUserTags",
                "iam:ListUsers",
                "iam:ListVirtualMFADevices",
                "iam:PassRole",
                "iam:PutGroupPolicy",
                "iam:PutRolePermissionsBoundary",
                "iam:PutRolePolicy",
                "iam:PutUserPermissionsBoundary",
                "iam:PutUserPolicy",
                "iam:RemoveClientIDFromOpenIDConnectProvider",
                "iam:RemoveRoleFromInstanceProfile",
                "iam:RemoveUserFromGroup",
                "iam:ResetServiceSpecificCredential",
                "iam:ResyncMFADevice",
                "iam:SetDefaultPolicyVersion",
                "iam:SetSecurityTokenServicePreferences",
                "iam:SimulateCustomPolicy",
                "iam:SimulatePrincipalPolicy",
                "iam:TagInstanceProfile",
                "iam:TagMFADevice",
                "iam:TagOpenIDConnectProvider",
                "iam:TagPolicy",
                "iam:TagRole",
                "iam:TagSAMLProvider",
                "iam:TagServerCertificate",
                "iam:TagUser",
                "iam:UntagInstanceProfile",
                "iam:UntagMFADevice",
                "iam:UntagOpenIDConnectProvider",
                "iam:UntagPolicy",
                "iam:UntagRole",
                "iam:UntagSAMLProvider",
                "iam:UntagServerCertificate",
                "iam:UntagUser",
                "iam:UpdateAccessKey",
                "iam:UpdateAccountPasswordPolicy",
                "iam:UpdateAssumeRolePolicy",
                "iam:UpdateGroup",
                "iam:UpdateLoginProfile",
                "iam:UpdateOpenIDConnectProviderThumbprint",
                "iam:UpdateRole",
                "iam:UpdateRoleDescription",
                "iam:UpdateSAMLProvider",
                "iam:UpdateSSHPublicKey",
                "iam:UpdateServerCertificate",
                "iam:UpdateServiceSpecificCredential",
                "iam:UpdateSigningCertificate",
                "iam:UpdateUser",
                "iam:UploadSSHPublicKey",
                "iam:UploadServerCertificate",
                "iam:UploadSigningCertificate"
            ],
            "Resource": [
                "arn:aws:iam::<namespace>:<relative-id>"
            ],
            "Condition": {
                "SomeCondition-MgLDq": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-PORIE": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-RVKfw": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-CHeBh": {
                    "iam:AWSServiceName": "...some value..."
                },
                "SomeCondition-QmbDN": {
                    "iam:AssociatedResourceArn": "...some value..."
                },
                "SomeCondition-XKRMe": {
                    "iam:OrganizationsPolicyId": "...some value..."
                },
                "SomeCondition-mMtEz": {
                    "iam:PassedToService": "...some value..."
                },
                "SomeCondition-FpQoI": {
                    "iam:PermissionsBoundary": "...some value..."
                },
                "SomeCondition-UYHOw": {
                    "iam:PolicyARN": "...some value..."
                },
                "SomeCondition-xbVwL": {
                    "iam:ResourceTag/${TagKey}": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Route 53 Resolver",
            "Effect": "Allow",
            "Action": [
                "route53resolver:AssociateFirewallRuleGroup",
                "route53resolver:AssociateResolverEndpointIpAddress",
                "route53resolver:AssociateResolverQueryLogConfig",
                "route53resolver:AssociateResolverRule",
                "route53resolver:CreateFirewallDomainList",
                "route53resolver:CreateFirewallRule",
                "route53resolver:CreateFirewallRuleGroup",
                "route53resolver:CreateResolverEndpoint",
                "route53resolver:CreateResolverQueryLogConfig",
                "route53resolver:CreateResolverRule",
                "route53resolver:DeleteFirewallDomainList",
                "route53resolver:DeleteFirewallRule",
                "route53resolver:DeleteFirewallRuleGroup",
                "route53resolver:DeleteResolverEndpoint",
                "route53resolver:DeleteResolverQueryLogConfig",
                "route53resolver:DeleteResolverRule",
                "route53resolver:DisassociateFirewallRuleGroup",
                "route53resolver:DisassociateResolverEndpointIpAddress",
                "route53resolver:DisassociateResolverQueryLogConfig",
                "route53resolver:DisassociateResolverRule",
                "route53resolver:GetFirewallConfig",
                "route53resolver:GetFirewallDomainList",
                "route53resolver:GetFirewallRuleGroup",
                "route53resolver:GetFirewallRuleGroupAssociation",
                "route53resolver:GetFirewallRuleGroupPolicy",
                "route53resolver:GetResolverDnssecConfig",
                "route53resolver:GetResolverEndpoint",
                "route53resolver:GetResolverQueryLogConfig",
                "route53resolver:GetResolverQueryLogConfigAssociation",
                "route53resolver:GetResolverQueryLogConfigPolicy",
                "route53resolver:GetResolverRule",
                "route53resolver:GetResolverRuleAssociation",
                "route53resolver:GetResolverRulePolicy",
                "route53resolver:ImportFirewallDomains",
                "route53resolver:ListFirewallConfigs",
                "route53resolver:ListFirewallDomainLists",
                "route53resolver:ListFirewallDomains",
                "route53resolver:ListFirewallRuleGroupAssociations",
                "route53resolver:ListFirewallRuleGroups",
                "route53resolver:ListFirewallRules",
                "route53resolver:ListResolverDnssecConfigs",
                "route53resolver:ListResolverEndpointIpAddresses",
                "route53resolver:ListResolverEndpoints",
                "route53resolver:ListResolverQueryLogConfigAssociations",
                "route53resolver:ListResolverQueryLogConfigs",
                "route53resolver:ListResolverRuleAssociations",
                "route53resolver:ListResolverRules",
                "route53resolver:ListTagsForResource",
                "route53resolver:PutFirewallRuleGroupPolicy",
                "route53resolver:PutResolverQueryLogConfigPolicy",
                "route53resolver:PutResolverRulePolicy",
                "route53resolver:TagResource",
                "route53resolver:UntagResource",
                "route53resolver:UpdateFirewallConfig",
                "route53resolver:UpdateFirewallDomains",
                "route53resolver:UpdateFirewallRule",
                "route53resolver:UpdateFirewallRuleGroupAssociation",
                "route53resolver:UpdateResolverDnssecConfig",
                "route53resolver:UpdateResolverEndpoint",
                "route53resolver:UpdateResolverRule"
            ],
            "Resource": [
                "arn:aws:route53resolver:<region>:<account-id>:<resource-type>/<resource-id>"
            ],
            "Condition": {
                "SomeCondition-FYjeV": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-aSIrX": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-DCYEy": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon WorkMail",
            "Effect": "Allow",
            "Action": [
                "workmail:AddMembersToGroup",
                "workmail:AssociateDelegateToResource",
                "workmail:AssociateMemberToGroup",
                "workmail:CancelMailboxExportJob",
                "workmail:CreateAlias",
                "workmail:CreateGroup",
                "workmail:CreateInboundMailFlowRule",
                "workmail:CreateMailDomain",
                "workmail:CreateMailUser",
                "workmail:CreateMobileDeviceAccessRule",
                "workmail:CreateOrganization",
                "workmail:CreateOutboundMailFlowRule",
                "workmail:CreateResource",
                "workmail:CreateSmtpGateway",
                "workmail:CreateUser",
                "workmail:DeleteAccessControlRule",
                "workmail:DeleteAlias",
                "workmail:DeleteGroup",
                "workmail:DeleteInboundMailFlowRule",
                "workmail:DeleteMailDomain",
                "workmail:DeleteMailboxPermissions",
                "workmail:DeleteMobileDevice",
                "workmail:DeleteMobileDeviceAccessRule",
                "workmail:DeleteOrganization",
                "workmail:DeleteOutboundMailFlowRule",
                "workmail:DeleteResource",
                "workmail:DeleteRetentionPolicy",
                "workmail:DeleteSmtpGateway",
                "workmail:DeleteUser",
                "workmail:DeregisterFromWorkMail",
                "workmail:DescribeDirectories",
                "workmail:DescribeGroup",
                "workmail:DescribeInboundMailFlowRule",
                "workmail:DescribeKmsKeys",
                "workmail:DescribeMailDomains",
                "workmail:DescribeMailGroups",
                "workmail:DescribeMailUsers",
                "workmail:DescribeMailboxExportJob",
                "workmail:DescribeOrganization",
                "workmail:DescribeOrganizations",
                "workmail:DescribeOutboundMailFlowRule",
                "workmail:DescribeResource",
                "workmail:DescribeSmtpGateway",
                "workmail:DescribeUser",
                "workmail:DisableMailGroups",
                "workmail:DisableMailUsers",
                "workmail:DisassociateDelegateFromResource",
                "workmail:DisassociateMemberFromGroup",
                "workmail:EnableMailDomain",
                "workmail:EnableMailGroups",
                "workmail:EnableMailUsers",
                "workmail:GetAccessControlEffect",
                "workmail:GetDefaultRetentionPolicy",
                "workmail:GetJournalingRules",
                "workmail:GetMailDomainDetails",
                "workmail:GetMailGroupDetails",
                "workmail:GetMailUserDetails",
                "workmail:GetMailboxDetails",
                "workmail:GetMobileDeviceAccessEffect",
                "workmail:GetMobileDeviceDetails",
                "workmail:GetMobileDevicesForUser",
                "workmail:GetMobilePolicyDetails",
                "workmail:ListAccessControlRules",
                "workmail:ListAliases",
                "workmail:ListGroupMembers",
                "workmail:ListGroups",
                "workmail:ListInboundMailFlowRules",
                "workmail:ListMailboxExportJobs",
                "workmail:ListMailboxPermissions",
                "workmail:ListMembersInMailGroup",
                "workmail:ListMobileDeviceAccessRules",
                "workmail:ListOrganizations",
                "workmail:ListOutboundMailFlowRules",
                "workmail:ListResourceDelegates",
                "workmail:ListResources",
                "workmail:ListSmtpGateways",
                "workmail:ListTagsForResource",
                "workmail:ListUsers",
                "workmail:PutAccessControlRule",
                "workmail:PutMailboxPermissions",
                "workmail:PutRetentionPolicy",
                "workmail:RegisterToWorkMail",
                "workmail:RemoveMembersFromGroup",
                "workmail:ResetPassword",
                "workmail:ResetUserPassword",
                "workmail:SearchMembers",
                "workmail:SetAdmin",
                "workmail:SetDefaultMailDomain",
                "workmail:SetJournalingRules",
                "workmail:SetMailGroupDetails",
                "workmail:SetMailUserDetails",
                "workmail:SetMobilePolicyDetails",
                "workmail:StartMailboxExportJob",
                "workmail:TagResource",
                "workmail:TestInboundMailFlowRules",
                "workmail:TestOutboundMailFlowRules",
                "workmail:UntagResource",
                "workmail:UpdateInboundMailFlowRule",
                "workmail:UpdateMailboxQuota",
                "workmail:UpdateMobileDeviceAccessRule",
                "workmail:UpdateOutboundMailFlowRule",
                "workmail:UpdatePrimaryEmailAddress",
                "workmail:UpdateResource",
                "workmail:UpdateSmtpGateway",
                "workmail:WipeMobileDevice"
            ],
            "Resource": [
                "arn:${Partition}:workmail:${Region}:${Account}:${ResourceType}/${ResourceId}"
            ],
            "Condition": {
                "SomeCondition-Rakon": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-zfMVK": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-GDwHL": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Route53 Recovery Readiness",
            "Effect": "Allow",
            "Action": [
                "route53-recovery-readiness:CreateCell",
                "route53-recovery-readiness:CreateCrossAccountAuthorization",
                "route53-recovery-readiness:CreateReadinessCheck",
                "route53-recovery-readiness:CreateRecoveryGroup",
                "route53-recovery-readiness:CreateResourceSet",
                "route53-recovery-readiness:DeleteCell",
                "route53-recovery-readiness:DeleteCrossAccountAuthorization",
                "route53-recovery-readiness:DeleteReadinessCheck",
                "route53-recovery-readiness:DeleteRecoveryGroup",
                "route53-recovery-readiness:DeleteResourceSet",
                "route53-recovery-readiness:GetArchitectureRecommendations",
                "route53-recovery-readiness:GetCell",
                "route53-recovery-readiness:GetCellReadinessSummary",
                "route53-recovery-readiness:GetReadinessCheck",
                "route53-recovery-readiness:GetReadinessCheckResourceStatus",
                "route53-recovery-readiness:GetReadinessCheckStatus",
                "route53-recovery-readiness:GetRecoveryGroup",
                "route53-recovery-readiness:GetRecoveryGroupReadinessSummary",
                "route53-recovery-readiness:GetResourceSet",
                "route53-recovery-readiness:ListCells",
                "route53-recovery-readiness:ListCrossAccountAuthorizations",
                "route53-recovery-readiness:ListReadinessChecks",
                "route53-recovery-readiness:ListRecoveryGroups",
                "route53-recovery-readiness:ListResourceSets",
                "route53-recovery-readiness:ListRules",
                "route53-recovery-readiness:ListTagsForResources",
                "route53-recovery-readiness:TagResource",
                "route53-recovery-readiness:UntagResource",
                "route53-recovery-readiness:UpdateCell",
                "route53-recovery-readiness:UpdateReadinessCheck",
                "route53-recovery-readiness:UpdateRecoveryGroup",
                "route53-recovery-readiness:UpdateResourceSet"
            ],
            "Resource": [
                "arn:${Partition}:route53-recovery-readiness::${Account}:${ResourceType}/${ResourceName}"
            ],
            "Condition": {
                "SomeCondition-AzRJc": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-LaVAN": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-BgeRL": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS CodeBuild",
            "Effect": "Allow",
            "Action": [
                "codebuild:BatchDeleteBuilds",
                "codebuild:BatchGetBuildBatches",
                "codebuild:BatchGetBuilds",
                "codebuild:BatchGetProjects",
                "codebuild:BatchGetReportGroups",
                "codebuild:BatchGetReports",
                "codebuild:BatchPutCodeCoverages",
                "codebuild:BatchPutTestCases",
                "codebuild:CreateProject",
                "codebuild:CreateReport",
                "codebuild:CreateReportGroup",
                "codebuild:CreateWebhook",
                "codebuild:DeleteBuildBatch",
                "codebuild:DeleteOAuthToken",
                "codebuild:DeleteProject",
                "codebuild:DeleteReport",
                "codebuild:DeleteReportGroup",
                "codebuild:DeleteResourcePolicy",
                "codebuild:DeleteSourceCredentials",
                "codebuild:DeleteWebhook",
                "codebuild:DescribeCodeCoverages",
                "codebuild:DescribeTestCases",
                "codebuild:GetReportGroupTrend",
                "codebuild:GetResourcePolicy",
                "codebuild:ImportSourceCredentials",
                "codebuild:InvalidateProjectCache",
                "codebuild:ListBuildBatches",
                "codebuild:ListBuildBatchesForProject",
                "codebuild:ListBuilds",
                "codebuild:ListBuildsForProject",
                "codebuild:ListConnectedOAuthAccounts",
                "codebuild:ListCuratedEnvironmentImages",
                "codebuild:ListProjects",
                "codebuild:ListReportGroups",
                "codebuild:ListReports",
                "codebuild:ListReportsForReportGroup",
                "codebuild:ListRepositories",
                "codebuild:ListSharedProjects",
                "codebuild:ListSharedReportGroups",
                "codebuild:ListSourceCredentials",
                "codebuild:PersistOAuthToken",
                "codebuild:PutResourcePolicy",
                "codebuild:RetryBuild",
                "codebuild:RetryBuildBatch",
                "codebuild:StartBuild",
                "codebuild:StartBuildBatch",
                "codebuild:StopBuild",
                "codebuild:StopBuildBatch",
                "codebuild:UpdateProject",
                "codebuild:UpdateProjectVisibility",
                "codebuild:UpdateReport",
                "codebuild:UpdateReportGroup",
                "codebuild:UpdateWebhook"
            ],
            "Resource": [
                "arn:${Partition}:codebuild:<region>:<account_ID>:<resource_type>/<resource_id>"
            ],
            "Condition": {
                "SomeCondition-qwCBO": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-UqtSm": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-nEiNe": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS IoT Analytics",
            "Effect": "Allow",
            "Action": [
                "iotanalytics:BatchPutMessage",
                "iotanalytics:CancelPipelineReprocessing",
                "iotanalytics:CreateChannel",
                "iotanalytics:CreateDataset",
                "iotanalytics:CreateDatasetContent",
                "iotanalytics:CreateDatastore",
                "iotanalytics:CreatePipeline",
                "iotanalytics:DeleteChannel",
                "iotanalytics:DeleteDataset",
                "iotanalytics:DeleteDatasetContent",
                "iotanalytics:DeleteDatastore",
                "iotanalytics:DeletePipeline",
                "iotanalytics:DescribeChannel",
                "iotanalytics:DescribeDataset",
                "iotanalytics:DescribeDatastore",
                "iotanalytics:DescribeLoggingOptions",
                "iotanalytics:DescribePipeline",
                "iotanalytics:GetDatasetContent",
                "iotanalytics:ListChannels",
                "iotanalytics:ListDatasetContents",
                "iotanalytics:ListDatasets",
                "iotanalytics:ListDatastores",
                "iotanalytics:ListPipelines",
                "iotanalytics:ListTagsForResource",
                "iotanalytics:PutLoggingOptions",
                "iotanalytics:RunPipelineActivity",
                "iotanalytics:SampleChannelData",
                "iotanalytics:StartPipelineReprocessing",
                "iotanalytics:TagResource",
                "iotanalytics:UntagResource",
                "iotanalytics:UpdateChannel",
                "iotanalytics:UpdateDataset",
                "iotanalytics:UpdateDatastore",
                "iotanalytics:UpdatePipeline"
            ],
            "Resource": [
                "arn:${Partition}:iotanalytics:<region>:<account_ID>:<type>/<name>"
            ],
            "Condition": {
                "SomeCondition-HejZv": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-uLBvH": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-kPWjT": {
                    "iotanalytics:ResourceTag/${TagKey}": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Connect",
            "Effect": "Allow",
            "Action": [
                "connect:AssociateApprovedOrigin",
                "connect:AssociateBot",
                "connect:AssociateCustomerProfilesDomain",
                "connect:AssociateInstanceStorageConfig",
                "connect:AssociateLambdaFunction",
                "connect:AssociateLexBot",
                "connect:AssociateQueueQuickConnects",
                "connect:AssociateRoutingProfileQueues",
                "connect:AssociateSecurityKey",
                "connect:CreateAgentStatus",
                "connect:CreateContactFlow",
                "connect:CreateHoursOfOperation",
                "connect:CreateInstance",
                "connect:CreateIntegrationAssociation",
                "connect:CreateQueue",
                "connect:CreateQuickConnect",
                "connect:CreateRoutingProfile",
                "connect:CreateUseCase",
                "connect:CreateUser",
                "connect:CreateUserHierarchyGroup",
                "connect:DeleteHoursOfOperation",
                "connect:DeleteInstance",
                "connect:DeleteIntegrationAssociation",
                "connect:DeleteQuickConnect",
                "connect:DeleteUseCase",
                "connect:DeleteUser",
                "connect:DeleteUserHierarchyGroup",
                "connect:DescribeAgentStatus",
                "connect:DescribeContactFlow",
                "connect:DescribeHoursOfOperation",
                "connect:DescribeInstance",
                "connect:DescribeInstanceAttribute",
                "connect:DescribeInstanceStorageConfig",
                "connect:DescribeQueue",
                "connect:DescribeQuickConnect",
                "connect:DescribeRoutingProfile",
                "connect:DescribeUser",
                "connect:DescribeUserHierarchyGroup",
                "connect:DescribeUserHierarchyStructure",
                "connect:DisassociateApprovedOrigin",
                "connect:DisassociateBot",
                "connect:DisassociateCustomerProfilesDomain",
                "connect:DisassociateInstanceStorageConfig",
                "connect:DisassociateLambdaFunction",
                "connect:DisassociateLexBot",
                "connect:DisassociateQueueQuickConnects",
                "connect:DisassociateRoutingProfileQueues",
                "connect:DisassociateSecurityKey",
                "connect:GetContactAttributes",
                "connect:GetCurrentMetricData",
                "connect:GetFederationToken",
                "connect:GetFederationTokens",
                "connect:GetMetricData",
                "connect:ListAgentStatuses",
                "connect:ListApprovedOrigins",
                "connect:ListBots",
                "connect:ListContactFlows",
                "connect:ListHoursOfOperations",
                "connect:ListInstanceAttributes",
                "connect:ListInstanceStorageConfigs",
                "connect:ListInstances",
                "connect:ListIntegrationAssociations",
                "connect:ListLambdaFunctions",
                "connect:ListLexBots",
                "connect:ListPhoneNumbers",
                "connect:ListPrompts",
                "connect:ListQueueQuickConnects",
                "connect:ListQueues",
                "connect:ListQuickConnects",
                "connect:ListRealtimeContactAnalysisSegments",
                "connect:ListRoutingProfileQueues",
                "connect:ListRoutingProfiles",
                "connect:ListSecurityKeys",
                "connect:ListSecurityProfiles",
                "connect:ListTagsForResource",
                "connect:ListUseCases",
                "connect:ListUserHierarchyGroups",
                "connect:ListUsers",
                "connect:ResumeContactRecording",
                "connect:StartChatContact",
                "connect:StartContactRecording",
                "connect:StartOutboundVoiceContact",
                "connect:StartTaskContact",
                "connect:StopContact",
                "connect:StopContactRecording",
                "connect:SuspendContactRecording",
                "connect:TagResource",
                "connect:UntagResource",
                "connect:UpdateAgentStatus",
                "connect:UpdateContactAttributes",
                "connect:UpdateContactFlowContent",
                "connect:UpdateContactFlowName",
                "connect:UpdateHoursOfOperation",
                "connect:UpdateInstanceAttribute",
                "connect:UpdateInstanceStorageConfig",
                "connect:UpdateQueueHoursOfOperation",
                "connect:UpdateQueueMaxContacts",
                "connect:UpdateQueueName",
                "connect:UpdateQueueOutboundCallerConfig",
                "connect:UpdateQueueStatus",
                "connect:UpdateQuickConnectConfig",
                "connect:UpdateQuickConnectName",
                "connect:UpdateRoutingProfileConcurrency",
                "connect:UpdateRoutingProfileDefaultOutboundQueue",
                "connect:UpdateRoutingProfileName",
                "connect:UpdateRoutingProfileQueues",
                "connect:UpdateUserHierarchy",
                "connect:UpdateUserHierarchyGroupName",
                "connect:UpdateUserHierarchyStructure",
                "connect:UpdateUserIdentityInfo",
                "connect:UpdateUserPhoneConfig",
                "connect:UpdateUserRoutingProfile",
                "connect:UpdateUserSecurityProfiles"
            ],
            "Resource": [
                "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}"
            ],
            "Condition": {
                "SomeCondition-mRKPU": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-uJLUi": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-WhMXQ": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-FAsNv": {
                    "connect:AttributeType": "...some value..."
                },
                "SomeCondition-VrRDo": {
                    "connect:InstanceId": "...some value..."
                },
                "SomeCondition-QUiPo": {
                    "connect:StorageResourceType": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Pinpoint Email Service",
            "Effect": "Allow",
            "Action": [
                "ses:CreateConfigurationSet",
                "ses:CreateConfigurationSetEventDestination",
                "ses:CreateDedicatedIpPool",
                "ses:CreateDeliverabilityTestReport",
                "ses:CreateEmailIdentity",
                "ses:DeleteConfigurationSet",
                "ses:DeleteConfigurationSetEventDestination",
                "ses:DeleteDedicatedIpPool",
                "ses:DeleteEmailIdentity",
                "ses:GetAccount",
                "ses:GetBlacklistReports",
                "ses:GetConfigurationSet",
                "ses:GetConfigurationSetEventDestinations",
                "ses:GetDedicatedIp",
                "ses:GetDedicatedIps",
                "ses:GetDeliverabilityDashboardOptions",
                "ses:GetDeliverabilityTestReport",
                "ses:GetDomainDeliverabilityCampaign",
                "ses:GetDomainStatisticsReport",
                "ses:GetEmailIdentity",
                "ses:ListConfigurationSets",
                "ses:ListDedicatedIpPools",
                "ses:ListDeliverabilityTestReports",
                "ses:ListDomainDeliverabilityCampaigns",
                "ses:ListEmailIdentities",
                "ses:ListTagsForResource",
                "ses:PutAccountDedicatedIpWarmupAttributes",
                "ses:PutAccountSendingAttributes",
                "ses:PutConfigurationSetDeliveryOptions",
                "ses:PutConfigurationSetReputationOptions",
                "ses:PutConfigurationSetSendingOptions",
                "ses:PutConfigurationSetTrackingOptions",
                "ses:PutDedicatedIpInPool",
                "ses:PutDedicatedIpWarmupAttributes",
                "ses:PutDeliverabilityDashboardOption",
                "ses:PutEmailIdentityDkimAttributes",
                "ses:PutEmailIdentityFeedbackAttributes",
                "ses:PutEmailIdentityMailFromAttributes",
                "ses:SendEmail",
                "ses:TagResource",
                "ses:UntagResource",
                "ses:UpdateConfigurationSetEventDestination"
            ],
            "Resource": [
                "arn:${Partition}:ses:${Region}:${Account}:${resourceType}/${resourceId}"
            ],
            "Condition": {
                "SomeCondition-YvAUq": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-hucVw": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-cOqHl": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-drnhz": {
                    "ses:FeedbackAddress": "...some value..."
                },
                "SomeCondition-SjTIb": {
                    "ses:FromAddress": "...some value..."
                },
                "SomeCondition-ApEtL": {
                    "ses:FromDisplayName": "...some value..."
                },
                "SomeCondition-crksC": {
                    "ses:Recipients": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Simple Email Service v2",
            "Effect": "Allow",
            "Action": [
                "ses:CreateConfigurationSet",
                "ses:CreateConfigurationSetEventDestination",
                "ses:CreateContact",
                "ses:CreateContactList",
                "ses:CreateCustomVerificationEmailTemplate",
                "ses:CreateDedicatedIpPool",
                "ses:CreateDeliverabilityTestReport",
                "ses:CreateEmailIdentity",
                "ses:CreateEmailIdentityPolicy",
                "ses:CreateEmailTemplate",
                "ses:CreateImportJob",
                "ses:DeleteConfigurationSet",
                "ses:DeleteConfigurationSetEventDestination",
                "ses:DeleteContact",
                "ses:DeleteContactList",
                "ses:DeleteCustomVerificationEmailTemplate",
                "ses:DeleteDedicatedIpPool",
                "ses:DeleteEmailIdentity",
                "ses:DeleteEmailIdentityPolicy",
                "ses:DeleteEmailTemplate",
                "ses:DeleteSuppressedDestination",
                "ses:GetAccount",
                "ses:GetBlacklistReports",
                "ses:GetConfigurationSet",
                "ses:GetConfigurationSetEventDestinations",
                "ses:GetContact",
                "ses:GetContactList",
                "ses:GetCustomVerificationEmailTemplate",
                "ses:GetDedicatedIp",
                "ses:GetDedicatedIps",
                "ses:GetDeliverabilityDashboardOptions",
                "ses:GetDeliverabilityTestReport",
                "ses:GetDomainDeliverabilityCampaign",
                "ses:GetDomainStatisticsReport",
                "ses:GetEmailIdentity",
                "ses:GetEmailIdentityPolicies",
                "ses:GetEmailTemplate",
                "ses:GetImportJob",
                "ses:GetSuppressedDestination",
                "ses:ListConfigurationSets",
                "ses:ListContactLists",
                "ses:ListContacts",
                "ses:ListCustomVerificationEmailTemplates",
                "ses:ListDedicatedIpPools",
                "ses:ListDeliverabilityTestReports",
                "ses:ListDomainDeliverabilityCampaigns",
                "ses:ListEmailIdentities",
                "ses:ListEmailTemplates",
                "ses:ListImportJobs",
                "ses:ListSuppressedDestinations",
                "ses:ListTagsForResource",
                "ses:PutAccountDedicatedIpWarmupAttributes",
                "ses:PutAccountDetails",
                "ses:PutAccountSendingAttributes",
                "ses:PutAccountSuppressionAttributes",
                "ses:PutConfigurationSetDeliveryOptions",
                "ses:PutConfigurationSetReputationOptions",
                "ses:PutConfigurationSetSendingOptions",
                "ses:PutConfigurationSetSuppressionOptions",
                "ses:PutConfigurationSetTrackingOptions",
                "ses:PutDedicatedIpInPool",
                "ses:PutDedicatedIpWarmupAttributes",
                "ses:PutDeliverabilityDashboardOption",
                "ses:PutEmailIdentityConfigurationSetAttributes",
                "ses:PutEmailIdentityDkimAttributes",
                "ses:PutEmailIdentityDkimSigningAttributes",
                "ses:PutEmailIdentityFeedbackAttributes",
                "ses:PutEmailIdentityMailFromAttributes",
                "ses:PutSuppressedDestination",
                "ses:SendBulkEmail",
                "ses:SendCustomVerificationEmail",
                "ses:SendEmail",
                "ses:TagResource",
                "ses:TestRenderEmailTemplate",
                "ses:UntagResource",
                "ses:UpdateConfigurationSetEventDestination",
                "ses:UpdateContact",
                "ses:UpdateContactList",
                "ses:UpdateCustomVerificationEmailTemplate",
                "ses:UpdateEmailIdentityPolicy",
                "ses:UpdateEmailTemplate"
            ],
            "Resource": [
                "arn:${Partition}:ses:${Region}:${Account}:${resourceType}/${resourceId}"
            ],
            "Condition": {
                "SomeCondition-qORZQ": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-dUtfM": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-ZKyAh": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-pqgMj": {
                    "ses:FeedbackAddress": "...some value..."
                },
                "SomeCondition-xkBUw": {
                    "ses:FromAddress": "...some value..."
                },
                "SomeCondition-sDJeP": {
                    "ses:FromDisplayName": "...some value..."
                },
                "SomeCondition-ozZgQ": {
                    "ses:Recipients": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon SES",
            "Effect": "Allow",
            "Action": [
                "ses:CloneReceiptRuleSet",
                "ses:CreateConfigurationSet",
                "ses:CreateConfigurationSetEventDestination",
                "ses:CreateConfigurationSetTrackingOptions",
                "ses:CreateCustomVerificationEmailTemplate",
                "ses:CreateReceiptFilter",
                "ses:CreateReceiptRule",
                "ses:CreateReceiptRuleSet",
                "ses:CreateTemplate",
                "ses:DeleteConfigurationSet",
                "ses:DeleteConfigurationSetEventDestination",
                "ses:DeleteConfigurationSetTrackingOptions",
                "ses:DeleteCustomVerificationEmailTemplate",
                "ses:DeleteIdentity",
                "ses:DeleteIdentityPolicy",
                "ses:DeleteReceiptFilter",
                "ses:DeleteReceiptRule",
                "ses:DeleteReceiptRuleSet",
                "ses:DeleteTemplate",
                "ses:DeleteVerifiedEmailAddress",
                "ses:DescribeActiveReceiptRuleSet",
                "ses:DescribeConfigurationSet",
                "ses:DescribeReceiptRule",
                "ses:DescribeReceiptRuleSet",
                "ses:GetAccountSendingEnabled",
                "ses:GetCustomVerificationEmailTemplate",
                "ses:GetIdentityDkimAttributes",
                "ses:GetIdentityMailFromDomainAttributes",
                "ses:GetIdentityNotificationAttributes",
                "ses:GetIdentityPolicies",
                "ses:GetIdentityVerificationAttributes",
                "ses:GetSendQuota",
                "ses:GetSendStatistics",
                "ses:GetTemplate",
                "ses:ListConfigurationSets",
                "ses:ListCustomVerificationEmailTemplates",
                "ses:ListIdentities",
                "ses:ListIdentityPolicies",
                "ses:ListReceiptFilters",
                "ses:ListReceiptRuleSets",
                "ses:ListTemplates",
                "ses:ListVerifiedEmailAddresses",
                "ses:PutConfigurationSetDeliveryOptions",
                "ses:PutIdentityPolicy",
                "ses:ReorderReceiptRuleSet",
                "ses:SendBounce",
                "ses:SendBulkTemplatedEmail",
                "ses:SendCustomVerificationEmail",
                "ses:SendEmail",
                "ses:SendRawEmail",
                "ses:SendTemplatedEmail",
                "ses:SetActiveReceiptRuleSet",
                "ses:SetIdentityDkimEnabled",
                "ses:SetIdentityFeedbackForwardingEnabled",
                "ses:SetIdentityHeadersInNotificationsEnabled",
                "ses:SetIdentityMailFromDomain",
                "ses:SetIdentityNotificationTopic",
                "ses:SetReceiptRulePosition",
                "ses:TestRenderTemplate",
                "ses:UpdateAccountSendingEnabled",
                "ses:UpdateConfigurationSetEventDestination",
                "ses:UpdateConfigurationSetReputationMetricsEnabled",
                "ses:UpdateConfigurationSetSendingEnabled",
                "ses:UpdateConfigurationSetTrackingOptions",
                "ses:UpdateCustomVerificationEmailTemplate",
                "ses:UpdateReceiptRule",
                "ses:UpdateTemplate",
                "ses:VerifyDomainDkim",
                "ses:VerifyDomainIdentity",
                "ses:VerifyEmailAddress",
                "ses:VerifyEmailIdentity"
            ],
            "Resource": [
                "arn:${Partition}:ses:${Region}:${Account}:${resourceType}/${resourceId}"
            ],
            "Condition": {
                "SomeCondition-UgtOf": {
                    "ses:FeedbackAddress": "...some value..."
                },
                "SomeCondition-evLTf": {
                    "ses:FromAddress": "...some value..."
                },
                "SomeCondition-zUTZe": {
                    "ses:FromDisplayName": "...some value..."
                },
                "SomeCondition-GDmCX": {
                    "ses:Recipients": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Cost Explorer Service",
            "Effect": "Allow",
            "Action": [
                "ce:CreateAnomalyMonitor",
                "ce:CreateAnomalySubscription",
                "ce:CreateCostCategoryDefinition",
                "ce:CreateNotificationSubscription",
                "ce:CreateReport",
                "ce:DeleteAnomalyMonitor",
                "ce:DeleteAnomalySubscription",
                "ce:DeleteCostCategoryDefinition",
                "ce:DeleteNotificationSubscription",
                "ce:DeleteReport",
                "ce:DescribeCostCategoryDefinition",
                "ce:DescribeNotificationSubscription",
                "ce:DescribeReport",
                "ce:GetAnomalies",
                "ce:GetAnomalyMonitors",
                "ce:GetAnomalySubscriptions",
                "ce:GetCostAndUsage",
                "ce:GetCostAndUsageWithResources",
                "ce:GetCostCategories",
                "ce:GetCostForecast",
                "ce:GetDimensionValues",
                "ce:GetPreferences",
                "ce:GetReservationCoverage",
                "ce:GetReservationPurchaseRecommendation",
                "ce:GetReservationUtilization",
                "ce:GetRightsizingRecommendation",
                "ce:GetSavingsPlansCoverage",
                "ce:GetSavingsPlansPurchaseRecommendation",
                "ce:GetSavingsPlansUtilization",
                "ce:GetSavingsPlansUtilizationDetails",
                "ce:GetTags",
                "ce:GetUsageForecast",
                "ce:ListCostCategoryDefinitions",
                "ce:ProvideAnomalyFeedback",
                "ce:UpdateAnomalyMonitor",
                "ce:UpdateAnomalySubscription",
                "ce:UpdateCostCategoryDefinition",
                "ce:UpdateNotificationSubscription",
                "ce:UpdatePreferences",
                "ce:UpdateReport"
            ]
        },
        {
            "Sid": "AWS Amplify Admin",
            "Effect": "Allow",
            "Action": [
                "amplifybackend:CloneBackend",
                "amplifybackend:CreateBackend",
                "amplifybackend:CreateBackendAPI",
                "amplifybackend:CreateBackendAuth",
                "amplifybackend:CreateBackendConfig",
                "amplifybackend:CreateToken",
                "amplifybackend:DeleteBackend",
                "amplifybackend:DeleteBackendAPI",
                "amplifybackend:DeleteBackendAuth",
                "amplifybackend:DeleteToken",
                "amplifybackend:GenerateBackendAPIModels",
                "amplifybackend:GetBackend",
                "amplifybackend:GetBackendAPI",
                "amplifybackend:GetBackendAPIModels",
                "amplifybackend:GetBackendAuth",
                "amplifybackend:GetBackendJob",
                "amplifybackend:GetToken",
                "amplifybackend:ImportBackendAuth",
                "amplifybackend:ListBackendJobs",
                "amplifybackend:RemoveAllBackends",
                "amplifybackend:RemoveBackendConfig",
                "amplifybackend:UpdateBackendAPI",
                "amplifybackend:UpdateBackendAuth",
                "amplifybackend:UpdateBackendConfig",
                "amplifybackend:UpdateBackendJob"
            ],
            "Resource": [
                "arn:aws:amplifybackend:<region>:<account-id>:<resource-type>/<resource_name>"
            ]
        },
        {
            "Sid": "Amazon CloudWatch Synthetics",
            "Effect": "Allow",
            "Action": [
                "synthetics:CreateCanary",
                "synthetics:DeleteCanary",
                "synthetics:DescribeCanaries",
                "synthetics:DescribeCanariesLastRun",
                "synthetics:DescribeRuntimeVersions",
                "synthetics:GetCanary",
                "synthetics:GetCanaryRuns",
                "synthetics:ListTagsForResource",
                "synthetics:StartCanary",
                "synthetics:StopCanary",
                "synthetics:TagResource",
                "synthetics:UntagResource",
                "synthetics:UpdateCanary"
            ],
            "Resource": [
                "arn:aws:synthetics:<region>:<account-id>:<resource-type>:<resource_name>"
            ],
            "Condition": {
                "SomeCondition-tBasE": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Elastic Inference",
            "Effect": "Allow",
            "Action": [
                "elastic-inference:Connect",
                "elastic-inference:DescribeAcceleratorOfferings",
                "elastic-inference:DescribeAcceleratorTypes",
                "elastic-inference:DescribeAccelerators",
                "elastic-inference:ListTagsForResource",
                "elastic-inference:TagResource",
                "elastic-inference:UntagResource"
            ],
            "Resource": [
                "arn:aws:elastic-inference:<region>:<account-id>:elastic-inference-accelerator/<identifier>"
            ]
        },
        {
            "Sid": "AWS Application Cost Profiler Service",
            "Effect": "Allow",
            "Action": [
                "application-cost-profiler:DeleteReportDefinition",
                "application-cost-profiler:GetReportDefinition",
                "application-cost-profiler:ImportApplicationUsage",
                "application-cost-profiler:ListReportDefinitions",
                "application-cost-profiler:PutReportDefinition",
                "application-cost-profiler:UpdateReportDefinition"
            ]
        },
        {
            "Sid": "AWS DeepLens",
            "Effect": "Allow",
            "Action": [
                "deeplens:AssociateServiceRoleToAccount",
                "deeplens:BatchGetDevice",
                "deeplens:BatchGetModel",
                "deeplens:BatchGetProject",
                "deeplens:CreateDeviceCertificates",
                "deeplens:CreateModel",
                "deeplens:CreateProject",
                "deeplens:DeleteModel",
                "deeplens:DeleteProject",
                "deeplens:DeployProject",
                "deeplens:DeregisterDevice",
                "deeplens:GetAssociatedResources",
                "deeplens:GetDeploymentStatus",
                "deeplens:GetDevice",
                "deeplens:GetModel",
                "deeplens:GetProject",
                "deeplens:ImportProjectFromTemplate",
                "deeplens:ListDeployments",
                "deeplens:ListDevices",
                "deeplens:ListModels",
                "deeplens:ListProjects",
                "deeplens:RegisterDevice",
                "deeplens:RemoveProject",
                "deeplens:UpdateProject"
            ],
            "Resource": [
                "arn:aws:deeplens:<region>:<account-id>:<resource-type>/<resource_name>"
            ]
        },
        {
            "Sid": "Amazon RDS Data API",
            "Effect": "Allow",
            "Action": [
                "rds-data:BatchExecuteStatement",
                "rds-data:BeginTransaction",
                "rds-data:CommitTransaction",
                "rds-data:ExecuteSql",
                "rds-data:ExecuteStatement",
                "rds-data:RollbackTransaction"
            ],
            "Resource": [
                "arn:aws:rds:<region>:<accountID>:<relative-id>"
            ],
            "Condition": {
                "SomeCondition-zWGCH": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-pSEBc": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS SSO Directory",
            "Effect": "Allow",
            "Action": [
                "sso-directory:AddMemberToGroup",
                "sso-directory:CompleteVirtualMfaDeviceRegistration",
                "sso-directory:CompleteWebAuthnDeviceRegistration",
                "sso-directory:CreateAlias",
                "sso-directory:CreateBearerToken",
                "sso-directory:CreateExternalIdPConfigurationForDirectory",
                "sso-directory:CreateGroup",
                "sso-directory:CreateProvisioningTenant",
                "sso-directory:CreateUser",
                "sso-directory:DeleteBearerToken",
                "sso-directory:DeleteExternalIdPCertificate",
                "sso-directory:DeleteExternalIdPConfigurationForDirectory",
                "sso-directory:DeleteGroup",
                "sso-directory:DeleteMfaDeviceForUser",
                "sso-directory:DeleteProvisioningTenant",
                "sso-directory:DeleteUser",
                "sso-directory:DescribeDirectory",
                "sso-directory:DescribeGroup",
                "sso-directory:DescribeGroups",
                "sso-directory:DescribeProvisioningTenant",
                "sso-directory:DescribeUser",
                "sso-directory:DescribeUserByUniqueAttribute",
                "sso-directory:DescribeUsers",
                "sso-directory:DisableExternalIdPConfigurationForDirectory",
                "sso-directory:DisableUser",
                "sso-directory:EnableExternalIdPConfigurationForDirectory",
                "sso-directory:EnableUser",
                "sso-directory:GetAWSSPConfigurationForDirectory",
                "sso-directory:GetUserPoolInfo",
                "sso-directory:ImportExternalIdPCertificate",
                "sso-directory:IsMemberInGroup",
                "sso-directory:ListBearerTokens",
                "sso-directory:ListExternalIdPCertificates",
                "sso-directory:ListExternalIdPConfigurationsForDirectory",
                "sso-directory:ListGroupsForMember",
                "sso-directory:ListGroupsForUser",
                "sso-directory:ListMembersInGroup",
                "sso-directory:ListMfaDevicesForUser",
                "sso-directory:ListProvisioningTenants",
                "sso-directory:RemoveMemberFromGroup",
                "sso-directory:SearchGroups",
                "sso-directory:SearchUsers",
                "sso-directory:StartVirtualMfaDeviceRegistration",
                "sso-directory:StartWebAuthnDeviceRegistration",
                "sso-directory:UpdateExternalIdPConfigurationForDirectory",
                "sso-directory:UpdateGroup",
                "sso-directory:UpdateGroupDisplayName",
                "sso-directory:UpdateMfaDeviceForUser",
                "sso-directory:UpdatePassword",
                "sso-directory:UpdateUser",
                "sso-directory:UpdateUserName",
                "sso-directory:VerifyEmail"
            ]
        },
        {
            "Sid": "Amazon AppFlow",
            "Effect": "Allow",
            "Action": [
                "appflow:CreateConnectorProfile",
                "appflow:CreateFlow",
                "appflow:DeleteConnectorProfile",
                "appflow:DeleteFlow",
                "appflow:DescribeConnectorEntity",
                "appflow:DescribeConnectorFields",
                "appflow:DescribeConnectorProfiles",
                "appflow:DescribeConnectors",
                "appflow:DescribeFlow",
                "appflow:DescribeFlowExecution",
                "appflow:DescribeFlowExecutionRecords",
                "appflow:DescribeFlows",
                "appflow:ListConnectorEntities",
                "appflow:ListConnectorFields",
                "appflow:ListFlows",
                "appflow:ListTagsForResource",
                "appflow:RunFlow",
                "appflow:StartFlow",
                "appflow:StopFlow",
                "appflow:TagResource",
                "appflow:UntagResource",
                "appflow:UpdateConnectorProfile",
                "appflow:UpdateFlow",
                "appflow:UseConnectorProfile"
            ],
            "Resource": [
                "arn:aws:appflow:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-kaQoF": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-OQTCl": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-UoeQM": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Trusted Advisor",
            "Effect": "Allow",
            "Action": [
                "trustedadvisor:DescribeAccount",
                "trustedadvisor:DescribeAccountAccess",
                "trustedadvisor:DescribeCheckItems",
                "trustedadvisor:DescribeCheckRefreshStatuses",
                "trustedadvisor:DescribeCheckSummaries",
                "trustedadvisor:DescribeChecks",
                "trustedadvisor:DescribeNotificationPreferences",
                "trustedadvisor:DescribeOrganization",
                "trustedadvisor:DescribeOrganizationAccounts",
                "trustedadvisor:DescribeReports",
                "trustedadvisor:DescribeServiceMetadata",
                "trustedadvisor:ExcludeCheckItems",
                "trustedadvisor:GenerateReport",
                "trustedadvisor:IncludeCheckItems",
                "trustedadvisor:ListAccountsForParent",
                "trustedadvisor:ListOrganizationalUnitsForParent",
                "trustedadvisor:ListRoots",
                "trustedadvisor:RefreshCheck",
                "trustedadvisor:SetAccountAccess",
                "trustedadvisor:SetOrganizationAccess",
                "trustedadvisor:UpdateNotificationPreferences"
            ],
            "Resource": [
                "arn:aws:trustedadvisor:*:<account_ID>:checks/{category}/{checkId}"
            ]
        },
        {
            "Sid": "AWS Config",
            "Effect": "Allow",
            "Action": [
                "config:BatchGetAggregateResourceConfig",
                "config:BatchGetResourceConfig",
                "config:DeleteAggregationAuthorization",
                "config:DeleteConfigRule",
                "config:DeleteConfigurationAggregator",
                "config:DeleteConfigurationRecorder",
                "config:DeleteConformancePack",
                "config:DeleteDeliveryChannel",
                "config:DeleteEvaluationResults",
                "config:DeleteOrganizationConfigRule",
                "config:DeleteOrganizationConformancePack",
                "config:DeletePendingAggregationRequest",
                "config:DeleteRemediationConfiguration",
                "config:DeleteRemediationExceptions",
                "config:DeleteResourceConfig",
                "config:DeleteRetentionConfiguration",
                "config:DeleteStoredQuery",
                "config:DeliverConfigSnapshot",
                "config:DescribeAggregateComplianceByConfigRules",
                "config:DescribeAggregateComplianceByConformancePacks",
                "config:DescribeAggregationAuthorizations",
                "config:DescribeComplianceByConfigRule",
                "config:DescribeComplianceByResource",
                "config:DescribeConfigRuleEvaluationStatus",
                "config:DescribeConfigRules",
                "config:DescribeConfigurationAggregatorSourcesStatus",
                "config:DescribeConfigurationAggregators",
                "config:DescribeConfigurationRecorderStatus",
                "config:DescribeConfigurationRecorders",
                "config:DescribeConformancePackCompliance",
                "config:DescribeConformancePackStatus",
                "config:DescribeConformancePacks",
                "config:DescribeDeliveryChannelStatus",
                "config:DescribeDeliveryChannels",
                "config:DescribeOrganizationConfigRuleStatuses",
                "config:DescribeOrganizationConfigRules",
                "config:DescribeOrganizationConformancePackStatuses",
                "config:DescribeOrganizationConformancePacks",
                "config:DescribePendingAggregationRequests",
                "config:DescribeRemediationConfigurations",
                "config:DescribeRemediationExceptions",
                "config:DescribeRemediationExecutionStatus",
                "config:DescribeRetentionConfigurations",
                "config:GetAggregateComplianceDetailsByConfigRule",
                "config:GetAggregateConfigRuleComplianceSummary",
                "config:GetAggregateConformancePackComplianceSummary",
                "config:GetAggregateDiscoveredResourceCounts",
                "config:GetAggregateResourceConfig",
                "config:GetComplianceDetailsByConfigRule",
                "config:GetComplianceDetailsByResource",
                "config:GetComplianceSummaryByConfigRule",
                "config:GetComplianceSummaryByResourceType",
                "config:GetConformancePackComplianceDetails",
                "config:GetConformancePackComplianceSummary",
                "config:GetDiscoveredResourceCounts",
                "config:GetOrganizationConfigRuleDetailedStatus",
                "config:GetOrganizationConformancePackDetailedStatus",
                "config:GetResourceConfigHistory",
                "config:GetStoredQuery",
                "config:ListAggregateDiscoveredResources",
                "config:ListDiscoveredResources",
                "config:ListStoredQueries",
                "config:ListTagsForResource",
                "config:PutAggregationAuthorization",
                "config:PutConfigRule",
                "config:PutConfigurationAggregator",
                "config:PutConfigurationRecorder",
                "config:PutConformancePack",
                "config:PutDeliveryChannel",
                "config:PutEvaluations",
                "config:PutExternalEvaluation",
                "config:PutOrganizationConfigRule",
                "config:PutOrganizationConformancePack",
                "config:PutRemediationConfigurations",
                "config:PutRemediationExceptions",
                "config:PutResourceConfig",
                "config:PutRetentionConfiguration",
                "config:PutStoredQuery",
                "config:SelectAggregateResourceConfig",
                "config:SelectResourceConfig",
                "config:StartConfigRulesEvaluation",
                "config:StartConfigurationRecorder",
                "config:StartRemediationExecution",
                "config:StopConfigurationRecorder",
                "config:TagResource",
                "config:UntagResource"
            ],
            "Resource": [
                "arn:<partition>:config:<region>:<account>:<resourceType>/<resourceId>"
            ],
            "Condition": {
                "SomeCondition-vYNEc": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-reuWO": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-IcKuq": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon RDS",
            "Effect": "Allow",
            "Action": [
                "rds:AddRoleToDBCluster",
                "rds:AddRoleToDBInstance",
                "rds:AddSourceIdentifierToSubscription",
                "rds:AddTagsToResource",
                "rds:ApplyPendingMaintenanceAction",
                "rds:AuthorizeDBSecurityGroupIngress",
                "rds:BacktrackDBCluster",
                "rds:CancelExportTask",
                "rds:CopyDBClusterParameterGroup",
                "rds:CopyDBClusterSnapshot",
                "rds:CopyDBParameterGroup",
                "rds:CopyDBSnapshot",
                "rds:CopyOptionGroup",
                "rds:CreateCustomAvailabilityZone",
                "rds:CreateDBCluster",
                "rds:CreateDBClusterEndpoint",
                "rds:CreateDBClusterParameterGroup",
                "rds:CreateDBClusterSnapshot",
                "rds:CreateDBInstance",
                "rds:CreateDBInstanceReadReplica",
                "rds:CreateDBParameterGroup",
                "rds:CreateDBProxy",
                "rds:CreateDBProxyEndpoint",
                "rds:CreateDBSecurityGroup",
                "rds:CreateDBSnapshot",
                "rds:CreateDBSubnetGroup",
                "rds:CreateEventSubscription",
                "rds:CreateGlobalCluster",
                "rds:CreateOptionGroup",
                "rds:CrossRegionCommunication",
                "rds:DeleteCustomAvailabilityZone",
                "rds:DeleteDBCluster",
                "rds:DeleteDBClusterEndpoint",
                "rds:DeleteDBClusterParameterGroup",
                "rds:DeleteDBClusterSnapshot",
                "rds:DeleteDBInstance",
                "rds:DeleteDBInstanceAutomatedBackup",
                "rds:DeleteDBParameterGroup",
                "rds:DeleteDBProxy",
                "rds:DeleteDBProxyEndpoint",
                "rds:DeleteDBSecurityGroup",
                "rds:DeleteDBSnapshot",
                "rds:DeleteDBSubnetGroup",
                "rds:DeleteEventSubscription",
                "rds:DeleteGlobalCluster",
                "rds:DeleteInstallationMedia",
                "rds:DeleteOptionGroup",
                "rds:DeregisterDBProxyTargets",
                "rds:DescribeAccountAttributes",
                "rds:DescribeCertificates",
                "rds:DescribeCustomAvailabilityZones",
                "rds:DescribeDBClusterBacktracks",
                "rds:DescribeDBClusterEndpoints",
                "rds:DescribeDBClusterParameterGroups",
                "rds:DescribeDBClusterParameters",
                "rds:DescribeDBClusterSnapshotAttributes",
                "rds:DescribeDBClusterSnapshots",
                "rds:DescribeDBClusters",
                "rds:DescribeDBEngineVersions",
                "rds:DescribeDBInstanceAutomatedBackups",
                "rds:DescribeDBInstances",
                "rds:DescribeDBLogFiles",
                "rds:DescribeDBParameterGroups",
                "rds:DescribeDBParameters",
                "rds:DescribeDBProxies",
                "rds:DescribeDBProxyEndpoints",
                "rds:DescribeDBProxyTargetGroups",
                "rds:DescribeDBProxyTargets",
                "rds:DescribeDBSecurityGroups",
                "rds:DescribeDBSnapshotAttributes",
                "rds:DescribeDBSnapshots",
                "rds:DescribeDBSubnetGroups",
                "rds:DescribeEngineDefaultClusterParameters",
                "rds:DescribeEngineDefaultParameters",
                "rds:DescribeEventCategories",
                "rds:DescribeEventSubscriptions",
                "rds:DescribeEvents",
                "rds:DescribeExportTasks",
                "rds:DescribeGlobalClusters",
                "rds:DescribeInstallationMedia",
                "rds:DescribeOptionGroupOptions",
                "rds:DescribeOptionGroups",
                "rds:DescribeOrderableDBInstanceOptions",
                "rds:DescribePendingMaintenanceActions",
                "rds:DescribeReservedDBInstances",
                "rds:DescribeReservedDBInstancesOfferings",
                "rds:DescribeSourceRegions",
                "rds:DescribeValidDBInstanceModifications",
                "rds:DownloadDBLogFilePortion",
                "rds:FailoverDBCluster",
                "rds:FailoverGlobalCluster",
                "rds:ImportInstallationMedia",
                "rds:ListTagsForResource",
                "rds:ModifyCertificates",
                "rds:ModifyCurrentDBClusterCapacity",
                "rds:ModifyDBCluster",
                "rds:ModifyDBClusterEndpoint",
                "rds:ModifyDBClusterParameterGroup",
                "rds:ModifyDBClusterSnapshotAttribute",
                "rds:ModifyDBInstance",
                "rds:ModifyDBParameterGroup",
                "rds:ModifyDBProxy",
                "rds:ModifyDBProxyEndpoint",
                "rds:ModifyDBProxyTargetGroup",
                "rds:ModifyDBSnapshot",
                "rds:ModifyDBSnapshotAttribute",
                "rds:ModifyDBSubnetGroup",
                "rds:ModifyEventSubscription",
                "rds:ModifyGlobalCluster",
                "rds:ModifyOptionGroup",
                "rds:PromoteReadReplica",
                "rds:PromoteReadReplicaDBCluster",
                "rds:PurchaseReservedDBInstancesOffering",
                "rds:RebootDBInstance",
                "rds:RegisterDBProxyTargets",
                "rds:RemoveFromGlobalCluster",
                "rds:RemoveRoleFromDBCluster",
                "rds:RemoveRoleFromDBInstance",
                "rds:RemoveSourceIdentifierFromSubscription",
                "rds:RemoveTagsFromResource",
                "rds:ResetDBClusterParameterGroup",
                "rds:ResetDBParameterGroup",
                "rds:RestoreDBClusterFromS3",
                "rds:RestoreDBClusterFromSnapshot",
                "rds:RestoreDBClusterToPointInTime",
                "rds:RestoreDBInstanceFromDBSnapshot",
                "rds:RestoreDBInstanceFromS3",
                "rds:RestoreDBInstanceToPointInTime",
                "rds:RevokeDBSecurityGroupIngress",
                "rds:StartActivityStream",
                "rds:StartDBCluster",
                "rds:StartDBInstance",
                "rds:StartDBInstanceAutomatedBackupsReplication",
                "rds:StartExportTask",
                "rds:StopActivityStream",
                "rds:StopDBCluster",
                "rds:StopDBInstance",
                "rds:StopDBInstanceAutomatedBackupsReplication"
            ],
            "Resource": [
                "arn:aws:rds:<region>:<accountID>:<relative-id>"
            ],
            "Condition": {
                "SomeCondition-EgfwI": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-NilSd": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-urqzc": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-VNiaA": {
                    "rds:DatabaseClass": "...some value..."
                },
                "SomeCondition-yWkHa": {
                    "rds:DatabaseEngine": "...some value..."
                },
                "SomeCondition-IKSaU": {
                    "rds:DatabaseName": "...some value..."
                },
                "SomeCondition-bIOHK": {
                    "rds:EndpointType": "...some value..."
                },
                "SomeCondition-DNJeF": {
                    "rds:MultiAz": "...some value..."
                },
                "SomeCondition-cnATj": {
                    "rds:Piops": "...some value..."
                },
                "SomeCondition-lgbhc": {
                    "rds:StorageEncrypted": "...some value..."
                },
                "SomeCondition-VBGkb": {
                    "rds:StorageSize": "...some value..."
                },
                "SomeCondition-eXuCq": {
                    "rds:Vpc": "...some value..."
                },
                "SomeCondition-NbTae": {
                    "rds:cluster-pg-tag/${TagKey}": "...some value..."
                },
                "SomeCondition-lQytT": {
                    "rds:cluster-snapshot-tag/${TagKey}": "...some value..."
                },
                "SomeCondition-roPLw": {
                    "rds:cluster-tag/${TagKey}": "...some value..."
                },
                "SomeCondition-uSRlJ": {
                    "rds:db-tag/${TagKey}": "...some value..."
                },
                "SomeCondition-FvxCl": {
                    "rds:es-tag/${TagKey}": "...some value..."
                },
                "SomeCondition-xUejH": {
                    "rds:og-tag/${TagKey}": "...some value..."
                },
                "SomeCondition-Daerw": {
                    "rds:pg-tag/${TagKey}": "...some value..."
                },
                "SomeCondition-oEAPn": {
                    "rds:req-tag/${TagKey}": "...some value..."
                },
                "SomeCondition-GjPSa": {
                    "rds:ri-tag/${TagKey}": "...some value..."
                },
                "SomeCondition-unyMt": {
                    "rds:secgrp-tag/${TagKey}": "...some value..."
                },
                "SomeCondition-HDhPg": {
                    "rds:snapshot-tag/${TagKey}": "...some value..."
                },
                "SomeCondition-vPRHl": {
                    "rds:subgrp-tag/${TagKey}": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Simple Workflow Service",
            "Effect": "Allow",
            "Action": [
                "swf:CancelTimer",
                "swf:CancelWorkflowExecution",
                "swf:CompleteWorkflowExecution",
                "swf:ContinueAsNewWorkflowExecution",
                "swf:CountClosedWorkflowExecutions",
                "swf:CountOpenWorkflowExecutions",
                "swf:CountPendingActivityTasks",
                "swf:CountPendingDecisionTasks",
                "swf:DeprecateActivityType",
                "swf:DeprecateDomain",
                "swf:DeprecateWorkflowType",
                "swf:DescribeActivityType",
                "swf:DescribeDomain",
                "swf:DescribeWorkflowExecution",
                "swf:DescribeWorkflowType",
                "swf:FailWorkflowExecution",
                "swf:GetWorkflowExecutionHistory",
                "swf:ListActivityTypes",
                "swf:ListClosedWorkflowExecutions",
                "swf:ListDomains",
                "swf:ListOpenWorkflowExecutions",
                "swf:ListTagsForResource",
                "swf:ListWorkflowTypes",
                "swf:PollForActivityTask",
                "swf:PollForDecisionTask",
                "swf:RecordActivityTaskHeartbeat",
                "swf:RecordMarker",
                "swf:RegisterActivityType",
                "swf:RegisterDomain",
                "swf:RegisterWorkflowType",
                "swf:RequestCancelActivityTask",
                "swf:RequestCancelExternalWorkflowExecution",
                "swf:RequestCancelWorkflowExecution",
                "swf:RespondActivityTaskCanceled",
                "swf:RespondActivityTaskCompleted",
                "swf:RespondActivityTaskFailed",
                "swf:RespondDecisionTaskCompleted",
                "swf:ScheduleActivityTask",
                "swf:SignalExternalWorkflowExecution",
                "swf:SignalWorkflowExecution",
                "swf:StartChildWorkflowExecution",
                "swf:StartTimer",
                "swf:StartWorkflowExecution",
                "swf:TagResource",
                "swf:TerminateWorkflowExecution",
                "swf:UndeprecateActivityType",
                "swf:UndeprecateDomain",
                "swf:UndeprecateWorkflowType",
                "swf:UntagResource"
            ],
            "Resource": [
                "arn:aws:swf:<region>:<account>:/<domain>/<domainName>"
            ],
            "Condition": {
                "SomeCondition-pINrm": {
                    " swf:workflowType.name": "...some value..."
                },
                "SomeCondition-SoOgR": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-QOxCu": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-aIigS": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-aZCTc": {
                    "swf:activityType.name": "...some value..."
                },
                "SomeCondition-yFWod": {
                    "swf:activityType.version": "...some value..."
                },
                "SomeCondition-lBhaU": {
                    "swf:defaultTaskList.name": "...some value..."
                },
                "SomeCondition-PFDvw": {
                    "swf:name": "...some value..."
                },
                "SomeCondition-BArVS": {
                    "swf:tagFilter.tag": "...some value..."
                },
                "SomeCondition-zjYmd": {
                    "swf:tagList.member.0": "...some value..."
                },
                "SomeCondition-yHLeN": {
                    "swf:tagList.member.1": "...some value..."
                },
                "SomeCondition-infYh": {
                    "swf:tagList.member.2": "...some value..."
                },
                "SomeCondition-nDcVJ": {
                    "swf:tagList.member.3": "...some value..."
                },
                "SomeCondition-gCQFW": {
                    "swf:tagList.member.4": "...some value..."
                },
                "SomeCondition-TWUQq": {
                    "swf:taskList.name": "...some value..."
                },
                "SomeCondition-SXNDq": {
                    "swf:typeFilter.name": "...some value..."
                },
                "SomeCondition-OnrAf": {
                    "swf:typeFilter.version": "...some value..."
                },
                "SomeCondition-BNEXl": {
                    "swf:version": "...some value..."
                },
                "SomeCondition-WSecu": {
                    "swf:workflowType.name": "...some value..."
                },
                "SomeCondition-BGuHc": {
                    "swf:workflowType.version": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Macie Classic",
            "Effect": "Allow",
            "Action": [
                "macie:AssociateMemberAccount",
                "macie:AssociateS3Resources",
                "macie:DisassociateMemberAccount",
                "macie:DisassociateS3Resources",
                "macie:ListMemberAccounts",
                "macie:ListS3Resources",
                "macie:UpdateS3Resources"
            ],
            "Condition": {
                "SomeCondition-ADOpS": {
                    "aws:SourceArn": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS AppSync",
            "Effect": "Allow",
            "Action": [
                "appsync:CreateApiCache",
                "appsync:CreateApiKey",
                "appsync:CreateDataSource",
                "appsync:CreateFunction",
                "appsync:CreateGraphqlApi",
                "appsync:CreateResolver",
                "appsync:CreateType",
                "appsync:DeleteApiCache",
                "appsync:DeleteApiKey",
                "appsync:DeleteDataSource",
                "appsync:DeleteFunction",
                "appsync:DeleteGraphqlApi",
                "appsync:DeleteResolver",
                "appsync:DeleteType",
                "appsync:FlushApiCache",
                "appsync:GetApiCache",
                "appsync:GetDataSource",
                "appsync:GetFunction",
                "appsync:GetGraphqlApi",
                "appsync:GetIntrospectionSchema",
                "appsync:GetResolver",
                "appsync:GetSchemaCreationStatus",
                "appsync:GetType",
                "appsync:GraphQL",
                "appsync:ListApiKeys",
                "appsync:ListDataSources",
                "appsync:ListFunctions",
                "appsync:ListGraphqlApis",
                "appsync:ListResolvers",
                "appsync:ListResolversByFunction",
                "appsync:ListTagsForResource",
                "appsync:ListTypes",
                "appsync:SetWebACL",
                "appsync:StartSchemaCreation",
                "appsync:TagResource",
                "appsync:UntagResource",
                "appsync:UpdateApiCache",
                "appsync:UpdateApiKey",
                "appsync:UpdateDataSource",
                "appsync:UpdateFunction",
                "appsync:UpdateGraphqlApi",
                "appsync:UpdateResolver",
                "appsync:UpdateType"
            ],
            "Resource": [
                "arn:aws:appsync:<region>:<account>:<resourceType>/<resourcePath>"
            ],
            "Condition": {
                "SomeCondition-PZnmT": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-Xxvbu": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-axeGK": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Certificate Manager",
            "Effect": "Allow",
            "Action": [
                "acm:AddTagsToCertificate",
                "acm:DeleteCertificate",
                "acm:DescribeCertificate",
                "acm:ExportCertificate",
                "acm:GetAccountConfiguration",
                "acm:GetCertificate",
                "acm:ImportCertificate",
                "acm:ListCertificates",
                "acm:ListTagsForCertificate",
                "acm:PutAccountConfiguration",
                "acm:RemoveTagsFromCertificate",
                "acm:RenewCertificate",
                "acm:RequestCertificate",
                "acm:ResendValidationEmail",
                "acm:UpdateCertificateOptions"
            ],
            "Resource": [
                "arn:aws:acm:${Region}:${AccountId}:${ArnType}/${ResourceId}"
            ],
            "Condition": {
                "SomeCondition-OzhjJ": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-uZEfT": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-MLPjy": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Systems Manager Incident Manager",
            "Effect": "Allow",
            "Action": [
                "ssm-incidents:CreateReplicationSet",
                "ssm-incidents:CreateResponsePlan",
                "ssm-incidents:CreateTimelineEvent",
                "ssm-incidents:DeleteIncidentRecord",
                "ssm-incidents:DeleteReplicationSet",
                "ssm-incidents:DeleteResourcePolicy",
                "ssm-incidents:DeleteResponsePlan",
                "ssm-incidents:DeleteTimelineEvent",
                "ssm-incidents:GetIncidentRecord",
                "ssm-incidents:GetReplicationSet",
                "ssm-incidents:GetResourcePolicies",
                "ssm-incidents:GetResponsePlan",
                "ssm-incidents:GetTimelineEvent",
                "ssm-incidents:ListIncidentRecords",
                "ssm-incidents:ListRelatedItems",
                "ssm-incidents:ListReplicationSets",
                "ssm-incidents:ListResponsePlans",
                "ssm-incidents:ListTagsForResource",
                "ssm-incidents:ListTimelineEvents",
                "ssm-incidents:PutResourcePolicy",
                "ssm-incidents:StartIncident",
                "ssm-incidents:TagResource",
                "ssm-incidents:UntagResource",
                "ssm-incidents:UpdateDeletionProtection",
                "ssm-incidents:UpdateIncidentRecord",
                "ssm-incidents:UpdateRelatedItems",
                "ssm-incidents:UpdateReplicationSet",
                "ssm-incidents:UpdateResponsePlan",
                "ssm-incidents:UpdateTimelineEvent"
            ],
            "Resource": [
                "arn:${Partition}:ssm-incidents::${Account}:${ResourceType}/${ResourceId}"
            ]
        },
        {
            "Sid": "AWS X-Ray",
            "Effect": "Allow",
            "Action": [
                "xray:BatchGetTraces",
                "xray:CreateGroup",
                "xray:CreateSamplingRule",
                "xray:DeleteGroup",
                "xray:DeleteSamplingRule",
                "xray:GetEncryptionConfig",
                "xray:GetGroup",
                "xray:GetGroups",
                "xray:GetInsight",
                "xray:GetInsightEvents",
                "xray:GetInsightImpactGraph",
                "xray:GetInsightSummaries",
                "xray:GetSamplingRules",
                "xray:GetSamplingStatisticSummaries",
                "xray:GetSamplingTargets",
                "xray:GetServiceGraph",
                "xray:GetTimeSeriesServiceStatistics",
                "xray:GetTraceGraph",
                "xray:GetTraceSummaries",
                "xray:ListTagsForResource",
                "xray:PutEncryptionConfig",
                "xray:PutTelemetryRecords",
                "xray:PutTraceSegments",
                "xray:TagResource",
                "xray:UntagResource",
                "xray:UpdateGroup",
                "xray:UpdateSamplingRule"
            ],
            "Resource": [
                "arn:${Partition}:xray:${Region}:${Account}:${ResourceType}/${ResourceId}"
            ],
            "Condition": {
                "SomeCondition-lGwgk": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-JaVIw": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-dRqtS": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon CloudFront",
            "Effect": "Allow",
            "Action": [
                "cloudfront:AssociateAlias",
                "cloudfront:CreateCachePolicy",
                "cloudfront:CreateCloudFrontOriginAccessIdentity",
                "cloudfront:CreateDistribution",
                "cloudfront:CreateDistributionWithTags",
                "cloudfront:CreateFieldLevelEncryptionConfig",
                "cloudfront:CreateFieldLevelEncryptionProfile",
                "cloudfront:CreateFunction",
                "cloudfront:CreateInvalidation",
                "cloudfront:CreateKeyGroup",
                "cloudfront:CreateMonitoringSubscription",
                "cloudfront:CreateOriginRequestPolicy",
                "cloudfront:CreatePublicKey",
                "cloudfront:CreateRealtimeLogConfig",
                "cloudfront:CreateStreamingDistribution",
                "cloudfront:CreateStreamingDistributionWithTags",
                "cloudfront:DeleteCachePolicy",
                "cloudfront:DeleteCloudFrontOriginAccessIdentity",
                "cloudfront:DeleteDistribution",
                "cloudfront:DeleteFieldLevelEncryptionConfig",
                "cloudfront:DeleteFieldLevelEncryptionProfile",
                "cloudfront:DeleteFunction",
                "cloudfront:DeleteKeyGroup",
                "cloudfront:DeleteMonitoringSubscription",
                "cloudfront:DeleteOriginRequestPolicy",
                "cloudfront:DeletePublicKey",
                "cloudfront:DeleteRealtimeLogConfig",
                "cloudfront:DeleteStreamingDistribution",
                "cloudfront:DescribeFunction",
                "cloudfront:GetCachePolicy",
                "cloudfront:GetCachePolicyConfig",
                "cloudfront:GetCloudFrontOriginAccessIdentity",
                "cloudfront:GetCloudFrontOriginAccessIdentityConfig",
                "cloudfront:GetDistribution",
                "cloudfront:GetDistributionConfig",
                "cloudfront:GetFieldLevelEncryption",
                "cloudfront:GetFieldLevelEncryptionConfig",
                "cloudfront:GetFieldLevelEncryptionProfile",
                "cloudfront:GetFieldLevelEncryptionProfileConfig",
                "cloudfront:GetFunction",
                "cloudfront:GetInvalidation",
                "cloudfront:GetKeyGroup",
                "cloudfront:GetKeyGroupConfig",
                "cloudfront:GetMonitoringSubscription",
                "cloudfront:GetOriginRequestPolicy",
                "cloudfront:GetOriginRequestPolicyConfig",
                "cloudfront:GetPublicKey",
                "cloudfront:GetPublicKeyConfig",
                "cloudfront:GetRealtimeLogConfig",
                "cloudfront:GetStreamingDistribution",
                "cloudfront:GetStreamingDistributionConfig",
                "cloudfront:ListCachePolicies",
                "cloudfront:ListCloudFrontOriginAccessIdentities",
                "cloudfront:ListConflictingAliases",
                "cloudfront:ListDistributions",
                "cloudfront:ListDistributionsByCachePolicyId",
                "cloudfront:ListDistributionsByKeyGroup",
                "cloudfront:ListDistributionsByOriginRequestPolicyId",
                "cloudfront:ListDistributionsByRealtimeLogConfig",
                "cloudfront:ListDistributionsByWebACLId",
                "cloudfront:ListFieldLevelEncryptionConfigs",
                "cloudfront:ListFieldLevelEncryptionProfiles",
                "cloudfront:ListFunctions",
                "cloudfront:ListInvalidations",
                "cloudfront:ListKeyGroups",
                "cloudfront:ListOriginRequestPolicies",
                "cloudfront:ListPublicKeys",
                "cloudfront:ListRealtimeLogConfigs",
                "cloudfront:ListStreamingDistributions",
                "cloudfront:ListTagsForResource",
                "cloudfront:PublishFunction",
                "cloudfront:TagResource",
                "cloudfront:TestFunction",
                "cloudfront:UntagResource",
                "cloudfront:UpdateCachePolicy",
                "cloudfront:UpdateCloudFrontOriginAccessIdentity",
                "cloudfront:UpdateDistribution",
                "cloudfront:UpdateFieldLevelEncryptionConfig",
                "cloudfront:UpdateFieldLevelEncryptionProfile",
                "cloudfront:UpdateFunction",
                "cloudfront:UpdateKeyGroup",
                "cloudfront:UpdateOriginRequestPolicy",
                "cloudfront:UpdatePublicKey",
                "cloudfront:UpdateRealtimeLogConfig",
                "cloudfront:UpdateStreamingDistribution"
            ],
            "Resource": [
                "arn:${Partition}:cloudfront::<accountID>:<resource_type>/<resource_id>"
            ],
            "Condition": {
                "SomeCondition-DYwpf": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-daCkr": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-KetnW": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Elastic Kubernetes Service",
            "Effect": "Allow",
            "Action": [
                "eks:AccessKubernetesApi",
                "eks:AssociateEncryptionConfig",
                "eks:AssociateIdentityProviderConfig",
                "eks:CreateAddon",
                "eks:CreateCluster",
                "eks:CreateFargateProfile",
                "eks:CreateNodegroup",
                "eks:DeleteAddon",
                "eks:DeleteCluster",
                "eks:DeleteFargateProfile",
                "eks:DeleteNodegroup",
                "eks:DescribeAddon",
                "eks:DescribeAddonVersions",
                "eks:DescribeCluster",
                "eks:DescribeFargateProfile",
                "eks:DescribeIdentityProviderConfig",
                "eks:DescribeNodegroup",
                "eks:DescribeUpdate",
                "eks:DisassociateIdentityProviderConfig",
                "eks:ListAddons",
                "eks:ListClusters",
                "eks:ListFargateProfiles",
                "eks:ListIdentityProviderConfigs",
                "eks:ListNodegroups",
                "eks:ListTagsForResource",
                "eks:ListUpdates",
                "eks:TagResource",
                "eks:UntagResource",
                "eks:UpdateAddon",
                "eks:UpdateClusterConfig",
                "eks:UpdateClusterVersion",
                "eks:UpdateNodegroupConfig",
                "eks:UpdateNodegroupVersion"
            ],
            "Resource": [
                "arn:aws:eks:<region>:<account_ID>:<resource_type>/<relative_ID>"
            ],
            "Condition": {
                "SomeCondition-QudZi": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-tKLPr": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-FaTiw": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-opNfv": {
                    "eks:clientId": "...some value..."
                },
                "SomeCondition-ufQrx": {
                    "eks:issuerUrl": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Firewall Manager",
            "Effect": "Allow",
            "Action": [
                "fms:AssociateAdminAccount",
                "fms:DeleteAppsList",
                "fms:DeleteNotificationChannel",
                "fms:DeletePolicy",
                "fms:DeleteProtocolsList",
                "fms:DisassociateAdminAccount",
                "fms:GetAdminAccount",
                "fms:GetAppsList",
                "fms:GetComplianceDetail",
                "fms:GetNotificationChannel",
                "fms:GetPolicy",
                "fms:GetProtectionStatus",
                "fms:GetProtocolsList",
                "fms:GetViolationDetails",
                "fms:ListAppsLists",
                "fms:ListComplianceStatus",
                "fms:ListMemberAccounts",
                "fms:ListPolicies",
                "fms:ListProtocolsLists",
                "fms:ListTagsForResource",
                "fms:PutAppsList",
                "fms:PutNotificationChannel",
                "fms:PutPolicy",
                "fms:PutProtocolsList",
                "fms:TagResource",
                "fms:UntagResource"
            ],
            "Resource": [
                "arn:aws:fms:<region>:<account_id>:<resource>/<resource_id>"
            ],
            "Condition": {
                "SomeCondition-eXrdY": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-OawSJ": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-SVTfn": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Kinesis",
            "Effect": "Allow",
            "Action": [
                "kinesis:AddTagsToStream",
                "kinesis:CreateStream",
                "kinesis:DecreaseStreamRetentionPeriod",
                "kinesis:DeleteStream",
                "kinesis:DeregisterStreamConsumer",
                "kinesis:DescribeLimits",
                "kinesis:DescribeStream",
                "kinesis:DescribeStreamConsumer",
                "kinesis:DescribeStreamSummary",
                "kinesis:DisableEnhancedMonitoring",
                "kinesis:EnableEnhancedMonitoring",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:IncreaseStreamRetentionPeriod",
                "kinesis:ListShards",
                "kinesis:ListStreamConsumers",
                "kinesis:ListStreams",
                "kinesis:ListTagsForStream",
                "kinesis:MergeShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
                "kinesis:RegisterStreamConsumer",
                "kinesis:RemoveTagsFromStream",
                "kinesis:SplitShard",
                "kinesis:StartStreamEncryption",
                "kinesis:StopStreamEncryption",
                "kinesis:SubscribeToShard",
                "kinesis:UpdateShardCount"
            ],
            "Resource": [
                "arn:aws:kinesis:<region>:<account>:<resourceType>/<resourceName>"
            ]
        },
        {
            "Sid": "AWS Billing",
            "Effect": "Allow",
            "Action": [
                "aws-portal:ModifyAccount",
                "aws-portal:ModifyBilling",
                "aws-portal:ModifyPaymentMethods",
                "aws-portal:ViewAccount",
                "aws-portal:ViewBilling",
                "aws-portal:ViewPaymentMethods",
                "aws-portal:ViewUsage"
            ]
        },
        {
            "Sid": "AWS Directory Service",
            "Effect": "Allow",
            "Action": [
                "ds:AcceptSharedDirectory",
                "ds:AddIpRoutes",
                "ds:AddRegion",
                "ds:AddTagsToResource",
                "ds:AuthorizeApplication",
                "ds:CancelSchemaExtension",
                "ds:CheckAlias",
                "ds:ConnectDirectory",
                "ds:CreateAlias",
                "ds:CreateComputer",
                "ds:CreateConditionalForwarder",
                "ds:CreateDirectory",
                "ds:CreateIdentityPoolDirectory",
                "ds:CreateLogSubscription",
                "ds:CreateMicrosoftAD",
                "ds:CreateSnapshot",
                "ds:CreateTrust",
                "ds:DeleteConditionalForwarder",
                "ds:DeleteDirectory",
                "ds:DeleteLogSubscription",
                "ds:DeleteSnapshot",
                "ds:DeleteTrust",
                "ds:DeregisterCertificate",
                "ds:DeregisterEventTopic",
                "ds:DescribeCertificate",
                "ds:DescribeConditionalForwarders",
                "ds:DescribeDirectories",
                "ds:DescribeDomainControllers",
                "ds:DescribeEventTopics",
                "ds:DescribeLDAPSSettings",
                "ds:DescribeRegions",
                "ds:DescribeSharedDirectories",
                "ds:DescribeSnapshots",
                "ds:DescribeTrusts",
                "ds:DisableClientAuthentication",
                "ds:DisableLDAPS",
                "ds:DisableRadius",
                "ds:DisableSso",
                "ds:EnableClientAuthentication",
                "ds:EnableLDAPS",
                "ds:EnableRadius",
                "ds:EnableSso",
                "ds:GetAuthorizedApplicationDetails",
                "ds:GetDirectoryLimits",
                "ds:GetSnapshotLimits",
                "ds:ListAuthorizedApplications",
                "ds:ListCertificates",
                "ds:ListIpRoutes",
                "ds:ListLogSubscriptions",
                "ds:ListSchemaExtensions",
                "ds:ListTagsForResource",
                "ds:RegisterCertificate",
                "ds:RegisterEventTopic",
                "ds:RejectSharedDirectory",
                "ds:RemoveIpRoutes",
                "ds:RemoveRegion",
                "ds:RemoveTagsFromResource",
                "ds:ResetUserPassword",
                "ds:RestoreFromSnapshot",
                "ds:ShareDirectory",
                "ds:StartSchemaExtension",
                "ds:UnauthorizeApplication",
                "ds:UnshareDirectory",
                "ds:UpdateConditionalForwarder",
                "ds:UpdateNumberOfDomainControllers",
                "ds:UpdateRadius",
                "ds:UpdateTrust",
                "ds:VerifyTrust"
            ],
            "Resource": [
                "arn:<partition>:ds:<region>:<accountID>:<relative-id>"
            ],
            "Condition": {
                "SomeCondition-sOECw": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-qaGgu": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-IXRMD": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS IoT SiteWise",
            "Effect": "Allow",
            "Action": [
                "iotsitewise:AssociateAssets",
                "iotsitewise:BatchAssociateProjectAssets",
                "iotsitewise:BatchDisassociateProjectAssets",
                "iotsitewise:BatchPutAssetPropertyValue",
                "iotsitewise:CreateAccessPolicy",
                "iotsitewise:CreateAsset",
                "iotsitewise:CreateAssetModel",
                "iotsitewise:CreateDashboard",
                "iotsitewise:CreateGateway",
                "iotsitewise:CreatePortal",
                "iotsitewise:CreateProject",
                "iotsitewise:DeleteAccessPolicy",
                "iotsitewise:DeleteAsset",
                "iotsitewise:DeleteAssetModel",
                "iotsitewise:DeleteDashboard",
                "iotsitewise:DeleteGateway",
                "iotsitewise:DeletePortal",
                "iotsitewise:DeleteProject",
                "iotsitewise:DescribeAccessPolicy",
                "iotsitewise:DescribeAsset",
                "iotsitewise:DescribeAssetModel",
                "iotsitewise:DescribeAssetProperty",
                "iotsitewise:DescribeDashboard",
                "iotsitewise:DescribeDefaultEncryptionConfiguration",
                "iotsitewise:DescribeGateway",
                "iotsitewise:DescribeGatewayCapabilityConfiguration",
                "iotsitewise:DescribeLoggingOptions",
                "iotsitewise:DescribePortal",
                "iotsitewise:DescribeProject",
                "iotsitewise:DisassociateAssets",
                "iotsitewise:GetAssetPropertyAggregates",
                "iotsitewise:GetAssetPropertyValue",
                "iotsitewise:GetAssetPropertyValueHistory",
                "iotsitewise:ListAccessPolicies",
                "iotsitewise:ListAssetModels",
                "iotsitewise:ListAssetRelationships",
                "iotsitewise:ListAssets",
                "iotsitewise:ListAssociatedAssets",
                "iotsitewise:ListDashboards",
                "iotsitewise:ListGateways",
                "iotsitewise:ListPortals",
                "iotsitewise:ListProjectAssets",
                "iotsitewise:ListProjects",
                "iotsitewise:ListTagsForResource",
                "iotsitewise:PutDefaultEncryptionConfiguration",
                "iotsitewise:PutLoggingOptions",
                "iotsitewise:TagResource",
                "iotsitewise:UntagResource",
                "iotsitewise:UpdateAccessPolicy",
                "iotsitewise:UpdateAsset",
                "iotsitewise:UpdateAssetModel",
                "iotsitewise:UpdateAssetModelPropertyRouting",
                "iotsitewise:UpdateAssetProperty",
                "iotsitewise:UpdateDashboard",
                "iotsitewise:UpdateGateway",
                "iotsitewise:UpdateGatewayCapabilityConfiguration",
                "iotsitewise:UpdatePortal",
                "iotsitewise:UpdateProject"
            ],
            "Resource": [
                "arn:${Partition}:iotsitewise:<region>:<account-id>:<type>/<id>"
            ],
            "Condition": {
                "SomeCondition-vnMLN": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-AmSCR": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-nXKEj": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-BqohK": {
                    "iotsitewise:assetHierarchyPath": "...some value..."
                },
                "SomeCondition-FAvVx": {
                    "iotsitewise:childAssetId": "...some value..."
                },
                "SomeCondition-QrOhg": {
                    "iotsitewise:group": "...some value..."
                },
                "SomeCondition-timvo": {
                    "iotsitewise:iam": "...some value..."
                },
                "SomeCondition-WdHUb": {
                    "iotsitewise:portal": "...some value..."
                },
                "SomeCondition-wJTGW": {
                    "iotsitewise:project": "...some value..."
                },
                "SomeCondition-DMkRo": {
                    "iotsitewise:propertyId": "...some value..."
                },
                "SomeCondition-yFwxX": {
                    "iotsitewise:user": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS CodeStar Notifications",
            "Effect": "Allow",
            "Action": [
                "codestar-notifications:CreateNotificationRule",
                "codestar-notifications:DeleteNotificationRule",
                "codestar-notifications:DeleteTarget",
                "codestar-notifications:DescribeNotificationRule",
                "codestar-notifications:ListEventTypes",
                "codestar-notifications:ListNotificationRules",
                "codestar-notifications:ListTagsForResource",
                "codestar-notifications:ListTargets",
                "codestar-notifications:Subscribe",
                "codestar-notifications:TagResource",
                "codestar-notifications:Unsubscribe",
                "codestar-notifications:UntagResource",
                "codestar-notifications:UpdateNotificationRule"
            ],
            "Resource": [
                "arn:aws:codestar-notifications:<region>:<account-id>:<resource-type>/<resource_id>"
            ],
            "Condition": {
                "SomeCondition-HbiQc": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-tWxav": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-yUmfZ": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-YDhKk": {
                    "codestar-notifications:NotificationsForResource": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Fraud Detector",
            "Effect": "Allow",
            "Action": [
                "frauddetector:BatchCreateVariable",
                "frauddetector:BatchGetVariable",
                "frauddetector:CancelBatchPredictionJob",
                "frauddetector:CreateBatchPredictionJob",
                "frauddetector:CreateDetectorVersion",
                "frauddetector:CreateModel",
                "frauddetector:CreateModelVersion",
                "frauddetector:CreateRule",
                "frauddetector:CreateVariable",
                "frauddetector:DeleteBatchPredictionJob",
                "frauddetector:DeleteDetector",
                "frauddetector:DeleteDetectorVersion",
                "frauddetector:DeleteEntityType",
                "frauddetector:DeleteEvent",
                "frauddetector:DeleteEventType",
                "frauddetector:DeleteExternalModel",
                "frauddetector:DeleteLabel",
                "frauddetector:DeleteModel",
                "frauddetector:DeleteModelVersion",
                "frauddetector:DeleteOutcome",
                "frauddetector:DeleteRule",
                "frauddetector:DeleteVariable",
                "frauddetector:DescribeDetector",
                "frauddetector:DescribeModelVersions",
                "frauddetector:GetBatchPredictionJobs",
                "frauddetector:GetDetectorVersion",
                "frauddetector:GetDetectors",
                "frauddetector:GetEntityTypes",
                "frauddetector:GetEventPrediction",
                "frauddetector:GetEventTypes",
                "frauddetector:GetExternalModels",
                "frauddetector:GetKMSEncryptionKey",
                "frauddetector:GetLabels",
                "frauddetector:GetModelVersion",
                "frauddetector:GetModels",
                "frauddetector:GetOutcomes",
                "frauddetector:GetRules",
                "frauddetector:GetVariables",
                "frauddetector:ListTagsForResource",
                "frauddetector:PutDetector",
                "frauddetector:PutEntityType",
                "frauddetector:PutEventType",
                "frauddetector:PutExternalModel",
                "frauddetector:PutKMSEncryptionKey",
                "frauddetector:PutLabel",
                "frauddetector:PutOutcome",
                "frauddetector:TagResource",
                "frauddetector:UntagResource",
                "frauddetector:UpdateDetectorVersion",
                "frauddetector:UpdateDetectorVersionMetadata",
                "frauddetector:UpdateDetectorVersionStatus",
                "frauddetector:UpdateModel",
                "frauddetector:UpdateModelVersion",
                "frauddetector:UpdateModelVersionStatus",
                "frauddetector:UpdateRuleMetadata",
                "frauddetector:UpdateRuleVersion",
                "frauddetector:UpdateVariable"
            ],
            "Resource": [
                "arn:aws:frauddetector:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-cAsJl": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-kUASX": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-nZeMf": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon WorkLink",
            "Effect": "Allow",
            "Action": [
                "worklink:AssociateDomain",
                "worklink:AssociateWebsiteAuthorizationProvider",
                "worklink:AssociateWebsiteCertificateAuthority",
                "worklink:CreateFleet",
                "worklink:DeleteFleet",
                "worklink:DescribeAuditStreamConfiguration",
                "worklink:DescribeCompanyNetworkConfiguration",
                "worklink:DescribeDevice",
                "worklink:DescribeDevicePolicyConfiguration",
                "worklink:DescribeDomain",
                "worklink:DescribeFleetMetadata",
                "worklink:DescribeIdentityProviderConfiguration",
                "worklink:DescribeWebsiteCertificateAuthority",
                "worklink:DisassociateDomain",
                "worklink:DisassociateWebsiteAuthorizationProvider",
                "worklink:DisassociateWebsiteCertificateAuthority",
                "worklink:ListDevices",
                "worklink:ListDomains",
                "worklink:ListFleets",
                "worklink:ListTagsForResource",
                "worklink:ListWebsiteAuthorizationProviders",
                "worklink:ListWebsiteCertificateAuthorities",
                "worklink:RestoreDomainAccess",
                "worklink:RevokeDomainAccess",
                "worklink:SearchEntity",
                "worklink:SignOutUser",
                "worklink:TagResource",
                "worklink:UntagResource",
                "worklink:UpdateAuditStreamConfiguration",
                "worklink:UpdateCompanyNetworkConfiguration",
                "worklink:UpdateDevicePolicyConfiguration",
                "worklink:UpdateDomainMetadata",
                "worklink:UpdateFleetMetadata",
                "worklink:UpdateIdentityProviderConfiguration"
            ],
            "Resource": [
                "arn:${Partition}:worklink::${account}:${resourceType}/${resourcePath}"
            ],
            "Condition": {
                "SomeCondition-ufXpU": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-OUQtW": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-weHYU": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS CodeStar Connections",
            "Effect": "Allow",
            "Action": [
                "codestar-connections:CreateConnection",
                "codestar-connections:CreateHost",
                "codestar-connections:DeleteConnection",
                "codestar-connections:DeleteHost",
                "codestar-connections:GetConnection",
                "codestar-connections:GetHost",
                "codestar-connections:GetIndividualAccessToken",
                "codestar-connections:GetInstallationUrl",
                "codestar-connections:ListConnections",
                "codestar-connections:ListHosts",
                "codestar-connections:ListInstallationTargets",
                "codestar-connections:ListTagsForResource",
                "codestar-connections:PassConnection",
                "codestar-connections:RegisterAppCode",
                "codestar-connections:StartAppRegistrationHandshake",
                "codestar-connections:StartOAuthHandshake",
                "codestar-connections:TagResource",
                "codestar-connections:UntagResource",
                "codestar-connections:UpdateConnectionInstallation",
                "codestar-connections:UpdateHost",
                "codestar-connections:UseConnection"
            ],
            "Resource": [
                "arn:aws:codestar-connections:<region>:<account-id>:<resource-type>/<resource_id>"
            ],
            "Condition": {
                "SomeCondition-Qbnft": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-UnHuJ": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-zuRrt": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-lNoIz": {
                    "codestar-connections:BranchName": "...some value..."
                },
                "SomeCondition-ElHmX": {
                    "codestar-connections:FullRepositoryId": "...some value..."
                },
                "SomeCondition-nIuAe": {
                    "codestar-connections:HostArn": "...some value..."
                },
                "SomeCondition-bkoIw": {
                    "codestar-connections:InstallationId": "...some value..."
                },
                "SomeCondition-MXbnc": {
                    "codestar-connections:OwnerId": "...some value..."
                },
                "SomeCondition-MUlht": {
                    "codestar-connections:PassedToService": "...some value..."
                },
                "SomeCondition-QICJR": {
                    "codestar-connections:ProviderAction": "...some value..."
                },
                "SomeCondition-fjNsV": {
                    "codestar-connections:ProviderPermissionsRequired": "...some value..."
                },
                "SomeCondition-cMpCh": {
                    "codestar-connections:ProviderType": "...some value..."
                },
                "SomeCondition-YGxBP": {
                    "codestar-connections:ProviderTypeFilter": "...some value..."
                },
                "SomeCondition-eJFHK": {
                    "codestar-connections:RepositoryName": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon WorkSpaces",
            "Effect": "Allow",
            "Action": [
                "workspaces:AssociateConnectionAlias",
                "workspaces:AssociateIpGroups",
                "workspaces:AuthorizeIpRules",
                "workspaces:CopyWorkspaceImage",
                "workspaces:CreateConnectionAlias",
                "workspaces:CreateIpGroup",
                "workspaces:CreateTags",
                "workspaces:CreateWorkspaceBundle",
                "workspaces:CreateWorkspaces",
                "workspaces:DeleteConnectionAlias",
                "workspaces:DeleteIpGroup",
                "workspaces:DeleteTags",
                "workspaces:DeleteWorkspaceBundle",
                "workspaces:DeleteWorkspaceImage",
                "workspaces:DeregisterWorkspaceDirectory",
                "workspaces:DescribeAccount",
                "workspaces:DescribeAccountModifications",
                "workspaces:DescribeClientProperties",
                "workspaces:DescribeConnectionAliasPermissions",
                "workspaces:DescribeConnectionAliases",
                "workspaces:DescribeIpGroups",
                "workspaces:DescribeTags",
                "workspaces:DescribeWorkspaceBundles",
                "workspaces:DescribeWorkspaceDirectories",
                "workspaces:DescribeWorkspaceImagePermissions",
                "workspaces:DescribeWorkspaceImages",
                "workspaces:DescribeWorkspaceSnapshots",
                "workspaces:DescribeWorkspaces",
                "workspaces:DescribeWorkspacesConnectionStatus",
                "workspaces:DisassociateConnectionAlias",
                "workspaces:DisassociateIpGroups",
                "workspaces:ImportWorkspaceImage",
                "workspaces:ListAvailableManagementCidrRanges",
                "workspaces:MigrateWorkspace",
                "workspaces:ModifyAccount",
                "workspaces:ModifyClientProperties",
                "workspaces:ModifySelfservicePermissions",
                "workspaces:ModifyWorkspaceAccessProperties",
                "workspaces:ModifyWorkspaceCreationProperties",
                "workspaces:ModifyWorkspaceProperties",
                "workspaces:ModifyWorkspaceState",
                "workspaces:RebootWorkspaces",
                "workspaces:RebuildWorkspaces",
                "workspaces:RegisterWorkspaceDirectory",
                "workspaces:RestoreWorkspace",
                "workspaces:RevokeIpRules",
                "workspaces:StartWorkspaces",
                "workspaces:StopWorkspaces",
                "workspaces:TerminateWorkspaces",
                "workspaces:UpdateConnectionAliasPermission",
                "workspaces:UpdateRulesOfIpGroup",
                "workspaces:UpdateWorkspaceBundle",
                "workspaces:UpdateWorkspaceImagePermission"
            ],
            "Resource": [
                "arn:aws:workspaces:*:*"
            ],
            "Condition": {
                "SomeCondition-KJGqP": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-dXxbY": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-ciwls": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Lookout for Vision",
            "Effect": "Allow",
            "Action": [
                "lookoutvision:CreateDataset",
                "lookoutvision:CreateModel",
                "lookoutvision:CreateProject",
                "lookoutvision:DeleteDataset",
                "lookoutvision:DeleteModel",
                "lookoutvision:DeleteProject",
                "lookoutvision:DescribeDataset",
                "lookoutvision:DescribeModel",
                "lookoutvision:DescribeProject",
                "lookoutvision:DescribeTrialDetection",
                "lookoutvision:DetectAnomalies",
                "lookoutvision:ListDatasetEntries",
                "lookoutvision:ListModels",
                "lookoutvision:ListProjects",
                "lookoutvision:ListTagsForResource",
                "lookoutvision:ListTrialDetections",
                "lookoutvision:StartModel",
                "lookoutvision:StartTrialDetection",
                "lookoutvision:StopModel",
                "lookoutvision:TagResource",
                "lookoutvision:UntagResource",
                "lookoutvision:UpdateDatasetEntries"
            ],
            "Resource": [
                "arn:aws:lookoutvision:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-FNkBX": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-DKqdC": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-dFWhM": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Chime",
            "Effect": "Allow",
            "Action": [
                "chime:AcceptDelegate",
                "chime:ActivateUsers",
                "chime:AddDomain",
                "chime:AddOrUpdateGroups",
                "chime:AssociatePhoneNumberWithUser",
                "chime:AssociatePhoneNumbersWithVoiceConnector",
                "chime:AssociatePhoneNumbersWithVoiceConnectorGroup",
                "chime:AssociateSigninDelegateGroupsWithAccount",
                "chime:AuthorizeDirectory",
                "chime:BatchCreateAttendee",
                "chime:BatchCreateChannelMembership",
                "chime:BatchCreateRoomMembership",
                "chime:BatchDeletePhoneNumber",
                "chime:BatchSuspendUser",
                "chime:BatchUnsuspendUser",
                "chime:BatchUpdatePhoneNumber",
                "chime:BatchUpdateUser",
                "chime:Connect",
                "chime:ConnectDirectory",
                "chime:CreateAccount",
                "chime:CreateApiKey",
                "chime:CreateAppInstance",
                "chime:CreateAppInstanceAdmin",
                "chime:CreateAppInstanceUser",
                "chime:CreateAttendee",
                "chime:CreateBot",
                "chime:CreateBotMembership",
                "chime:CreateCDRBucket",
                "chime:CreateChannel",
                "chime:CreateChannelBan",
                "chime:CreateChannelMembership",
                "chime:CreateChannelModerator",
                "chime:CreateMediaCapturePipeline",
                "chime:CreateMeeting",
                "chime:CreateMeetingDialOut",
                "chime:CreateMeetingWithAttendees",
                "chime:CreatePhoneNumberOrder",
                "chime:CreateProxySession",
                "chime:CreateRoom",
                "chime:CreateRoomMembership",
                "chime:CreateSipMediaApplication",
                "chime:CreateSipMediaApplicationCall",
                "chime:CreateSipRule",
                "chime:CreateUser",
                "chime:CreateVoiceConnector",
                "chime:CreateVoiceConnectorGroup",
                "chime:DeleteAccount",
                "chime:DeleteAccountOpenIdConfig",
                "chime:DeleteApiKey",
                "chime:DeleteAppInstance",
                "chime:DeleteAppInstanceAdmin",
                "chime:DeleteAppInstanceStreamingConfigurations",
                "chime:DeleteAppInstanceUser",
                "chime:DeleteAttendee",
                "chime:DeleteCDRBucket",
                "chime:DeleteChannel",
                "chime:DeleteChannelBan",
                "chime:DeleteChannelMembership",
                "chime:DeleteChannelMessage",
                "chime:DeleteChannelModerator",
                "chime:DeleteDelegate",
                "chime:DeleteDomain",
                "chime:DeleteEventsConfiguration",
                "chime:DeleteGroups",
                "chime:DeleteMediaCapturePipeline",
                "chime:DeleteMeeting",
                "chime:DeletePhoneNumber",
                "chime:DeleteProxySession",
                "chime:DeleteRoom",
                "chime:DeleteRoomMembership",
                "chime:DeleteSipMediaApplication",
                "chime:DeleteSipRule",
                "chime:DeleteVoiceConnector",
                "chime:DeleteVoiceConnectorEmergencyCallingConfiguration",
                "chime:DeleteVoiceConnectorGroup",
                "chime:DeleteVoiceConnectorOrigination",
                "chime:DeleteVoiceConnectorProxy",
                "chime:DeleteVoiceConnectorStreamingConfiguration",
                "chime:DeleteVoiceConnectorTermination",
                "chime:DeleteVoiceConnectorTerminationCredentials",
                "chime:DescribeAppInstance",
                "chime:DescribeAppInstanceAdmin",
                "chime:DescribeAppInstanceUser",
                "chime:DescribeChannel",
                "chime:DescribeChannelBan",
                "chime:DescribeChannelMembership",
                "chime:DescribeChannelMembershipForAppInstanceUser",
                "chime:DescribeChannelModeratedByAppInstanceUser",
                "chime:DescribeChannelModerator",
                "chime:DisassociatePhoneNumberFromUser",
                "chime:DisassociatePhoneNumbersFromVoiceConnector",
                "chime:DisassociatePhoneNumbersFromVoiceConnectorGroup",
                "chime:DisassociateSigninDelegateGroupsFromAccount",
                "chime:DisconnectDirectory",
                "chime:GetAccount",
                "chime:GetAccountResource",
                "chime:GetAccountSettings",
                "chime:GetAccountWithOpenIdConfig",
                "chime:GetAppInstanceRetentionSettings",
                "chime:GetAppInstanceStreamingConfigurations",
                "chime:GetAttendee",
                "chime:GetBot",
                "chime:GetCDRBucket",
                "chime:GetChannelMessage",
                "chime:GetDomain",
                "chime:GetEventsConfiguration",
                "chime:GetGlobalSettings",
                "chime:GetMediaCapturePipeline",
                "chime:GetMeeting",
                "chime:GetMeetingDetail",
                "chime:GetMessagingSessionEndpoint",
                "chime:GetPhoneNumber",
                "chime:GetPhoneNumberOrder",
                "chime:GetPhoneNumberSettings",
                "chime:GetProxySession",
                "chime:GetRetentionSettings",
                "chime:GetRoom",
                "chime:GetSipMediaApplication",
                "chime:GetSipMediaApplicationLoggingConfiguration",
                "chime:GetSipRule",
                "chime:GetTelephonyLimits",
                "chime:GetUser",
                "chime:GetUserActivityReportData",
                "chime:GetUserByEmail",
                "chime:GetUserSettings",
                "chime:GetVoiceConnector",
                "chime:GetVoiceConnectorEmergencyCallingConfiguration",
                "chime:GetVoiceConnectorGroup",
                "chime:GetVoiceConnectorLoggingConfiguration",
                "chime:GetVoiceConnectorOrigination",
                "chime:GetVoiceConnectorProxy",
                "chime:GetVoiceConnectorStreamingConfiguration",
                "chime:GetVoiceConnectorTermination",
                "chime:GetVoiceConnectorTerminationHealth",
                "chime:InviteDelegate",
                "chime:InviteUsers",
                "chime:InviteUsersFromProvider",
                "chime:ListAccountUsageReportData",
                "chime:ListAccounts",
                "chime:ListApiKeys",
                "chime:ListAppInstanceAdmins",
                "chime:ListAppInstanceUsers",
                "chime:ListAppInstances",
                "chime:ListAttendeeTags",
                "chime:ListAttendees",
                "chime:ListBots",
                "chime:ListCDRBucket",
                "chime:ListCallingRegions",
                "chime:ListChannelBans",
                "chime:ListChannelMemberships",
                "chime:ListChannelMembershipsForAppInstanceUser",
                "chime:ListChannelMessages",
                "chime:ListChannelModerators",
                "chime:ListChannels",
                "chime:ListChannelsModeratedByAppInstanceUser",
                "chime:ListDelegates",
                "chime:ListDirectories",
                "chime:ListDomains",
                "chime:ListGroups",
                "chime:ListMediaCapturePipelines",
                "chime:ListMeetingEvents",
                "chime:ListMeetingTags",
                "chime:ListMeetings",
                "chime:ListMeetingsReportData",
                "chime:ListPhoneNumberOrders",
                "chime:ListPhoneNumbers",
                "chime:ListProxySessions",
                "chime:ListRoomMemberships",
                "chime:ListRooms",
                "chime:ListSipMediaApplications",
                "chime:ListSipRules",
                "chime:ListSupportedPhoneNumberCountries",
                "chime:ListTagsForResource",
                "chime:ListUsers",
                "chime:ListVoiceConnectorGroups",
                "chime:ListVoiceConnectorTerminationCredentials",
                "chime:ListVoiceConnectors",
                "chime:LogoutUser",
                "chime:PutAppInstanceRetentionSettings",
                "chime:PutAppInstanceStreamingConfigurations",
                "chime:PutEventsConfiguration",
                "chime:PutRetentionSettings",
                "chime:PutSipMediaApplicationLoggingConfiguration",
                "chime:PutVoiceConnectorEmergencyCallingConfiguration",
                "chime:PutVoiceConnectorLoggingConfiguration",
                "chime:PutVoiceConnectorOrigination",
                "chime:PutVoiceConnectorProxy",
                "chime:PutVoiceConnectorStreamingConfiguration",
                "chime:PutVoiceConnectorTermination",
                "chime:PutVoiceConnectorTerminationCredentials",
                "chime:RedactChannelMessage",
                "chime:RedactConversationMessage",
                "chime:RedactRoomMessage",
                "chime:RegenerateSecurityToken",
                "chime:RenameAccount",
                "chime:RenewDelegate",
                "chime:ResetAccountResource",
                "chime:ResetPersonalPIN",
                "chime:RestorePhoneNumber",
                "chime:RetrieveDataExports",
                "chime:SearchAvailablePhoneNumbers",
                "chime:SendChannelMessage",
                "chime:StartDataExport",
                "chime:SubmitSupportRequest",
                "chime:SuspendUsers",
                "chime:TagAttendee",
                "chime:TagMeeting",
                "chime:TagResource",
                "chime:UnauthorizeDirectory",
                "chime:UntagAttendee",
                "chime:UntagMeeting",
                "chime:UntagResource",
                "chime:UpdateAccount",
                "chime:UpdateAccountOpenIdConfig",
                "chime:UpdateAccountResource",
                "chime:UpdateAccountSettings",
                "chime:UpdateAppInstance",
                "chime:UpdateAppInstanceUser",
                "chime:UpdateBot",
                "chime:UpdateCDRSettings",
                "chime:UpdateChannel",
                "chime:UpdateChannelMessage",
                "chime:UpdateChannelReadMarker",
                "chime:UpdateGlobalSettings",
                "chime:UpdatePhoneNumber",
                "chime:UpdatePhoneNumberSettings",
                "chime:UpdateProxySession",
                "chime:UpdateRoom",
                "chime:UpdateRoomMembership",
                "chime:UpdateSipMediaApplication",
                "chime:UpdateSipMediaApplicationCall",
                "chime:UpdateSipRule",
                "chime:UpdateSupportedLicenses",
                "chime:UpdateUser",
                "chime:UpdateUserLicenses",
                "chime:UpdateUserSettings",
                "chime:UpdateVoiceConnector",
                "chime:UpdateVoiceConnectorGroup",
                "chime:ValidateAccountResource"
            ],
            "Resource": [
                "arn:aws:chime::<accountId>:<resourceType>/<resourceId>"
            ],
            "Condition": {
                "SomeCondition-Okjvu": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-AXQyj": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-PigcB": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon ElastiCache",
            "Effect": "Allow",
            "Action": [
                "elasticache:AddTagsToResource",
                "elasticache:AuthorizeCacheSecurityGroupIngress",
                "elasticache:BatchApplyUpdateAction",
                "elasticache:BatchStopUpdateAction",
                "elasticache:CompleteMigration",
                "elasticache:CopySnapshot",
                "elasticache:CreateCacheCluster",
                "elasticache:CreateCacheParameterGroup",
                "elasticache:CreateCacheSecurityGroup",
                "elasticache:CreateCacheSubnetGroup",
                "elasticache:CreateGlobalReplicationGroup",
                "elasticache:CreateReplicationGroup",
                "elasticache:CreateSnapshot",
                "elasticache:CreateUser",
                "elasticache:CreateUserGroup",
                "elasticache:DecreaseNodeGroupsInGlobalReplicationGroup",
                "elasticache:DecreaseReplicaCount",
                "elasticache:DeleteCacheCluster",
                "elasticache:DeleteCacheParameterGroup",
                "elasticache:DeleteCacheSecurityGroup",
                "elasticache:DeleteCacheSubnetGroup",
                "elasticache:DeleteGlobalReplicationGroup",
                "elasticache:DeleteReplicationGroup",
                "elasticache:DeleteSnapshot",
                "elasticache:DeleteUser",
                "elasticache:DeleteUserGroup",
                "elasticache:DescribeCacheClusters",
                "elasticache:DescribeCacheEngineVersions",
                "elasticache:DescribeCacheParameterGroups",
                "elasticache:DescribeCacheParameters",
                "elasticache:DescribeCacheSecurityGroups",
                "elasticache:DescribeCacheSubnetGroups",
                "elasticache:DescribeEngineDefaultParameters",
                "elasticache:DescribeEvents",
                "elasticache:DescribeGlobalReplicationGroups",
                "elasticache:DescribeReplicationGroups",
                "elasticache:DescribeReservedCacheNodes",
                "elasticache:DescribeReservedCacheNodesOfferings",
                "elasticache:DescribeServiceUpdates",
                "elasticache:DescribeSnapshots",
                "elasticache:DescribeUpdateActions",
                "elasticache:DescribeUserGroups",
                "elasticache:DescribeUsers",
                "elasticache:DisassociateGlobalReplicationGroup",
                "elasticache:FailoverGlobalReplicationGroup",
                "elasticache:IncreaseNodeGroupsInGlobalReplicationGroup",
                "elasticache:IncreaseReplicaCount",
                "elasticache:ListAllowedNodeTypeModifications",
                "elasticache:ListTagsForResource",
                "elasticache:ModifyCacheCluster",
                "elasticache:ModifyCacheParameterGroup",
                "elasticache:ModifyCacheSubnetGroup",
                "elasticache:ModifyGlobalReplicationGroup",
                "elasticache:ModifyReplicationGroup",
                "elasticache:ModifyReplicationGroupShardConfiguration",
                "elasticache:ModifyUser",
                "elasticache:ModifyUserGroup",
                "elasticache:PurchaseReservedCacheNodesOffering",
                "elasticache:RebalanceSlotsInGlobalReplicationGroup",
                "elasticache:RebootCacheCluster",
                "elasticache:RemoveTagsFromResource",
                "elasticache:ResetCacheParameterGroup",
                "elasticache:RevokeCacheSecurityGroupIngress",
                "elasticache:StartMigration",
                "elasticache:TestFailover"
            ],
            "Resource": [
                "arn:<partition>:elasticache:<region>:<account-id>:<resource-type>:<resource_name>"
            ],
            "Condition": {
                "SomeCondition-hjtzs": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-wRPKv": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-grtxB": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-GBtTm": {
                    "elasticache:AtRestEncryptionEnabled": "...some value..."
                },
                "SomeCondition-yMOpe": {
                    "elasticache:AuthTokenEnabled": "...some value..."
                },
                "SomeCondition-XqzrU": {
                    "elasticache:AutomaticFailoverEnabled": "...some value..."
                },
                "SomeCondition-dWFUB": {
                    "elasticache:CacheNodeType": "...some value..."
                },
                "SomeCondition-SWyVr": {
                    "elasticache:CacheParameterGroupName": "...some value..."
                },
                "SomeCondition-ONcWq": {
                    "elasticache:ClusterModeEnabled": "...some value..."
                },
                "SomeCondition-xeAjt": {
                    "elasticache:EngineType": "...some value..."
                },
                "SomeCondition-QEYZM": {
                    "elasticache:EngineVersion": "...some value..."
                },
                "SomeCondition-tIUel": {
                    "elasticache:KmsKeyId": "...some value..."
                },
                "SomeCondition-iqbtN": {
                    "elasticache:MultiAZEnabled": "...some value..."
                },
                "SomeCondition-DbeHl": {
                    "elasticache:NumNodeGroups": "...some value..."
                },
                "SomeCondition-JejLX": {
                    "elasticache:ReplicasPerNodeGroup": "...some value..."
                },
                "SomeCondition-ICkbr": {
                    "elasticache:SnapshotRetentionLimit": "...some value..."
                },
                "SomeCondition-lqcBb": {
                    "elasticache:TransitEncryptionEnabled": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS IoT Core for LoRaWAN",
            "Effect": "Allow",
            "Action": [
                "iotwireless:AssociateAwsAccountWithPartnerAccount",
                "iotwireless:AssociateWirelessDeviceWithThing",
                "iotwireless:AssociateWirelessGatewayWithCertificate",
                "iotwireless:AssociateWirelessGatewayWithThing",
                "iotwireless:CreateDestination",
                "iotwireless:CreateDeviceProfile",
                "iotwireless:CreateServiceProfile",
                "iotwireless:CreateWirelessDevice",
                "iotwireless:CreateWirelessGateway",
                "iotwireless:CreateWirelessGatewayTask",
                "iotwireless:CreateWirelessGatewayTaskDefinition",
                "iotwireless:DeleteDestination",
                "iotwireless:DeleteDeviceProfile",
                "iotwireless:DeleteServiceProfile",
                "iotwireless:DeleteWirelessDevice",
                "iotwireless:DeleteWirelessGateway",
                "iotwireless:DeleteWirelessGatewayTask",
                "iotwireless:DeleteWirelessGatewayTaskDefinition",
                "iotwireless:DisassociateAwsAccountFromPartnerAccount",
                "iotwireless:DisassociateWirelessDeviceFromThing",
                "iotwireless:DisassociateWirelessGatewayFromCertificate",
                "iotwireless:DisassociateWirelessGatewayFromThing",
                "iotwireless:GetDestination",
                "iotwireless:GetDeviceProfile",
                "iotwireless:GetLogLevelsByResourceTypes",
                "iotwireless:GetPartnerAccount",
                "iotwireless:GetResourceLogLevel",
                "iotwireless:GetServiceEndpoint",
                "iotwireless:GetServiceProfile",
                "iotwireless:GetWirelessDevice",
                "iotwireless:GetWirelessDeviceStatistics",
                "iotwireless:GetWirelessGateway",
                "iotwireless:GetWirelessGatewayCertificate",
                "iotwireless:GetWirelessGatewayFirmwareInformation",
                "iotwireless:GetWirelessGatewayStatistics",
                "iotwireless:GetWirelessGatewayTask",
                "iotwireless:GetWirelessGatewayTaskDefinition",
                "iotwireless:ListDestinations",
                "iotwireless:ListDeviceProfiles",
                "iotwireless:ListPartnerAccounts",
                "iotwireless:ListServiceProfiles",
                "iotwireless:ListTagsForResource",
                "iotwireless:ListWirelessDevices",
                "iotwireless:ListWirelessGatewayTaskDefinitions",
                "iotwireless:ListWirelessGateways",
                "iotwireless:PutResourceLogLevel",
                "iotwireless:ResetAllResourceLogLevels",
                "iotwireless:ResetResourceLogLevel",
                "iotwireless:SendDataToWirelessDevice",
                "iotwireless:TagResource",
                "iotwireless:TestWirelessDevice",
                "iotwireless:UntagResource",
                "iotwireless:UpdateDestination",
                "iotwireless:UpdateLogLevelsByResourceTypes",
                "iotwireless:UpdatePartnerAccount",
                "iotwireless:UpdateWirelessDevice",
                "iotwireless:UpdateWirelessGateway"
            ],
            "Resource": [
                "arn:aws:iotwireless:${Region}:${AccountId}:${ResourceType}/${ResourceId}"
            ],
            "Condition": {
                "SomeCondition-ZlWEh": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-SXRlm": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-zmGyQ": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Kinesis Firehose",
            "Effect": "Allow",
            "Action": [
                "firehose:CreateDeliveryStream",
                "firehose:DeleteDeliveryStream",
                "firehose:DescribeDeliveryStream",
                "firehose:ListDeliveryStreams",
                "firehose:ListTagsForDeliveryStream",
                "firehose:PutRecord",
                "firehose:PutRecordBatch",
                "firehose:StartDeliveryStreamEncryption",
                "firehose:StopDeliveryStreamEncryption",
                "firehose:TagDeliveryStream",
                "firehose:UntagDeliveryStream",
                "firehose:UpdateDestination"
            ],
            "Resource": [
                "arn:aws:firehose:<region>:<account_ID>:deliverystream/<deliverystreamname>"
            ],
            "Condition": {
                "SomeCondition-FuUwZ": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-USEML": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-DjMFN": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Mechanical Turk",
            "Effect": "Allow",
            "Action": [
                "mechanicalturk:AcceptQualificationRequest",
                "mechanicalturk:ApproveAssignment",
                "mechanicalturk:AssociateQualificationWithWorker",
                "mechanicalturk:CreateAdditionalAssignmentsForHIT",
                "mechanicalturk:CreateHIT",
                "mechanicalturk:CreateHITType",
                "mechanicalturk:CreateHITWithHITType",
                "mechanicalturk:CreateQualificationType",
                "mechanicalturk:CreateWorkerBlock",
                "mechanicalturk:DeleteHIT",
                "mechanicalturk:DeleteQualificationType",
                "mechanicalturk:DeleteWorkerBlock",
                "mechanicalturk:DisassociateQualificationFromWorker",
                "mechanicalturk:GetAccountBalance",
                "mechanicalturk:GetAssignment",
                "mechanicalturk:GetFileUploadURL",
                "mechanicalturk:GetHIT",
                "mechanicalturk:GetQualificationScore",
                "mechanicalturk:GetQualificationType",
                "mechanicalturk:ListAssignmentsForHIT",
                "mechanicalturk:ListBonusPayments",
                "mechanicalturk:ListHITs",
                "mechanicalturk:ListHITsForQualificationType",
                "mechanicalturk:ListQualificationRequests",
                "mechanicalturk:ListQualificationTypes",
                "mechanicalturk:ListReviewPolicyResultsForHIT",
                "mechanicalturk:ListReviewableHITs",
                "mechanicalturk:ListWorkerBlocks",
                "mechanicalturk:ListWorkersWithQualificationType",
                "mechanicalturk:NotifyWorkers",
                "mechanicalturk:RejectAssignment",
                "mechanicalturk:RejectQualificationRequest",
                "mechanicalturk:SendBonus",
                "mechanicalturk:SendTestEventNotification",
                "mechanicalturk:UpdateExpirationForHIT",
                "mechanicalturk:UpdateHITReviewStatus",
                "mechanicalturk:UpdateHITTypeOfHIT",
                "mechanicalturk:UpdateNotificationSettings",
                "mechanicalturk:UpdateQualificationType"
            ]
        },
        {
            "Sid": "Amazon Storage Gateway",
            "Effect": "Allow",
            "Action": [
                "storagegateway:ActivateGateway",
                "storagegateway:AddCache",
                "storagegateway:AddTagsToResource",
                "storagegateway:AddUploadBuffer",
                "storagegateway:AddWorkingStorage",
                "storagegateway:AssignTapePool",
                "storagegateway:AssociateFileSystem",
                "storagegateway:AttachVolume",
                "storagegateway:BypassGovernanceRetention",
                "storagegateway:CancelArchival",
                "storagegateway:CancelRetrieval",
                "storagegateway:CreateCachediSCSIVolume",
                "storagegateway:CreateNFSFileShare",
                "storagegateway:CreateSMBFileShare",
                "storagegateway:CreateSnapshot",
                "storagegateway:CreateSnapshotFromVolumeRecoveryPoint",
                "storagegateway:CreateStorediSCSIVolume",
                "storagegateway:CreateTapePool",
                "storagegateway:CreateTapeWithBarcode",
                "storagegateway:CreateTapes",
                "storagegateway:DeleteAutomaticTapeCreationPolicy",
                "storagegateway:DeleteBandwidthRateLimit",
                "storagegateway:DeleteChapCredentials",
                "storagegateway:DeleteFileShare",
                "storagegateway:DeleteGateway",
                "storagegateway:DeleteSnapshotSchedule",
                "storagegateway:DeleteTape",
                "storagegateway:DeleteTapeArchive",
                "storagegateway:DeleteTapePool",
                "storagegateway:DeleteVolume",
                "storagegateway:DescribeAvailabilityMonitorTest",
                "storagegateway:DescribeBandwidthRateLimit",
                "storagegateway:DescribeBandwidthRateLimitSchedule",
                "storagegateway:DescribeCache",
                "storagegateway:DescribeCachediSCSIVolumes",
                "storagegateway:DescribeChapCredentials",
                "storagegateway:DescribeFileSystemAssociations",
                "storagegateway:DescribeGatewayInformation",
                "storagegateway:DescribeMaintenanceStartTime",
                "storagegateway:DescribeNFSFileShares",
                "storagegateway:DescribeSMBFileShares",
                "storagegateway:DescribeSMBSettings",
                "storagegateway:DescribeSnapshotSchedule",
                "storagegateway:DescribeStorediSCSIVolumes",
                "storagegateway:DescribeTapeArchives",
                "storagegateway:DescribeTapeRecoveryPoints",
                "storagegateway:DescribeTapes",
                "storagegateway:DescribeUploadBuffer",
                "storagegateway:DescribeVTLDevices",
                "storagegateway:DescribeWorkingStorage",
                "storagegateway:DetachVolume",
                "storagegateway:DisableGateway",
                "storagegateway:DisassociateFileSystem",
                "storagegateway:JoinDomain",
                "storagegateway:ListAutomaticTapeCreationPolicies",
                "storagegateway:ListFileShares",
                "storagegateway:ListFileSystemAssociations",
                "storagegateway:ListGateways",
                "storagegateway:ListLocalDisks",
                "storagegateway:ListTagsForResource",
                "storagegateway:ListTapePools",
                "storagegateway:ListTapes",
                "storagegateway:ListVolumeInitiators",
                "storagegateway:ListVolumeRecoveryPoints",
                "storagegateway:ListVolumes",
                "storagegateway:NotifyWhenUploaded",
                "storagegateway:RefreshCache",
                "storagegateway:RemoveTagsFromResource",
                "storagegateway:ResetCache",
                "storagegateway:RetrieveTapeArchive",
                "storagegateway:RetrieveTapeRecoveryPoint",
                "storagegateway:SetLocalConsolePassword",
                "storagegateway:SetSMBGuestPassword",
                "storagegateway:ShutdownGateway",
                "storagegateway:StartAvailabilityMonitorTest",
                "storagegateway:StartGateway",
                "storagegateway:UpdateAutomaticTapeCreationPolicy",
                "storagegateway:UpdateBandwidthRateLimit",
                "storagegateway:UpdateBandwidthRateLimitSchedule",
                "storagegateway:UpdateChapCredentials",
                "storagegateway:UpdateFileSystemAssociation",
                "storagegateway:UpdateGatewayInformation",
                "storagegateway:UpdateGatewaySoftwareNow",
                "storagegateway:UpdateMaintenanceStartTime",
                "storagegateway:UpdateNFSFileShare",
                "storagegateway:UpdateSMBFileShare",
                "storagegateway:UpdateSMBFileShareVisibility",
                "storagegateway:UpdateSMBSecurityStrategy",
                "storagegateway:UpdateSnapshotSchedule",
                "storagegateway:UpdateVTLDeviceType"
            ],
            "Resource": [
                "arn:aws:storagegateway:<region>:<account>:<resourceType>/<resourceName>"
            ],
            "Condition": {
                "SomeCondition-xmbAC": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-bOwpj": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-DreTO": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Elastic MapReduce",
            "Effect": "Allow",
            "Action": [
                "elasticmapreduce:AddInstanceFleet",
                "elasticmapreduce:AddInstanceGroups",
                "elasticmapreduce:AddJobFlowSteps",
                "elasticmapreduce:AddTags",
                "elasticmapreduce:CancelSteps",
                "elasticmapreduce:CreateEditor",
                "elasticmapreduce:CreateRepository",
                "elasticmapreduce:CreateSecurityConfiguration",
                "elasticmapreduce:CreateStudio",
                "elasticmapreduce:CreateStudioSessionMapping",
                "elasticmapreduce:DeleteEditor",
                "elasticmapreduce:DeleteRepository",
                "elasticmapreduce:DeleteSecurityConfiguration",
                "elasticmapreduce:DeleteStudio",
                "elasticmapreduce:DeleteStudioSessionMapping",
                "elasticmapreduce:DescribeCluster",
                "elasticmapreduce:DescribeEditor",
                "elasticmapreduce:DescribeJobFlows",
                "elasticmapreduce:DescribeNotebookExecution",
                "elasticmapreduce:DescribeRepository",
                "elasticmapreduce:DescribeSecurityConfiguration",
                "elasticmapreduce:DescribeStep",
                "elasticmapreduce:DescribeStudio",
                "elasticmapreduce:GetBlockPublicAccessConfiguration",
                "elasticmapreduce:GetManagedScalingPolicy",
                "elasticmapreduce:GetStudioSessionMapping",
                "elasticmapreduce:LinkRepository",
                "elasticmapreduce:ListBootstrapActions",
                "elasticmapreduce:ListClusters",
                "elasticmapreduce:ListEditors",
                "elasticmapreduce:ListInstanceFleets",
                "elasticmapreduce:ListInstanceGroups",
                "elasticmapreduce:ListInstances",
                "elasticmapreduce:ListNotebookExecutions",
                "elasticmapreduce:ListRepositories",
                "elasticmapreduce:ListSecurityConfigurations",
                "elasticmapreduce:ListSteps",
                "elasticmapreduce:ListStudioSessionMappings",
                "elasticmapreduce:ListStudios",
                "elasticmapreduce:ModifyCluster",
                "elasticmapreduce:ModifyInstanceFleet",
                "elasticmapreduce:ModifyInstanceGroups",
                "elasticmapreduce:OpenEditorInConsole",
                "elasticmapreduce:PutAutoScalingPolicy",
                "elasticmapreduce:PutBlockPublicAccessConfiguration",
                "elasticmapreduce:PutManagedScalingPolicy",
                "elasticmapreduce:RemoveAutoScalingPolicy",
                "elasticmapreduce:RemoveManagedScalingPolicy",
                "elasticmapreduce:RemoveTags",
                "elasticmapreduce:RunJobFlow",
                "elasticmapreduce:SetTerminationProtection",
                "elasticmapreduce:StartEditor",
                "elasticmapreduce:StartNotebookExecution",
                "elasticmapreduce:StopEditor",
                "elasticmapreduce:StopNotebookExecution",
                "elasticmapreduce:TerminateJobFlows",
                "elasticmapreduce:UnlinkRepository",
                "elasticmapreduce:UpdateRepository",
                "elasticmapreduce:UpdateStudio",
                "elasticmapreduce:UpdateStudioSessionMapping",
                "elasticmapreduce:ViewEventsFromAllClustersInConsole"
            ],
            "Resource": [
                "arn:aws:elasticmapreduce:<region>:<account>:<resourceType>/<resourceId>"
            ],
            "Condition": {
                "SomeCondition-FEIDJ": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-zMVXo": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-qsepW": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-IHKqR": {
                    "elasticmapreduce:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-kHsAr": {
                    "elasticmapreduce:ResourceTag/${TagKey}": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Route53 Recovery Cluster",
            "Effect": "Allow",
            "Action": [
                "route53-recovery-cluster:GetRoutingControlState",
                "route53-recovery-cluster:UpdateRoutingControlState",
                "route53-recovery-cluster:UpdateRoutingControlStates"
            ],
            "Resource": [
                "arn:${Partition}:route53-recovery-control::${AccountId}:${ResourceType}/${ResourceName}"
            ]
        },
        {
            "Sid": "AWS Batch",
            "Effect": "Allow",
            "Action": [
                "batch:CancelJob",
                "batch:CreateComputeEnvironment",
                "batch:CreateJobQueue",
                "batch:DeleteComputeEnvironment",
                "batch:DeleteJobQueue",
                "batch:DeregisterJobDefinition",
                "batch:DescribeComputeEnvironments",
                "batch:DescribeJobDefinitions",
                "batch:DescribeJobQueues",
                "batch:DescribeJobs",
                "batch:ListJobs",
                "batch:ListTagsForResource",
                "batch:RegisterJobDefinition",
                "batch:SubmitJob",
                "batch:TagResource",
                "batch:TerminateJob",
                "batch:UntagResource",
                "batch:UpdateComputeEnvironment",
                "batch:UpdateJobQueue"
            ],
            "Resource": [
                "arn:aws:batch:<region>:<account_ID>:<resource_type>/<relative_ID>"
            ],
            "Condition": {
                "SomeCondition-gIzcR": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-ilZjR": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-sxDqG": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-pxmvF": {
                    "batch:AWSLogsCreateGroup": "...some value..."
                },
                "SomeCondition-JcsfE": {
                    "batch:AWSLogsGroup": "...some value..."
                },
                "SomeCondition-EkWlI": {
                    "batch:AWSLogsRegion": "...some value..."
                },
                "SomeCondition-GQqlK": {
                    "batch:AWSLogsStreamPrefix": "...some value..."
                },
                "SomeCondition-XzHWd": {
                    "batch:Image": "...some value..."
                },
                "SomeCondition-rPTqf": {
                    "batch:LogDriver": "...some value..."
                },
                "SomeCondition-UOASM": {
                    "batch:Privileged": "...some value..."
                },
                "SomeCondition-yKcao": {
                    "batch:User": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS IoT Events",
            "Effect": "Allow",
            "Action": [
                "iotevents:BatchAcknowledgeAlarm",
                "iotevents:BatchDisableAlarm",
                "iotevents:BatchEnableAlarm",
                "iotevents:BatchPutMessage",
                "iotevents:BatchResetAlarm",
                "iotevents:BatchSnoozeAlarm",
                "iotevents:BatchUpdateDetector",
                "iotevents:CreateAlarmModel",
                "iotevents:CreateDetectorModel",
                "iotevents:CreateInput",
                "iotevents:DeleteAlarmModel",
                "iotevents:DeleteDetectorModel",
                "iotevents:DeleteInput",
                "iotevents:DescribeAlarm",
                "iotevents:DescribeAlarmModel",
                "iotevents:DescribeDetector",
                "iotevents:DescribeDetectorModel",
                "iotevents:DescribeInput",
                "iotevents:DescribeLoggingOptions",
                "iotevents:ListAlarmModelVersions",
                "iotevents:ListAlarmModels",
                "iotevents:ListAlarms",
                "iotevents:ListDetectorModelVersions",
                "iotevents:ListDetectorModels",
                "iotevents:ListDetectors",
                "iotevents:ListInputRoutings",
                "iotevents:ListInputs",
                "iotevents:ListTagsForResource",
                "iotevents:PutLoggingOptions",
                "iotevents:TagResource",
                "iotevents:UntagResource",
                "iotevents:UpdateAlarmModel",
                "iotevents:UpdateDetectorModel",
                "iotevents:UpdateInput",
                "iotevents:UpdateInputRouting"
            ],
            "Resource": [
                "arn:${Partition}:iotevents:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-DvgMw": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-UcjQl": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-xmzeU": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-zmCdS": {
                    "iotevents:keyValue": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS CloudTrail",
            "Effect": "Allow",
            "Action": [
                "cloudtrail:AddTags",
                "cloudtrail:CreateTrail",
                "cloudtrail:DeleteTrail",
                "cloudtrail:DescribeTrails",
                "cloudtrail:GetEventSelectors",
                "cloudtrail:GetInsightSelectors",
                "cloudtrail:GetTrail",
                "cloudtrail:GetTrailStatus",
                "cloudtrail:ListPublicKeys",
                "cloudtrail:ListTags",
                "cloudtrail:ListTrails",
                "cloudtrail:LookupEvents",
                "cloudtrail:PutEventSelectors",
                "cloudtrail:PutInsightSelectors",
                "cloudtrail:RemoveTags",
                "cloudtrail:StartLogging",
                "cloudtrail:StopLogging",
                "cloudtrail:UpdateTrail"
            ],
            "Resource": [
                "arn:aws:cloudtrail:<region>:<account>:<resource>"
            ]
        },
        {
            "Sid": "Amazon DynamoDB",
            "Effect": "Allow",
            "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:ConditionCheckItem",
                "dynamodb:CreateBackup",
                "dynamodb:CreateGlobalTable",
                "dynamodb:CreateTable",
                "dynamodb:CreateTableReplica",
                "dynamodb:DeleteBackup",
                "dynamodb:DeleteItem",
                "dynamodb:DeleteTable",
                "dynamodb:DeleteTableReplica",
                "dynamodb:DescribeBackup",
                "dynamodb:DescribeContinuousBackups",
                "dynamodb:DescribeContributorInsights",
                "dynamodb:DescribeExport",
                "dynamodb:DescribeGlobalTable",
                "dynamodb:DescribeGlobalTableSettings",
                "dynamodb:DescribeKinesisStreamingDestination",
                "dynamodb:DescribeLimits",
                "dynamodb:DescribeReservedCapacity",
                "dynamodb:DescribeReservedCapacityOfferings",
                "dynamodb:DescribeStream",
                "dynamodb:DescribeTable",
                "dynamodb:DescribeTableReplicaAutoScaling",
                "dynamodb:DescribeTimeToLive",
                "dynamodb:DisableKinesisStreamingDestination",
                "dynamodb:EnableKinesisStreamingDestination",
                "dynamodb:ExportTableToPointInTime",
                "dynamodb:GetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:ListBackups",
                "dynamodb:ListContributorInsights",
                "dynamodb:ListExports",
                "dynamodb:ListGlobalTables",
                "dynamodb:ListStreams",
                "dynamodb:ListTables",
                "dynamodb:ListTagsOfResource",
                "dynamodb:PartiQLDelete",
                "dynamodb:PartiQLInsert",
                "dynamodb:PartiQLSelect",
                "dynamodb:PartiQLUpdate",
                "dynamodb:PurchaseReservedCapacityOfferings",
                "dynamodb:PutItem",
                "dynamodb:Query",
                "dynamodb:RestoreTableFromBackup",
                "dynamodb:RestoreTableToPointInTime",
                "dynamodb:Scan",
                "dynamodb:TagResource",
                "dynamodb:UntagResource",
                "dynamodb:UpdateContinuousBackups",
                "dynamodb:UpdateContributorInsights",
                "dynamodb:UpdateGlobalTable",
                "dynamodb:UpdateGlobalTableSettings",
                "dynamodb:UpdateItem",
                "dynamodb:UpdateTable",
                "dynamodb:UpdateTableReplicaAutoScaling",
                "dynamodb:UpdateTimeToLive"
            ],
            "Resource": [
                "arn:aws:dynamodb:<region>:<accountID>:<resourceType>/<resourcePath>"
            ],
            "Condition": {
                "SomeCondition-YjWTs": {
                    "dynamodb:Attributes": "...some value..."
                },
                "SomeCondition-hGXnK": {
                    "dynamodb:EnclosingOperation": "...some value..."
                },
                "SomeCondition-JeXzx": {
                    "dynamodb:FullTableScan": "...some value..."
                },
                "SomeCondition-cnQka": {
                    "dynamodb:LeadingKeys": "...some value..."
                },
                "SomeCondition-ocmOd": {
                    "dynamodb:ReturnConsumedCapacity": "...some value..."
                },
                "SomeCondition-oiWdf": {
                    "dynamodb:ReturnValues": "...some value..."
                },
                "SomeCondition-UHdEs": {
                    "dynamodb:Select": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Elasticsearch Service",
            "Effect": "Allow",
            "Action": [
                "es:AcceptInboundConnection",
                "es:AcceptInboundCrossClusterSearchConnection",
                "es:AddTags",
                "es:AssociatePackage",
                "es:CancelElasticsearchServiceSoftwareUpdate",
                "es:CreateDataPrepperPipeline",
                "es:CreateDomain",
                "es:CreateElasticsearchDomain",
                "es:CreateElasticsearchServiceRole",
                "es:CreateOutboundConnection",
                "es:CreateOutboundCrossClusterSearchConnection",
                "es:CreatePackage",
                "es:CreateServiceRole",
                "es:DeleteDataPrepperPipeline",
                "es:DeleteDomain",
                "es:DeleteElasticsearchDomain",
                "es:DeleteElasticsearchServiceRole",
                "es:DeleteInboundConnection",
                "es:DeleteInboundCrossClusterSearchConnection",
                "es:DeleteOutboundConnection",
                "es:DeleteOutboundCrossClusterSearchConnection",
                "es:DeletePackage",
                "es:DescribeDataPrepperPipeline",
                "es:DescribeDomain",
                "es:DescribeDomainConfig",
                "es:DescribeDomains",
                "es:DescribeElasticsearchDomain",
                "es:DescribeElasticsearchDomainConfig",
                "es:DescribeElasticsearchDomains",
                "es:DescribeElasticsearchInstanceTypeLimits",
                "es:DescribeInboundConnections",
                "es:DescribeInboundCrossClusterSearchConnections",
                "es:DescribeInstanceTypeLimits",
                "es:DescribeOutboundConnections",
                "es:DescribeOutboundCrossClusterSearchConnections",
                "es:DescribePackages",
                "es:DescribeReservedElasticsearchInstanceOfferings",
                "es:DescribeReservedElasticsearchInstances",
                "es:DescribeReservedInstanceOfferings",
                "es:DescribeReservedInstances",
                "es:DissociatePackage",
                "es:ESCrossClusterGet",
                "es:ESHttpDelete",
                "es:ESHttpGet",
                "es:ESHttpHead",
                "es:ESHttpPatch",
                "es:ESHttpPost",
                "es:ESHttpPut",
                "es:GetCompatibleElasticsearchVersions",
                "es:GetCompatibleVersions",
                "es:GetPackageVersionHistory",
                "es:GetUpgradeHistory",
                "es:GetUpgradeStatus",
                "es:IngestDataPrepperPipeline",
                "es:ListDataPrepperPipelines",
                "es:ListDomainNames",
                "es:ListDomainsForPackage",
                "es:ListElasticsearchInstanceTypeDetails",
                "es:ListElasticsearchInstanceTypes",
                "es:ListElasticsearchVersions",
                "es:ListInstanceTypeDetails",
                "es:ListInstanceTypes",
                "es:ListPackagesForDomain",
                "es:ListTags",
                "es:ListVersions",
                "es:PurchaseReservedElasticsearchInstanceOffering",
                "es:PurchaseReservedInstanceOffering",
                "es:RejectInboundConnection",
                "es:RejectInboundCrossClusterSearchConnection",
                "es:RemoveTags",
                "es:StartElasticsearchServiceSoftwareUpdate",
                "es:UpdateDataPrepperPipeline",
                "es:UpdateDomainConfig",
                "es:UpdateElasticsearchDomainConfig",
                "es:UpdatePackage",
                "es:UpgradeElasticsearchDomain"
            ],
            "Resource": [
                "arn:aws:es:<region>:<account_ID>:<resource>"
            ],
            "Condition": {
                "SomeCondition-KpsIt": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-jtRJW": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-cHpZA": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS DeepRacer",
            "Effect": "Allow",
            "Action": [
                "deepracer:AddLeaderboardAccessPermission",
                "deepracer:AdminGetAccountConfig",
                "deepracer:AdminListAssociatedResources",
                "deepracer:AdminListAssociatedUsers",
                "deepracer:AdminManageUser",
                "deepracer:AdminSetAccountConfig",
                "deepracer:CloneReinforcementLearningModel",
                "deepracer:CreateCar",
                "deepracer:CreateLeaderboard",
                "deepracer:CreateLeaderboardAccessToken",
                "deepracer:CreateLeaderboardSubmission",
                "deepracer:CreateReinforcementLearningModel",
                "deepracer:DeleteLeaderboard",
                "deepracer:DeleteModel",
                "deepracer:EditLeaderboard",
                "deepracer:GetAccountConfig",
                "deepracer:GetAlias",
                "deepracer:GetAssetUrl",
                "deepracer:GetCar",
                "deepracer:GetCars",
                "deepracer:GetEvaluation",
                "deepracer:GetLatestUserSubmission",
                "deepracer:GetLeaderboard",
                "deepracer:GetModel",
                "deepracer:GetPrivateLeaderboard",
                "deepracer:GetRankedUserSubmission",
                "deepracer:GetTrack",
                "deepracer:GetTrainingJob",
                "deepracer:ImportModel",
                "deepracer:ListEvaluations",
                "deepracer:ListLeaderboardSubmissions",
                "deepracer:ListLeaderboards",
                "deepracer:ListModels",
                "deepracer:ListPrivateLeaderboardParticipants",
                "deepracer:ListPrivateLeaderboards",
                "deepracer:ListSubscribedPrivateLeaderboards",
                "deepracer:ListTagsForResource",
                "deepracer:ListTracks",
                "deepracer:ListTrainingJobs",
                "deepracer:MigrateModels",
                "deepracer:PerformLeaderboardOperation",
                "deepracer:RemoveLeaderboardAccessPermission",
                "deepracer:SetAlias",
                "deepracer:StartEvaluation",
                "deepracer:StopEvaluation",
                "deepracer:StopTrainingReinforcementLearningModel",
                "deepracer:TagResource",
                "deepracer:TestRewardFunction",
                "deepracer:UntagResource",
                "deepracer:UpdateCar"
            ],
            "Resource": [
                "arn:aws:deepracer:${Region}:${Account}:${ResourceType}/${ResourceName}"
            ],
            "Condition": {
                "SomeCondition-JHXWD": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-EHwos": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-yjBwq": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-aAQne": {
                    "deepracer:MultiUser": "...some value..."
                },
                "SomeCondition-QRtmH": {
                    "deepracer:UserToken": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon EMR on EKS (EMR Containers)",
            "Effect": "Allow",
            "Action": [
                "emr-containers:CancelJobRun",
                "emr-containers:CreateManagedEndpoint",
                "emr-containers:CreateVirtualCluster",
                "emr-containers:DeleteManagedEndpoint",
                "emr-containers:DeleteVirtualCluster",
                "emr-containers:DescribeJobRun",
                "emr-containers:DescribeManagedEndpoint",
                "emr-containers:DescribeVirtualCluster",
                "emr-containers:ListJobRuns",
                "emr-containers:ListManagedEndpoints",
                "emr-containers:ListTagsForResource",
                "emr-containers:ListVirtualClusters",
                "emr-containers:StartJobRun",
                "emr-containers:TagResource",
                "emr-containers:UntagResource"
            ],
            "Resource": [
                "arn:${Partition}:emr-containers:${region}:${account}:/${resourceType}/${resourcePath}"
            ],
            "Condition": {
                "SomeCondition-Dpuva": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-abedV": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-zLRlH": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-sYVNx": {
                    "emr-containers:ExecutionRoleArn": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Budget Service",
            "Effect": "Allow",
            "Action": [
                "budgets:CreateBudgetAction",
                "budgets:DeleteBudgetAction",
                "budgets:DescribeBudgetAction",
                "budgets:DescribeBudgetActionHistories",
                "budgets:DescribeBudgetActionsForAccount",
                "budgets:DescribeBudgetActionsForBudget",
                "budgets:ExecuteBudgetAction",
                "budgets:ModifyBudget",
                "budgets:UpdateBudgetAction",
                "budgets:ViewBudget"
            ],
            "Resource": [
                "arn:aws:budgets::<account_ID>:budget/<budgetname>"
            ]
        },
        {
            "Sid": "Amazon EventBridge Schemas",
            "Effect": "Allow",
            "Action": [
                "schemas:CreateDiscoverer",
                "schemas:CreateRegistry",
                "schemas:CreateSchema",
                "schemas:DeleteDiscoverer",
                "schemas:DeleteRegistry",
                "schemas:DeleteResourcePolicy",
                "schemas:DeleteSchema",
                "schemas:DeleteSchemaVersion",
                "schemas:DescribeCodeBinding",
                "schemas:DescribeDiscoverer",
                "schemas:DescribeRegistry",
                "schemas:DescribeSchema",
                "schemas:ExportSchema",
                "schemas:GetCodeBindingSource",
                "schemas:GetDiscoveredSchema",
                "schemas:GetResourcePolicy",
                "schemas:ListDiscoverers",
                "schemas:ListRegistries",
                "schemas:ListSchemaVersions",
                "schemas:ListSchemas",
                "schemas:ListTagsForResource",
                "schemas:PutCodeBinding",
                "schemas:PutResourcePolicy",
                "schemas:SearchSchemas",
                "schemas:StartDiscoverer",
                "schemas:StopDiscoverer",
                "schemas:TagResource",
                "schemas:UntagResource",
                "schemas:UpdateDiscoverer",
                "schemas:UpdateRegistry",
                "schemas:UpdateSchema"
            ],
            "Resource": [
                "arn:aws:schemas:<region>:<account>:<resourceType>/<resourceName>"
            ],
            "Condition": {
                "SomeCondition-eXgci": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-TnpxH": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-QiDKx": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Network Manager",
            "Effect": "Allow",
            "Action": [
                "networkmanager:AssociateCustomerGateway",
                "networkmanager:AssociateLink",
                "networkmanager:AssociateTransitGatewayConnectPeer",
                "networkmanager:CreateConnection",
                "networkmanager:CreateDevice",
                "networkmanager:CreateGlobalNetwork",
                "networkmanager:CreateLink",
                "networkmanager:CreateSite",
                "networkmanager:DeleteConnection",
                "networkmanager:DeleteDevice",
                "networkmanager:DeleteGlobalNetwork",
                "networkmanager:DeleteLink",
                "networkmanager:DeleteSite",
                "networkmanager:DeregisterTransitGateway",
                "networkmanager:DescribeGlobalNetworks",
                "networkmanager:DisassociateCustomerGateway",
                "networkmanager:DisassociateLink",
                "networkmanager:DisassociateTransitGatewayConnectPeer",
                "networkmanager:GetConnections",
                "networkmanager:GetCustomerGatewayAssociations",
                "networkmanager:GetDevices",
                "networkmanager:GetLinkAssociations",
                "networkmanager:GetLinks",
                "networkmanager:GetSites",
                "networkmanager:GetTransitGatewayConnectPeerAssociations",
                "networkmanager:GetTransitGatewayRegistrations",
                "networkmanager:ListTagsForResource",
                "networkmanager:RegisterTransitGateway",
                "networkmanager:TagResource",
                "networkmanager:UntagResource",
                "networkmanager:UpdateConnection",
                "networkmanager:UpdateDevice",
                "networkmanager:UpdateGlobalNetwork",
                "networkmanager:UpdateLink",
                "networkmanager:UpdateSite"
            ],
            "Resource": [
                "arn:aws:networkmanager::<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-etriC": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-SZujv": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-PCcVO": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-YDJQB": {
                    "networkmanager:cgwArn": "...some value..."
                },
                "SomeCondition-HePDn": {
                    "networkmanager:tgwArn": "...some value..."
                },
                "SomeCondition-xiYbE": {
                    "networkmanager:tgwConnectPeerArn": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Support",
            "Effect": "Allow",
            "Action": [
                "support:AddAttachmentsToSet",
                "support:AddCommunicationToCase",
                "support:CreateCase",
                "support:DescribeAttachment",
                "support:DescribeCaseAttributes",
                "support:DescribeCases",
                "support:DescribeCommunications",
                "support:DescribeIssueTypes",
                "support:DescribeServices",
                "support:DescribeSeverityLevels",
                "support:DescribeSupportLevel",
                "support:DescribeTrustedAdvisorCheckRefreshStatuses",
                "support:DescribeTrustedAdvisorCheckResult",
                "support:DescribeTrustedAdvisorCheckSummaries",
                "support:DescribeTrustedAdvisorChecks",
                "support:InitiateCallForCase",
                "support:InitiateChatForCase",
                "support:PutCaseAttributes",
                "support:RateCaseCommunication",
                "support:RefreshTrustedAdvisorCheck",
                "support:ResolveCase",
                "support:SearchForCases"
            ]
        },
        {
            "Sid": "Amazon Cognito Identity",
            "Effect": "Allow",
            "Action": [
                "cognito-identity:CreateIdentityPool",
                "cognito-identity:DeleteIdentities",
                "cognito-identity:DeleteIdentityPool",
                "cognito-identity:DescribeIdentity",
                "cognito-identity:DescribeIdentityPool",
                "cognito-identity:GetCredentialsForIdentity",
                "cognito-identity:GetId",
                "cognito-identity:GetIdentityPoolRoles",
                "cognito-identity:GetOpenIdToken",
                "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
                "cognito-identity:GetPrincipalTagAttributeMap",
                "cognito-identity:ListIdentities",
                "cognito-identity:ListIdentityPools",
                "cognito-identity:ListTagsForResource",
                "cognito-identity:LookupDeveloperIdentity",
                "cognito-identity:MergeDeveloperIdentities",
                "cognito-identity:SetIdentityPoolRoles",
                "cognito-identity:SetPrincipalTagAttributeMap",
                "cognito-identity:TagResource",
                "cognito-identity:UnlinkDeveloperIdentity",
                "cognito-identity:UnlinkIdentity",
                "cognito-identity:UntagResource",
                "cognito-identity:UpdateIdentityPool"
            ],
            "Resource": [
                "arn:aws:cognito-identity:<region>:<account>:<resourceType>/<resourcePath>"
            ],
            "Condition": {
                "SomeCondition-WxwTA": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-nrJSc": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-Bjvoa": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Polly",
            "Effect": "Allow",
            "Action": [
                "polly:DeleteLexicon",
                "polly:DescribeVoices",
                "polly:GetLexicon",
                "polly:GetSpeechSynthesisTask",
                "polly:ListLexicons",
                "polly:ListSpeechSynthesisTasks",
                "polly:PutLexicon",
                "polly:StartSpeechSynthesisTask",
                "polly:SynthesizeSpeech"
            ],
            "Resource": [
                "arn:aws:polly:<region>:<accountID>:lexicon/<relative-id>"
            ]
        },
        {
            "Sid": "AWS AppConfig",
            "Effect": "Allow",
            "Action": [
                "appconfig:CreateApplication",
                "appconfig:CreateConfigurationProfile",
                "appconfig:CreateDeploymentStrategy",
                "appconfig:CreateEnvironment",
                "appconfig:CreateHostedConfigurationVersion",
                "appconfig:DeleteApplication",
                "appconfig:DeleteConfigurationProfile",
                "appconfig:DeleteDeploymentStrategy",
                "appconfig:DeleteEnvironment",
                "appconfig:DeleteHostedConfigurationVersion",
                "appconfig:GetApplication",
                "appconfig:GetConfiguration",
                "appconfig:GetConfigurationProfile",
                "appconfig:GetDeployment",
                "appconfig:GetDeploymentStrategy",
                "appconfig:GetEnvironment",
                "appconfig:GetHostedConfigurationVersion",
                "appconfig:ListApplications",
                "appconfig:ListConfigurationProfiles",
                "appconfig:ListDeploymentStrategies",
                "appconfig:ListDeployments",
                "appconfig:ListEnvironments",
                "appconfig:ListHostedConfigurationVersions",
                "appconfig:ListTagsForResource",
                "appconfig:StartDeployment",
                "appconfig:StopDeployment",
                "appconfig:TagResource",
                "appconfig:UntagResource",
                "appconfig:UpdateApplication",
                "appconfig:UpdateConfigurationProfile",
                "appconfig:UpdateDeploymentStrategy",
                "appconfig:UpdateEnvironment",
                "appconfig:ValidateConfiguration"
            ],
            "Resource": [
                "arn:aws:appconfig:<region>:<account-id>:<relative-id>"
            ],
            "Condition": {
                "SomeCondition-OfYhT": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-berli": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-qNpHR": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS App Runner",
            "Effect": "Allow",
            "Action": [
                "apprunner:AssociateCustomDomain",
                "apprunner:CreateAutoScalingConfiguration",
                "apprunner:CreateConnection",
                "apprunner:CreateService",
                "apprunner:DeleteAutoScalingConfiguration",
                "apprunner:DeleteConnection",
                "apprunner:DeleteService",
                "apprunner:DescribeAutoScalingConfiguration",
                "apprunner:DescribeCustomDomains",
                "apprunner:DescribeOperation",
                "apprunner:DescribeService",
                "apprunner:DisassociateCustomDomain",
                "apprunner:ListAutoScalingConfigurations",
                "apprunner:ListConnections",
                "apprunner:ListOperations",
                "apprunner:ListServices",
                "apprunner:ListTagsForResource",
                "apprunner:PauseService",
                "apprunner:ResumeService",
                "apprunner:StartDeployment",
                "apprunner:TagResource",
                "apprunner:UntagResource",
                "apprunner:UpdateService"
            ],
            "Resource": [
                "arn:aws:apprunner:<region>:<account_ID>:<resource_type>/<path_to_resource>"
            ],
            "Condition": {
                "SomeCondition-ZtsAI": {
                    "apprunner:AutoScalingConfigurationArn": "...some value..."
                },
                "SomeCondition-tyEzw": {
                    "apprunner:ConnectionArn": "...some value..."
                },
                "SomeCondition-PAkon": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-RbkuO": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-efyUD": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS License Manager",
            "Effect": "Allow",
            "Action": [
                "license-manager:AcceptGrant",
                "license-manager:CheckInLicense",
                "license-manager:CheckoutBorrowLicense",
                "license-manager:CheckoutLicense",
                "license-manager:CreateGrant",
                "license-manager:CreateGrantVersion",
                "license-manager:CreateLicense",
                "license-manager:CreateLicenseConfiguration",
                "license-manager:CreateLicenseManagerReportGenerator",
                "license-manager:CreateLicenseVersion",
                "license-manager:CreateToken",
                "license-manager:DeleteGrant",
                "license-manager:DeleteLicense",
                "license-manager:DeleteLicenseConfiguration",
                "license-manager:DeleteLicenseManagerReportGenerator",
                "license-manager:DeleteToken",
                "license-manager:ExtendLicenseConsumption",
                "license-manager:GetAccessToken",
                "license-manager:GetGrant",
                "license-manager:GetLicense",
                "license-manager:GetLicenseConfiguration",
                "license-manager:GetLicenseManagerReportGenerator",
                "license-manager:GetLicenseUsage",
                "license-manager:GetServiceSettings",
                "license-manager:ListAssociationsForLicenseConfiguration",
                "license-manager:ListDistributedGrants",
                "license-manager:ListFailuresForLicenseConfigurationOperations",
                "license-manager:ListLicenseConfigurations",
                "license-manager:ListLicenseManagerReportGenerators",
                "license-manager:ListLicenseSpecificationsForResource",
                "license-manager:ListLicenseVersions",
                "license-manager:ListLicenses",
                "license-manager:ListReceivedGrants",
                "license-manager:ListReceivedLicenses",
                "license-manager:ListResourceInventory",
                "license-manager:ListTagsForResource",
                "license-manager:ListTokens",
                "license-manager:ListUsageForLicenseConfiguration",
                "license-manager:RejectGrant",
                "license-manager:TagResource",
                "license-manager:UntagResource",
                "license-manager:UpdateLicenseConfiguration",
                "license-manager:UpdateLicenseManagerReportGenerator",
                "license-manager:UpdateLicenseSpecificationsForResource",
                "license-manager:UpdateServiceSettings"
            ],
            "Resource": [
                "arn:aws:license-manager:${Region}:${Account}:${ResourceType}:${ResourceId}"
            ],
            "Condition": {
                "SomeCondition-xcsBy": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-gOrzG": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-IWZes": {
                    "license-manager:ResourceTag/${TagKey}": "...some value..."
                }
            }
        },
        {
            "Sid": "Alexa for Business",
            "Effect": "Allow",
            "Action": [
                "a4b:ApproveSkill",
                "a4b:AssociateContactWithAddressBook",
                "a4b:AssociateDeviceWithNetworkProfile",
                "a4b:AssociateDeviceWithRoom",
                "a4b:AssociateSkillGroupWithRoom",
                "a4b:AssociateSkillWithSkillGroup",
                "a4b:AssociateSkillWithUsers",
                "a4b:CompleteRegistration",
                "a4b:CreateAddressBook",
                "a4b:CreateBusinessReportSchedule",
                "a4b:CreateConferenceProvider",
                "a4b:CreateContact",
                "a4b:CreateGatewayGroup",
                "a4b:CreateNetworkProfile",
                "a4b:CreateProfile",
                "a4b:CreateRoom",
                "a4b:CreateSkillGroup",
                "a4b:CreateUser",
                "a4b:DeleteAddressBook",
                "a4b:DeleteBusinessReportSchedule",
                "a4b:DeleteConferenceProvider",
                "a4b:DeleteContact",
                "a4b:DeleteDevice",
                "a4b:DeleteDeviceUsageData",
                "a4b:DeleteGatewayGroup",
                "a4b:DeleteNetworkProfile",
                "a4b:DeleteProfile",
                "a4b:DeleteRoom",
                "a4b:DeleteRoomSkillParameter",
                "a4b:DeleteSkillAuthorization",
                "a4b:DeleteSkillGroup",
                "a4b:DeleteUser",
                "a4b:DisassociateContactFromAddressBook",
                "a4b:DisassociateDeviceFromRoom",
                "a4b:DisassociateSkillFromSkillGroup",
                "a4b:DisassociateSkillFromUsers",
                "a4b:DisassociateSkillGroupFromRoom",
                "a4b:ForgetSmartHomeAppliances",
                "a4b:GetAddressBook",
                "a4b:GetConferencePreference",
                "a4b:GetConferenceProvider",
                "a4b:GetContact",
                "a4b:GetDevice",
                "a4b:GetGateway",
                "a4b:GetGatewayGroup",
                "a4b:GetInvitationConfiguration",
                "a4b:GetNetworkProfile",
                "a4b:GetProfile",
                "a4b:GetRoom",
                "a4b:GetRoomSkillParameter",
                "a4b:GetSkillGroup",
                "a4b:ListBusinessReportSchedules",
                "a4b:ListConferenceProviders",
                "a4b:ListDeviceEvents",
                "a4b:ListGatewayGroups",
                "a4b:ListGateways",
                "a4b:ListSkills",
                "a4b:ListSkillsStoreCategories",
                "a4b:ListSkillsStoreSkillsByCategory",
                "a4b:ListSmartHomeAppliances",
                "a4b:ListTags",
                "a4b:PutConferencePreference",
                "a4b:PutDeviceSetupEvents",
                "a4b:PutInvitationConfiguration",
                "a4b:PutRoomSkillParameter",
                "a4b:PutSkillAuthorization",
                "a4b:RegisterAVSDevice",
                "a4b:RegisterDevice",
                "a4b:RejectSkill",
                "a4b:ResolveRoom",
                "a4b:RevokeInvitation",
                "a4b:SearchAddressBooks",
                "a4b:SearchContacts",
                "a4b:SearchDevices",
                "a4b:SearchNetworkProfiles",
                "a4b:SearchProfiles",
                "a4b:SearchRooms",
                "a4b:SearchSkillGroups",
                "a4b:SearchUsers",
                "a4b:SendAnnouncement",
                "a4b:SendInvitation",
                "a4b:StartDeviceSync",
                "a4b:StartSmartHomeApplianceDiscovery",
                "a4b:TagResource",
                "a4b:UntagResource",
                "a4b:UpdateAddressBook",
                "a4b:UpdateBusinessReportSchedule",
                "a4b:UpdateConferenceProvider",
                "a4b:UpdateContact",
                "a4b:UpdateDevice",
                "a4b:UpdateGateway",
                "a4b:UpdateGatewayGroup",
                "a4b:UpdateNetworkProfile",
                "a4b:UpdateProfile",
                "a4b:UpdateRoom",
                "a4b:UpdateSkillGroup"
            ],
            "Resource": [
                "arn:aws:a4b:<region>:<account-id>:<resource-type>/<resource_id>"
            ],
            "Condition": {
                "SomeCondition-MQRCY": {
                    "a4b:amazonId": "...some value..."
                },
                "SomeCondition-VyuEY": {
                    "a4b:filters_deviceType": "...some value..."
                },
                "SomeCondition-cltqV": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-MLaCY": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-YZCrJ": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Certificate Manager Private Certificate Authority",
            "Effect": "Allow",
            "Action": [
                "acm-pca:CreateCertificateAuthority",
                "acm-pca:CreateCertificateAuthorityAuditReport",
                "acm-pca:CreatePermission",
                "acm-pca:DeleteCertificateAuthority",
                "acm-pca:DeletePermission",
                "acm-pca:DeletePolicy",
                "acm-pca:DescribeCertificateAuthority",
                "acm-pca:DescribeCertificateAuthorityAuditReport",
                "acm-pca:GetCertificate",
                "acm-pca:GetCertificateAuthorityCertificate",
                "acm-pca:GetCertificateAuthorityCsr",
                "acm-pca:GetPolicy",
                "acm-pca:ImportCertificateAuthorityCertificate",
                "acm-pca:IssueCertificate",
                "acm-pca:ListCertificateAuthorities",
                "acm-pca:ListPermissions",
                "acm-pca:ListTags",
                "acm-pca:PutPolicy",
                "acm-pca:RestoreCertificateAuthority",
                "acm-pca:RevokeCertificate",
                "acm-pca:TagCertificateAuthority",
                "acm-pca:UntagCertificateAuthority",
                "acm-pca:UpdateCertificateAuthority"
            ],
            "Resource": [
                "arn:aws:acm-pca:<region>:<account_ID>:<arn_type>/<resource_id>"
            ],
            "Condition": {
                "SomeCondition-SLQmM": {
                    "acm-pca:TemplateArn": "...some value..."
                },
                "SomeCondition-xAWyM": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-JRNHf": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-NknAg": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Step Functions",
            "Effect": "Allow",
            "Action": [
                "states:CreateActivity",
                "states:CreateStateMachine",
                "states:DeleteActivity",
                "states:DeleteStateMachine",
                "states:DescribeActivity",
                "states:DescribeExecution",
                "states:DescribeStateMachine",
                "states:DescribeStateMachineForExecution",
                "states:GetActivityTask",
                "states:GetExecutionHistory",
                "states:ListActivities",
                "states:ListExecutions",
                "states:ListStateMachines",
                "states:ListTagsForResource",
                "states:SendTaskFailure",
                "states:SendTaskHeartbeat",
                "states:SendTaskSuccess",
                "states:StartExecution",
                "states:StartSyncExecution",
                "states:StopExecution",
                "states:TagResource",
                "states:UntagResource",
                "states:UpdateStateMachine"
            ],
            "Resource": [
                "arn:aws:<serviceName>:<region>:<account>:<resourceType>:<resourceName>"
            ],
            "Condition": {
                "SomeCondition-euLOD": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-NbaqV": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-vLAeX": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Message Delivery Service",
            "Effect": "Allow",
            "Action": [
                "ec2messages:AcknowledgeMessage",
                "ec2messages:DeleteMessage",
                "ec2messages:FailMessage",
                "ec2messages:GetEndpoint",
                "ec2messages:GetMessages",
                "ec2messages:SendReply"
            ]
        },
        {
            "Sid": "AWS IoT Greengrass V2",
            "Effect": "Allow",
            "Action": [
                "greengrass:CancelDeployment",
                "greengrass:CreateComponentVersion",
                "greengrass:CreateDeployment",
                "greengrass:DeleteComponent",
                "greengrass:DeleteCoreDevice",
                "greengrass:DescribeComponent",
                "greengrass:GetComponent",
                "greengrass:GetComponentVersionArtifact",
                "greengrass:GetCoreDevice",
                "greengrass:GetDeployment",
                "greengrass:ListComponentVersions",
                "greengrass:ListComponents",
                "greengrass:ListCoreDevices",
                "greengrass:ListDeployments",
                "greengrass:ListEffectiveDeployments",
                "greengrass:ListInstalledComponents",
                "greengrass:ListTagsForResource",
                "greengrass:ResolveComponentCandidates",
                "greengrass:TagResource",
                "greengrass:UntagResource"
            ],
            "Resource": [
                "arn:${Partition}:greengrass:${Region}:${Account}:${ResourceType}:${ResourcePath}"
            ],
            "Condition": {
                "SomeCondition-wpFzS": {
                    "aws:CurrentTime": "...some value..."
                },
                "SomeCondition-jdRrI": {
                    "aws:EpochTime": "...some value..."
                },
                "SomeCondition-kpHGZ": {
                    "aws:MultiFactorAuthAge": "...some value..."
                },
                "SomeCondition-juiIl": {
                    "aws:MultiFactorAuthPresent": "...some value..."
                },
                "SomeCondition-IFWLd": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-myQcp": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-RAaJI": {
                    "aws:SecureTransport": "...some value..."
                },
                "SomeCondition-ZaCLP": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-kcNtE": {
                    "aws:UserAgent": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS IoT Greengrass",
            "Effect": "Allow",
            "Action": [
                "greengrass:AssociateRoleToGroup",
                "greengrass:AssociateServiceRoleToAccount",
                "greengrass:CreateConnectorDefinition",
                "greengrass:CreateConnectorDefinitionVersion",
                "greengrass:CreateCoreDefinition",
                "greengrass:CreateCoreDefinitionVersion",
                "greengrass:CreateDeployment",
                "greengrass:CreateDeviceDefinition",
                "greengrass:CreateDeviceDefinitionVersion",
                "greengrass:CreateFunctionDefinition",
                "greengrass:CreateFunctionDefinitionVersion",
                "greengrass:CreateGroup",
                "greengrass:CreateGroupCertificateAuthority",
                "greengrass:CreateGroupVersion",
                "greengrass:CreateLoggerDefinition",
                "greengrass:CreateLoggerDefinitionVersion",
                "greengrass:CreateResourceDefinition",
                "greengrass:CreateResourceDefinitionVersion",
                "greengrass:CreateSoftwareUpdateJob",
                "greengrass:CreateSubscriptionDefinition",
                "greengrass:CreateSubscriptionDefinitionVersion",
                "greengrass:DeleteConnectorDefinition",
                "greengrass:DeleteCoreDefinition",
                "greengrass:DeleteDeviceDefinition",
                "greengrass:DeleteFunctionDefinition",
                "greengrass:DeleteGroup",
                "greengrass:DeleteLoggerDefinition",
                "greengrass:DeleteResourceDefinition",
                "greengrass:DeleteSubscriptionDefinition",
                "greengrass:DisassociateRoleFromGroup",
                "greengrass:DisassociateServiceRoleFromAccount",
                "greengrass:Discover",
                "greengrass:GetAssociatedRole",
                "greengrass:GetBulkDeploymentStatus",
                "greengrass:GetConnectivityInfo",
                "greengrass:GetConnectorDefinition",
                "greengrass:GetConnectorDefinitionVersion",
                "greengrass:GetCoreDefinition",
                "greengrass:GetCoreDefinitionVersion",
                "greengrass:GetDeploymentStatus",
                "greengrass:GetDeviceDefinition",
                "greengrass:GetDeviceDefinitionVersion",
                "greengrass:GetFunctionDefinition",
                "greengrass:GetFunctionDefinitionVersion",
                "greengrass:GetGroup",
                "greengrass:GetGroupCertificateAuthority",
                "greengrass:GetGroupCertificateConfiguration",
                "greengrass:GetGroupVersion",
                "greengrass:GetLoggerDefinition",
                "greengrass:GetLoggerDefinitionVersion",
                "greengrass:GetResourceDefinition",
                "greengrass:GetResourceDefinitionVersion",
                "greengrass:GetServiceRoleForAccount",
                "greengrass:GetSubscriptionDefinition",
                "greengrass:GetSubscriptionDefinitionVersion",
                "greengrass:GetThingRuntimeConfiguration",
                "greengrass:ListBulkDeploymentDetailedReports",
                "greengrass:ListBulkDeployments",
                "greengrass:ListConnectorDefinitionVersions",
                "greengrass:ListConnectorDefinitions",
                "greengrass:ListCoreDefinitionVersions",
                "greengrass:ListCoreDefinitions",
                "greengrass:ListDeployments",
                "greengrass:ListDeviceDefinitionVersions",
                "greengrass:ListDeviceDefinitions",
                "greengrass:ListFunctionDefinitionVersions",
                "greengrass:ListFunctionDefinitions",
                "greengrass:ListGroupCertificateAuthorities",
                "greengrass:ListGroupVersions",
                "greengrass:ListGroups",
                "greengrass:ListLoggerDefinitionVersions",
                "greengrass:ListLoggerDefinitions",
                "greengrass:ListResourceDefinitionVersions",
                "greengrass:ListResourceDefinitions",
                "greengrass:ListSubscriptionDefinitionVersions",
                "greengrass:ListSubscriptionDefinitions",
                "greengrass:ListTagsForResource",
                "greengrass:ResetDeployments",
                "greengrass:StartBulkDeployment",
                "greengrass:StopBulkDeployment",
                "greengrass:TagResource",
                "greengrass:UntagResource",
                "greengrass:UpdateConnectivityInfo",
                "greengrass:UpdateConnectorDefinition",
                "greengrass:UpdateCoreDefinition",
                "greengrass:UpdateDeviceDefinition",
                "greengrass:UpdateFunctionDefinition",
                "greengrass:UpdateGroup",
                "greengrass:UpdateGroupCertificateConfiguration",
                "greengrass:UpdateLoggerDefinition",
                "greengrass:UpdateResourceDefinition",
                "greengrass:UpdateSubscriptionDefinition",
                "greengrass:UpdateThingRuntimeConfiguration"
            ],
            "Resource": [
                "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/${resourceType}/${resourcePath}"
            ],
            "Condition": {
                "SomeCondition-aCFEQ": {
                    "aws:CurrentTime": "...some value..."
                },
                "SomeCondition-OXcYi": {
                    "aws:EpochTime": "...some value..."
                },
                "SomeCondition-qpDlN": {
                    "aws:MultiFactorAuthAge": "...some value..."
                },
                "SomeCondition-wyhgs": {
                    "aws:MultiFactorAuthPresent": "...some value..."
                },
                "SomeCondition-JUhrD": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-sbiEv": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-VLEng": {
                    "aws:SecureTransport": "...some value..."
                },
                "SomeCondition-QhzkS": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-zoihN": {
                    "aws:UserAgent": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Redshift",
            "Effect": "Allow",
            "Action": [
                "redshift:AcceptReservedNodeExchange",
                "redshift:AssociateDataShareConsumer",
                "redshift:AuthorizeClusterSecurityGroupIngress",
                "redshift:AuthorizeDataShare",
                "redshift:AuthorizeSnapshotAccess",
                "redshift:BatchDeleteClusterSnapshots",
                "redshift:BatchModifyClusterSnapshots",
                "redshift:CancelQuery",
                "redshift:CancelQuerySession",
                "redshift:CancelResize",
                "redshift:CopyClusterSnapshot",
                "redshift:CreateCluster",
                "redshift:CreateClusterParameterGroup",
                "redshift:CreateClusterSecurityGroup",
                "redshift:CreateClusterSnapshot",
                "redshift:CreateClusterSubnetGroup",
                "redshift:CreateClusterUser",
                "redshift:CreateEventSubscription",
                "redshift:CreateHsmClientCertificate",
                "redshift:CreateHsmConfiguration",
                "redshift:CreateSavedQuery",
                "redshift:CreateScheduledAction",
                "redshift:CreateSnapshotCopyGrant",
                "redshift:CreateSnapshotSchedule",
                "redshift:CreateTags",
                "redshift:CreateUsageLimit",
                "redshift:DeauthorizeDataShare",
                "redshift:DeleteCluster",
                "redshift:DeleteClusterParameterGroup",
                "redshift:DeleteClusterSecurityGroup",
                "redshift:DeleteClusterSnapshot",
                "redshift:DeleteClusterSubnetGroup",
                "redshift:DeleteEventSubscription",
                "redshift:DeleteHsmClientCertificate",
                "redshift:DeleteHsmConfiguration",
                "redshift:DeleteSavedQueries",
                "redshift:DeleteScheduledAction",
                "redshift:DeleteSnapshotCopyGrant",
                "redshift:DeleteSnapshotSchedule",
                "redshift:DeleteTags",
                "redshift:DeleteUsageLimit",
                "redshift:DescribeAccountAttributes",
                "redshift:DescribeClusterDbRevisions",
                "redshift:DescribeClusterParameterGroups",
                "redshift:DescribeClusterParameters",
                "redshift:DescribeClusterSecurityGroups",
                "redshift:DescribeClusterSnapshots",
                "redshift:DescribeClusterSubnetGroups",
                "redshift:DescribeClusterTracks",
                "redshift:DescribeClusterVersions",
                "redshift:DescribeClusters",
                "redshift:DescribeDataShares",
                "redshift:DescribeDataSharesForConsumer",
                "redshift:DescribeDataSharesForProducer",
                "redshift:DescribeDefaultClusterParameters",
                "redshift:DescribeEventCategories",
                "redshift:DescribeEventSubscriptions",
                "redshift:DescribeEvents",
                "redshift:DescribeHsmClientCertificates",
                "redshift:DescribeHsmConfigurations",
                "redshift:DescribeLoggingStatus",
                "redshift:DescribeNodeConfigurationOptions",
                "redshift:DescribeOrderableClusterOptions",
                "redshift:DescribeQuery",
                "redshift:DescribeReservedNodeOfferings",
                "redshift:DescribeReservedNodes",
                "redshift:DescribeResize",
                "redshift:DescribeSavedQueries",
                "redshift:DescribeScheduledActions",
                "redshift:DescribeSnapshotCopyGrants",
                "redshift:DescribeSnapshotSchedules",
                "redshift:DescribeStorage",
                "redshift:DescribeTable",
                "redshift:DescribeTableRestoreStatus",
                "redshift:DescribeTags",
                "redshift:DescribeUsageLimits",
                "redshift:DisableLogging",
                "redshift:DisableSnapshotCopy",
                "redshift:DisassociateDataShareConsumer",
                "redshift:EnableLogging",
                "redshift:EnableSnapshotCopy",
                "redshift:ExecuteQuery",
                "redshift:FetchResults",
                "redshift:GetClusterCredentials",
                "redshift:GetReservedNodeExchangeOfferings",
                "redshift:JoinGroup",
                "redshift:ListDatabases",
                "redshift:ListSavedQueries",
                "redshift:ListSchemas",
                "redshift:ListTables",
                "redshift:ModifyAquaConfiguration",
                "redshift:ModifyCluster",
                "redshift:ModifyClusterDbRevision",
                "redshift:ModifyClusterIamRoles",
                "redshift:ModifyClusterMaintenance",
                "redshift:ModifyClusterParameterGroup",
                "redshift:ModifyClusterSnapshot",
                "redshift:ModifyClusterSnapshotSchedule",
                "redshift:ModifyClusterSubnetGroup",
                "redshift:ModifyEventSubscription",
                "redshift:ModifySavedQuery",
                "redshift:ModifyScheduledAction",
                "redshift:ModifySnapshotCopyRetentionPeriod",
                "redshift:ModifySnapshotSchedule",
                "redshift:ModifyUsageLimit",
                "redshift:PauseCluster",
                "redshift:PurchaseReservedNodeOffering",
                "redshift:RebootCluster",
                "redshift:RejectDataShare",
                "redshift:ResetClusterParameterGroup",
                "redshift:ResizeCluster",
                "redshift:RestoreFromClusterSnapshot",
                "redshift:RestoreTableFromClusterSnapshot",
                "redshift:ResumeCluster",
                "redshift:RevokeClusterSecurityGroupIngress",
                "redshift:RevokeSnapshotAccess",
                "redshift:RotateEncryptionKey",
                "redshift:ViewQueriesFromConsole",
                "redshift:ViewQueriesInConsole"
            ],
            "Resource": [
                "arn:aws:redshift:<region>:<accountID>:<relative-id>"
            ],
            "Condition": {
                "SomeCondition-URtpw": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-mcGuC": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-ByltY": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-biBYA": {
                    "redshift:ConsumerIdentifier": "...some value..."
                },
                "SomeCondition-GCSKP": {
                    "redshift:DbName": "...some value..."
                },
                "SomeCondition-xCarL": {
                    "redshift:DbUser": "...some value..."
                },
                "SomeCondition-BRagf": {
                    "redshift:DurationSeconds": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon WorkDocs",
            "Effect": "Allow",
            "Action": [
                "workdocs:AbortDocumentVersionUpload",
                "workdocs:ActivateUser",
                "workdocs:AddResourcePermissions",
                "workdocs:AddUserToGroup",
                "workdocs:CheckAlias",
                "workdocs:CreateComment",
                "workdocs:CreateCustomMetadata",
                "workdocs:CreateFolder",
                "workdocs:CreateInstance",
                "workdocs:CreateLabels",
                "workdocs:CreateNotificationSubscription",
                "workdocs:CreateUser",
                "workdocs:DeactivateUser",
                "workdocs:DeleteComment",
                "workdocs:DeleteCustomMetadata",
                "workdocs:DeleteDocument",
                "workdocs:DeleteFolder",
                "workdocs:DeleteFolderContents",
                "workdocs:DeleteInstance",
                "workdocs:DeleteLabels",
                "workdocs:DeleteNotificationSubscription",
                "workdocs:DeleteUser",
                "workdocs:DeregisterDirectory",
                "workdocs:DescribeActivities",
                "workdocs:DescribeAvailableDirectories",
                "workdocs:DescribeComments",
                "workdocs:DescribeDocumentVersions",
                "workdocs:DescribeFolderContents",
                "workdocs:DescribeGroups",
                "workdocs:DescribeInstances",
                "workdocs:DescribeNotificationSubscriptions",
                "workdocs:DescribeResourcePermissions",
                "workdocs:DescribeRootFolders",
                "workdocs:DescribeUsers",
                "workdocs:DownloadDocumentVersion",
                "workdocs:GetCurrentUser",
                "workdocs:GetDocument",
                "workdocs:GetDocumentPath",
                "workdocs:GetDocumentVersion",
                "workdocs:GetFolder",
                "workdocs:GetFolderPath",
                "workdocs:GetGroup",
                "workdocs:GetResources",
                "workdocs:InitiateDocumentVersionUpload",
                "workdocs:RegisterDirectory",
                "workdocs:RemoveAllResourcePermissions",
                "workdocs:RemoveResourcePermission",
                "workdocs:UpdateDocument",
                "workdocs:UpdateDocumentVersion",
                "workdocs:UpdateFolder",
                "workdocs:UpdateInstanceAlias",
                "workdocs:UpdateUser"
            ]
        },
        {
            "Sid": "AWS Marketplace Management Portal",
            "Effect": "Allow",
            "Action": [
                "aws-marketplace-management:uploadFiles",
                "aws-marketplace-management:viewMarketing",
                "aws-marketplace-management:viewReports",
                "aws-marketplace-management:viewSettings",
                "aws-marketplace-management:viewSupport"
            ]
        },
        {
            "Sid": "Amazon Comprehend Medical",
            "Effect": "Allow",
            "Action": [
                "comprehendmedical:DescribeEntitiesDetectionV2Job",
                "comprehendmedical:DescribeICD10CMInferenceJob",
                "comprehendmedical:DescribePHIDetectionJob",
                "comprehendmedical:DescribeRxNormInferenceJob",
                "comprehendmedical:DetectEntitiesV2",
                "comprehendmedical:DetectPHI",
                "comprehendmedical:InferICD10CM",
                "comprehendmedical:InferRxNorm",
                "comprehendmedical:ListEntitiesDetectionV2Jobs",
                "comprehendmedical:ListICD10CMInferenceJobs",
                "comprehendmedical:ListPHIDetectionJobs",
                "comprehendmedical:ListRxNormInferenceJobs",
                "comprehendmedical:StartEntitiesDetectionV2Job",
                "comprehendmedical:StartICD10CMInferenceJob",
                "comprehendmedical:StartPHIDetectionJob",
                "comprehendmedical:StartRxNormInferenceJob",
                "comprehendmedical:StopEntitiesDetectionV2Job",
                "comprehendmedical:StopICD10CMInferenceJob",
                "comprehendmedical:StopPHIDetectionJob",
                "comprehendmedical:StopRxNormInferenceJob"
            ],
            "Condition": {
                "SomeCondition-qYDKN": {
                    "aws:SourceArn": "...some value..."
                },
                "SomeCondition-nzyrH": {
                    "aws:SourceVpc": "...some value..."
                },
                "SomeCondition-MFOUk": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS DeepComposer",
            "Effect": "Allow",
            "Action": [
                "deepcomposer:AssociateCoupon",
                "deepcomposer:CreateAudio",
                "deepcomposer:CreateComposition",
                "deepcomposer:CreateModel",
                "deepcomposer:DeleteComposition",
                "deepcomposer:DeleteModel",
                "deepcomposer:GetComposition",
                "deepcomposer:GetModel",
                "deepcomposer:GetSampleModel",
                "deepcomposer:ListCompositions",
                "deepcomposer:ListModels",
                "deepcomposer:ListSampleModels",
                "deepcomposer:ListTagsForResource",
                "deepcomposer:ListTrainingTopics",
                "deepcomposer:TagResource",
                "deepcomposer:UntagResource",
                "deepcomposer:UpdateComposition",
                "deepcomposer:UpdateModel"
            ],
            "Resource": [
                "arn:aws:deepcomposer:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-HluIZ": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-sOxMd": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-FDwAM": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Elemental Support Content",
            "Effect": "Allow",
            "Action": [
                "elemental-support-content:Query"
            ]
        },
        {
            "Sid": "Amazon Managed Blockchain",
            "Effect": "Allow",
            "Action": [
                "managedblockchain:CreateMember",
                "managedblockchain:CreateNetwork",
                "managedblockchain:CreateNode",
                "managedblockchain:CreateProposal",
                "managedblockchain:DeleteMember",
                "managedblockchain:DeleteNode",
                "managedblockchain:GetMember",
                "managedblockchain:GetNetwork",
                "managedblockchain:GetNode",
                "managedblockchain:GetProposal",
                "managedblockchain:ListInvitations",
                "managedblockchain:ListMembers",
                "managedblockchain:ListNetworks",
                "managedblockchain:ListNodes",
                "managedblockchain:ListProposalVotes",
                "managedblockchain:ListProposals",
                "managedblockchain:ListTagsForResource",
                "managedblockchain:RejectInvitation",
                "managedblockchain:TagResource",
                "managedblockchain:UntagResource",
                "managedblockchain:UpdateMember",
                "managedblockchain:UpdateNode",
                "managedblockchain:VoteOnProposal"
            ],
            "Resource": [
                "arn:aws:managedblockchain:<region>:<accountId>:<resourceType>/<resourceName>"
            ],
            "Condition": {
                "SomeCondition-aZgOT": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-ZkmVa": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-YHTfn": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS WAF",
            "Effect": "Allow",
            "Action": [
                "waf:CreateByteMatchSet",
                "waf:CreateGeoMatchSet",
                "waf:CreateIPSet",
                "waf:CreateRateBasedRule",
                "waf:CreateRegexMatchSet",
                "waf:CreateRegexPatternSet",
                "waf:CreateRule",
                "waf:CreateRuleGroup",
                "waf:CreateSizeConstraintSet",
                "waf:CreateSqlInjectionMatchSet",
                "waf:CreateWebACL",
                "waf:CreateWebACLMigrationStack",
                "waf:CreateXssMatchSet",
                "waf:DeleteByteMatchSet",
                "waf:DeleteGeoMatchSet",
                "waf:DeleteIPSet",
                "waf:DeleteLoggingConfiguration",
                "waf:DeletePermissionPolicy",
                "waf:DeleteRateBasedRule",
                "waf:DeleteRegexMatchSet",
                "waf:DeleteRegexPatternSet",
                "waf:DeleteRule",
                "waf:DeleteRuleGroup",
                "waf:DeleteSizeConstraintSet",
                "waf:DeleteSqlInjectionMatchSet",
                "waf:DeleteWebACL",
                "waf:DeleteXssMatchSet",
                "waf:GetByteMatchSet",
                "waf:GetChangeToken",
                "waf:GetChangeTokenStatus",
                "waf:GetGeoMatchSet",
                "waf:GetIPSet",
                "waf:GetLoggingConfiguration",
                "waf:GetPermissionPolicy",
                "waf:GetRateBasedRule",
                "waf:GetRateBasedRuleManagedKeys",
                "waf:GetRegexMatchSet",
                "waf:GetRegexPatternSet",
                "waf:GetRule",
                "waf:GetRuleGroup",
                "waf:GetSampledRequests",
                "waf:GetSizeConstraintSet",
                "waf:GetSqlInjectionMatchSet",
                "waf:GetWebACL",
                "waf:GetXssMatchSet",
                "waf:ListActivatedRulesInRuleGroup",
                "waf:ListByteMatchSets",
                "waf:ListGeoMatchSets",
                "waf:ListIPSets",
                "waf:ListLoggingConfigurations",
                "waf:ListRateBasedRules",
                "waf:ListRegexMatchSets",
                "waf:ListRegexPatternSets",
                "waf:ListRuleGroups",
                "waf:ListRules",
                "waf:ListSizeConstraintSets",
                "waf:ListSqlInjectionMatchSets",
                "waf:ListSubscribedRuleGroups",
                "waf:ListTagsForResource",
                "waf:ListWebACLs",
                "waf:ListXssMatchSets",
                "waf:PutLoggingConfiguration",
                "waf:PutPermissionPolicy",
                "waf:TagResource",
                "waf:UntagResource",
                "waf:UpdateByteMatchSet",
                "waf:UpdateGeoMatchSet",
                "waf:UpdateIPSet",
                "waf:UpdateRateBasedRule",
                "waf:UpdateRegexMatchSet",
                "waf:UpdateRegexPatternSet",
                "waf:UpdateRule",
                "waf:UpdateRuleGroup",
                "waf:UpdateSizeConstraintSet",
                "waf:UpdateSqlInjectionMatchSet",
                "waf:UpdateWebACL",
                "waf:UpdateXssMatchSet"
            ],
            "Resource": [
                "arn:aws:waf::<account_ID>:<resource>/<resource_id>"
            ],
            "Condition": {
                "SomeCondition-Nwyug": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-brALz": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-knqcj": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon AppStream 2.0",
            "Effect": "Allow",
            "Action": [
                "appstream:AssociateFleet",
                "appstream:BatchAssociateUserStack",
                "appstream:BatchDisassociateUserStack",
                "appstream:CopyImage",
                "appstream:CreateDirectoryConfig",
                "appstream:CreateFleet",
                "appstream:CreateImageBuilder",
                "appstream:CreateImageBuilderStreamingURL",
                "appstream:CreateStack",
                "appstream:CreateStreamingURL",
                "appstream:CreateUsageReportSubscription",
                "appstream:CreateUser",
                "appstream:DeleteDirectoryConfig",
                "appstream:DeleteFleet",
                "appstream:DeleteImage",
                "appstream:DeleteImageBuilder",
                "appstream:DeleteImagePermissions",
                "appstream:DeleteStack",
                "appstream:DeleteUsageReportSubscription",
                "appstream:DeleteUser",
                "appstream:DescribeDirectoryConfigs",
                "appstream:DescribeFleets",
                "appstream:DescribeImageBuilders",
                "appstream:DescribeImagePermissions",
                "appstream:DescribeImages",
                "appstream:DescribeSessions",
                "appstream:DescribeStacks",
                "appstream:DescribeUsageReportSubscriptions",
                "appstream:DescribeUserStackAssociations",
                "appstream:DescribeUsers",
                "appstream:DisableUser",
                "appstream:DisassociateFleet",
                "appstream:EnableUser",
                "appstream:ExpireSession",
                "appstream:ListAssociatedFleets",
                "appstream:ListAssociatedStacks",
                "appstream:ListTagsForResource",
                "appstream:StartFleet",
                "appstream:StartImageBuilder",
                "appstream:StopFleet",
                "appstream:StopImageBuilder",
                "appstream:Stream",
                "appstream:TagResource",
                "appstream:UntagResource",
                "appstream:UpdateDirectoryConfig",
                "appstream:UpdateFleet",
                "appstream:UpdateImagePermissions",
                "appstream:UpdateStack"
            ],
            "Resource": [
                "arn:aws:appstream:<region>:<account>:<resourceType>/<resourcePath>"
            ],
            "Condition": {
                "SomeCondition-inJOK": {
                    "appstream:userId": "...some value..."
                },
                "SomeCondition-ZLSUN": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-qYBEy": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-JbhPH": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon QuickSight",
            "Effect": "Allow",
            "Action": [
                "quicksight:CancelIngestion",
                "quicksight:CreateAccountCustomization",
                "quicksight:CreateAdmin",
                "quicksight:CreateAnalysis",
                "quicksight:CreateCustomPermissions",
                "quicksight:CreateDashboard",
                "quicksight:CreateDataSet",
                "quicksight:CreateDataSource",
                "quicksight:CreateGroup",
                "quicksight:CreateGroupMembership",
                "quicksight:CreateIAMPolicyAssignment",
                "quicksight:CreateIngestion",
                "quicksight:CreateNamespace",
                "quicksight:CreateReader",
                "quicksight:CreateTemplate",
                "quicksight:CreateTemplateAlias",
                "quicksight:CreateTheme",
                "quicksight:CreateThemeAlias",
                "quicksight:CreateUser",
                "quicksight:CreateVPCConnection",
                "quicksight:DeleteAccountCustomization",
                "quicksight:DeleteAnalysis",
                "quicksight:DeleteCustomPermissions",
                "quicksight:DeleteDashboard",
                "quicksight:DeleteDataSet",
                "quicksight:DeleteDataSource",
                "quicksight:DeleteGroup",
                "quicksight:DeleteGroupMembership",
                "quicksight:DeleteIAMPolicyAssignment",
                "quicksight:DeleteNamespace",
                "quicksight:DeleteTemplate",
                "quicksight:DeleteTemplateAlias",
                "quicksight:DeleteTheme",
                "quicksight:DeleteThemeAlias",
                "quicksight:DeleteUser",
                "quicksight:DeleteUserByPrincipalId",
                "quicksight:DeleteVPCConnection",
                "quicksight:DescribeAccountCustomization",
                "quicksight:DescribeAccountSettings",
                "quicksight:DescribeAnalysis",
                "quicksight:DescribeAnalysisPermissions",
                "quicksight:DescribeCustomPermissions",
                "quicksight:DescribeDashboard",
                "quicksight:DescribeDashboardPermissions",
                "quicksight:DescribeDataSet",
                "quicksight:DescribeDataSetPermissions",
                "quicksight:DescribeDataSource",
                "quicksight:DescribeDataSourcePermissions",
                "quicksight:DescribeGroup",
                "quicksight:DescribeIAMPolicyAssignment",
                "quicksight:DescribeIngestion",
                "quicksight:DescribeNamespace",
                "quicksight:DescribeTemplate",
                "quicksight:DescribeTemplateAlias",
                "quicksight:DescribeTemplatePermissions",
                "quicksight:DescribeTheme",
                "quicksight:DescribeThemeAlias",
                "quicksight:DescribeThemePermissions",
                "quicksight:DescribeUser",
                "quicksight:GenerateEmbedUrlForAnonymousUser",
                "quicksight:GenerateEmbedUrlForRegisteredUser",
                "quicksight:GetAnonymousUserEmbedUrl",
                "quicksight:GetAuthCode",
                "quicksight:GetDashboardEmbedUrl",
                "quicksight:GetGroupMapping",
                "quicksight:GetSessionEmbedUrl",
                "quicksight:ListAnalyses",
                "quicksight:ListCustomPermissions",
                "quicksight:ListDashboardVersions",
                "quicksight:ListDashboards",
                "quicksight:ListDataSets",
                "quicksight:ListDataSources",
                "quicksight:ListGroupMemberships",
                "quicksight:ListGroups",
                "quicksight:ListIAMPolicyAssignments",
                "quicksight:ListIAMPolicyAssignmentsForUser",
                "quicksight:ListIngestions",
                "quicksight:ListNamespaces",
                "quicksight:ListTagsForResource",
                "quicksight:ListTemplateAliases",
                "quicksight:ListTemplateVersions",
                "quicksight:ListTemplates",
                "quicksight:ListThemeAliases",
                "quicksight:ListThemeVersions",
                "quicksight:ListThemes",
                "quicksight:ListUserGroups",
                "quicksight:ListUsers",
                "quicksight:PassDataSet",
                "quicksight:PassDataSource",
                "quicksight:RegisterUser",
                "quicksight:RestoreAnalysis",
                "quicksight:SearchAnalyses",
                "quicksight:SearchDashboards",
                "quicksight:SearchDirectoryGroups",
                "quicksight:SetGroupMapping",
                "quicksight:Subscribe",
                "quicksight:TagResource",
                "quicksight:Unsubscribe",
                "quicksight:UntagResource",
                "quicksight:UpdateAccountCustomization",
                "quicksight:UpdateAccountSettings",
                "quicksight:UpdateAnalysis",
                "quicksight:UpdateAnalysisPermissions",
                "quicksight:UpdateCustomPermissions",
                "quicksight:UpdateDashboard",
                "quicksight:UpdateDashboardPermissions",
                "quicksight:UpdateDashboardPublishedVersion",
                "quicksight:UpdateDataSet",
                "quicksight:UpdateDataSetPermissions",
                "quicksight:UpdateDataSource",
                "quicksight:UpdateDataSourcePermissions",
                "quicksight:UpdateGroup",
                "quicksight:UpdateIAMPolicyAssignment",
                "quicksight:UpdateTemplate",
                "quicksight:UpdateTemplateAlias",
                "quicksight:UpdateTemplatePermissions",
                "quicksight:UpdateTheme",
                "quicksight:UpdateThemeAlias",
                "quicksight:UpdateThemePermissions",
                "quicksight:UpdateUser"
            ],
            "Resource": [
                "arn:aws:quicksight:<region>:<accountId>:<resourceType>/<resourceId>"
            ],
            "Condition": {
                "SomeCondition-GLhQE": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-tkJsj": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-vquVN": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-hdFAZ": {
                    "quicksight:DirectoryType": "...some value..."
                },
                "SomeCondition-frSTU": {
                    "quicksight:Edition": "...some value..."
                },
                "SomeCondition-TcELX": {
                    "quicksight:IamArn": "...some value..."
                },
                "SomeCondition-qSoRI": {
                    "quicksight:SessionName": "...some value..."
                },
                "SomeCondition-vyNGA": {
                    "quicksight:UserName": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS WAF V2",
            "Effect": "Allow",
            "Action": [
                "wafv2:AssociateWebACL",
                "wafv2:CheckCapacity",
                "wafv2:CreateIPSet",
                "wafv2:CreateRegexPatternSet",
                "wafv2:CreateRuleGroup",
                "wafv2:CreateWebACL",
                "wafv2:DeleteFirewallManagerRuleGroups",
                "wafv2:DeleteIPSet",
                "wafv2:DeleteLoggingConfiguration",
                "wafv2:DeletePermissionPolicy",
                "wafv2:DeleteRegexPatternSet",
                "wafv2:DeleteRuleGroup",
                "wafv2:DeleteWebACL",
                "wafv2:DescribeManagedRuleGroup",
                "wafv2:DisassociateFirewallManager",
                "wafv2:DisassociateWebACL",
                "wafv2:GetIPSet",
                "wafv2:GetLoggingConfiguration",
                "wafv2:GetPermissionPolicy",
                "wafv2:GetRateBasedStatementManagedKeys",
                "wafv2:GetRegexPatternSet",
                "wafv2:GetRuleGroup",
                "wafv2:GetSampledRequests",
                "wafv2:GetWebACL",
                "wafv2:GetWebACLForResource",
                "wafv2:ListAvailableManagedRuleGroups",
                "wafv2:ListIPSets",
                "wafv2:ListLoggingConfigurations",
                "wafv2:ListRegexPatternSets",
                "wafv2:ListResourcesForWebACL",
                "wafv2:ListRuleGroups",
                "wafv2:ListTagsForResource",
                "wafv2:ListWebACLs",
                "wafv2:PutFirewallManagerRuleGroups",
                "wafv2:PutLoggingConfiguration",
                "wafv2:PutPermissionPolicy",
                "wafv2:TagResource",
                "wafv2:UntagResource",
                "wafv2:UpdateIPSet",
                "wafv2:UpdateRegexPatternSet",
                "wafv2:UpdateRuleGroup",
                "wafv2:UpdateWebACL"
            ],
            "Resource": [
                "arn:aws:wafv2:<region>:<account-id>:<scope>/<resource-type>/<resource-name>/<resource-id>"
            ],
            "Condition": {
                "SomeCondition-AsKCD": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-sniNc": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-BoeIt": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon WorkSpaces Application Manager",
            "Effect": "Allow",
            "Action": [
                "wam:AuthenticatePackager"
            ]
        },
        {
            "Sid": "Amazon Data Lifecycle Manager",
            "Effect": "Allow",
            "Action": [
                "dlm:CreateLifecyclePolicy",
                "dlm:DeleteLifecyclePolicy",
                "dlm:GetLifecyclePolicies",
                "dlm:GetLifecyclePolicy",
                "dlm:ListTagsForResource",
                "dlm:TagResource",
                "dlm:UntagResource",
                "dlm:UpdateLifecyclePolicy"
            ],
            "Resource": [
                "arn:${Partition}:dlm:<region>:<account-id>:policy/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-CYSFl": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-zLeEs": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-HsTjt": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Well-Architected Tool",
            "Effect": "Allow",
            "Action": [
                "wellarchitected:AssociateLenses",
                "wellarchitected:CreateMilestone",
                "wellarchitected:CreateWorkload",
                "wellarchitected:CreateWorkloadShare",
                "wellarchitected:DeleteWorkload",
                "wellarchitected:DeleteWorkloadShare",
                "wellarchitected:DisassociateLenses",
                "wellarchitected:GetAnswer",
                "wellarchitected:GetLensReview",
                "wellarchitected:GetLensReviewReport",
                "wellarchitected:GetLensVersionDifference",
                "wellarchitected:GetMilestone",
                "wellarchitected:GetWorkload",
                "wellarchitected:ListAnswers",
                "wellarchitected:ListLensReviewImprovements",
                "wellarchitected:ListLensReviews",
                "wellarchitected:ListLenses",
                "wellarchitected:ListMilestones",
                "wellarchitected:ListNotifications",
                "wellarchitected:ListShareInvitations",
                "wellarchitected:ListTagsForResource",
                "wellarchitected:ListWorkloadShares",
                "wellarchitected:ListWorkloads",
                "wellarchitected:TagResource",
                "wellarchitected:UntagResource",
                "wellarchitected:UpdateAnswer",
                "wellarchitected:UpdateLensReview",
                "wellarchitected:UpdateShareInvitation",
                "wellarchitected:UpdateWorkload",
                "wellarchitected:UpdateWorkloadShare",
                "wellarchitected:UpgradeLensReview"
            ],
            "Resource": [
                "arn:aws:wellarchitected:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-bqUCQ": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-WgAcb": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-FEcgW": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Connector Service",
            "Effect": "Allow",
            "Action": [
                "awsconnector:GetConnectorHealth",
                "awsconnector:RegisterConnector",
                "awsconnector:ValidateConnectorId"
            ]
        },
        {
            "Sid": "Amazon Kendra",
            "Effect": "Allow",
            "Action": [
                "kendra:BatchDeleteDocument",
                "kendra:BatchPutDocument",
                "kendra:ClearQuerySuggestions",
                "kendra:CreateDataSource",
                "kendra:CreateFaq",
                "kendra:CreateIndex",
                "kendra:CreateQuerySuggestionsBlockList",
                "kendra:CreateThesaurus",
                "kendra:DeleteDataSource",
                "kendra:DeleteFaq",
                "kendra:DeleteIndex",
                "kendra:DeleteQuerySuggestionsBlockList",
                "kendra:DeleteThesaurus",
                "kendra:DescribeDataSource",
                "kendra:DescribeFaq",
                "kendra:DescribeIndex",
                "kendra:DescribeQuerySuggestionsBlockList",
                "kendra:DescribeQuerySuggestionsConfig",
                "kendra:DescribeThesaurus",
                "kendra:GetQuerySuggestions",
                "kendra:ListDataSourceSyncJobs",
                "kendra:ListDataSources",
                "kendra:ListFaqs",
                "kendra:ListIndices",
                "kendra:ListQuerySuggestionsBlockLists",
                "kendra:ListTagsForResource",
                "kendra:ListThesauri",
                "kendra:Query",
                "kendra:StartDataSourceSyncJob",
                "kendra:StopDataSourceSyncJob",
                "kendra:SubmitFeedback",
                "kendra:TagResource",
                "kendra:UntagResource",
                "kendra:UpdateDataSource",
                "kendra:UpdateIndex",
                "kendra:UpdateQuerySuggestionsBlockList",
                "kendra:UpdateQuerySuggestionsConfig",
                "kendra:UpdateThesaurus"
            ],
            "Resource": [
                "arn:${Partition}:kendra:${Region}:${AccountId}:${ResourceType}/${ResourceName}"
            ],
            "Condition": {
                "SomeCondition-ByFlH": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-ZEFcG": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-Hziom": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Interactive Video Service",
            "Effect": "Allow",
            "Action": [
                "ivs:BatchGetChannel",
                "ivs:BatchGetStreamKey",
                "ivs:CreateChannel",
                "ivs:CreateRecordingConfiguration",
                "ivs:CreateStreamKey",
                "ivs:DeleteChannel",
                "ivs:DeletePlaybackKeyPair",
                "ivs:DeleteRecordingConfiguration",
                "ivs:DeleteStreamKey",
                "ivs:GetChannel",
                "ivs:GetPlaybackKeyPair",
                "ivs:GetRecordingConfiguration",
                "ivs:GetStream",
                "ivs:GetStreamKey",
                "ivs:ImportPlaybackKeyPair",
                "ivs:ListChannels",
                "ivs:ListPlaybackKeyPairs",
                "ivs:ListRecordingConfigurations",
                "ivs:ListStreamKeys",
                "ivs:ListStreams",
                "ivs:ListTagsForResource",
                "ivs:PutMetadata",
                "ivs:StopStream",
                "ivs:TagResource",
                "ivs:UntagResource",
                "ivs:UpdateChannel"
            ],
            "Resource": [
                "arn:aws:ivs:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-hRBjx": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-jULwz": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-rPaFf": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Lightsail",
            "Effect": "Allow",
            "Action": [
                "lightsail:AllocateStaticIp",
                "lightsail:AttachCertificateToDistribution",
                "lightsail:AttachDisk",
                "lightsail:AttachInstancesToLoadBalancer",
                "lightsail:AttachLoadBalancerTlsCertificate",
                "lightsail:AttachStaticIp",
                "lightsail:CloseInstancePublicPorts",
                "lightsail:CopySnapshot",
                "lightsail:CreateBucket",
                "lightsail:CreateBucketAccessKey",
                "lightsail:CreateCertificate",
                "lightsail:CreateCloudFormationStack",
                "lightsail:CreateContactMethod",
                "lightsail:CreateContainerService",
                "lightsail:CreateContainerServiceDeployment",
                "lightsail:CreateContainerServiceRegistryLogin",
                "lightsail:CreateDisk",
                "lightsail:CreateDiskFromSnapshot",
                "lightsail:CreateDiskSnapshot",
                "lightsail:CreateDistribution",
                "lightsail:CreateDomain",
                "lightsail:CreateDomainEntry",
                "lightsail:CreateInstanceSnapshot",
                "lightsail:CreateInstances",
                "lightsail:CreateInstancesFromSnapshot",
                "lightsail:CreateKeyPair",
                "lightsail:CreateLoadBalancer",
                "lightsail:CreateLoadBalancerTlsCertificate",
                "lightsail:CreateRelationalDatabase",
                "lightsail:CreateRelationalDatabaseFromSnapshot",
                "lightsail:CreateRelationalDatabaseSnapshot",
                "lightsail:DeleteAlarm",
                "lightsail:DeleteAutoSnapshot",
                "lightsail:DeleteBucket",
                "lightsail:DeleteBucketAccessKey",
                "lightsail:DeleteCertificate",
                "lightsail:DeleteContactMethod",
                "lightsail:DeleteContainerImage",
                "lightsail:DeleteContainerService",
                "lightsail:DeleteDisk",
                "lightsail:DeleteDiskSnapshot",
                "lightsail:DeleteDistribution",
                "lightsail:DeleteDomain",
                "lightsail:DeleteDomainEntry",
                "lightsail:DeleteInstance",
                "lightsail:DeleteInstanceSnapshot",
                "lightsail:DeleteKeyPair",
                "lightsail:DeleteKnownHostKeys",
                "lightsail:DeleteLoadBalancer",
                "lightsail:DeleteLoadBalancerTlsCertificate",
                "lightsail:DeleteRelationalDatabase",
                "lightsail:DeleteRelationalDatabaseSnapshot",
                "lightsail:DetachCertificateFromDistribution",
                "lightsail:DetachDisk",
                "lightsail:DetachInstancesFromLoadBalancer",
                "lightsail:DetachStaticIp",
                "lightsail:DisableAddOn",
                "lightsail:DownloadDefaultKeyPair",
                "lightsail:EnableAddOn",
                "lightsail:ExportSnapshot",
                "lightsail:GetActiveNames",
                "lightsail:GetAlarms",
                "lightsail:GetAutoSnapshots",
                "lightsail:GetBlueprints",
                "lightsail:GetBucketAccessKeys",
                "lightsail:GetBucketBundles",
                "lightsail:GetBucketMetricData",
                "lightsail:GetBuckets",
                "lightsail:GetBundles",
                "lightsail:GetCertificates",
                "lightsail:GetCloudFormationStackRecords",
                "lightsail:GetContactMethods",
                "lightsail:GetContainerAPIMetadata",
                "lightsail:GetContainerImages",
                "lightsail:GetContainerLog",
                "lightsail:GetContainerServiceDeployments",
                "lightsail:GetContainerServiceMetricData",
                "lightsail:GetContainerServicePowers",
                "lightsail:GetContainerServices",
                "lightsail:GetDisk",
                "lightsail:GetDiskSnapshot",
                "lightsail:GetDiskSnapshots",
                "lightsail:GetDisks",
                "lightsail:GetDistributionBundles",
                "lightsail:GetDistributionLatestCacheReset",
                "lightsail:GetDistributionMetricData",
                "lightsail:GetDistributions",
                "lightsail:GetDomain",
                "lightsail:GetDomains",
                "lightsail:GetExportSnapshotRecords",
                "lightsail:GetInstance",
                "lightsail:GetInstanceAccessDetails",
                "lightsail:GetInstanceMetricData",
                "lightsail:GetInstancePortStates",
                "lightsail:GetInstanceSnapshot",
                "lightsail:GetInstanceSnapshots",
                "lightsail:GetInstanceState",
                "lightsail:GetInstances",
                "lightsail:GetKeyPair",
                "lightsail:GetKeyPairs",
                "lightsail:GetLoadBalancer",
                "lightsail:GetLoadBalancerMetricData",
                "lightsail:GetLoadBalancerTlsCertificates",
                "lightsail:GetLoadBalancers",
                "lightsail:GetOperation",
                "lightsail:GetOperations",
                "lightsail:GetOperationsForResource",
                "lightsail:GetRegions",
                "lightsail:GetRelationalDatabase",
                "lightsail:GetRelationalDatabaseBlueprints",
                "lightsail:GetRelationalDatabaseBundles",
                "lightsail:GetRelationalDatabaseEvents",
                "lightsail:GetRelationalDatabaseLogEvents",
                "lightsail:GetRelationalDatabaseLogStreams",
                "lightsail:GetRelationalDatabaseMasterUserPassword",
                "lightsail:GetRelationalDatabaseMetricData",
                "lightsail:GetRelationalDatabaseParameters",
                "lightsail:GetRelationalDatabaseSnapshot",
                "lightsail:GetRelationalDatabaseSnapshots",
                "lightsail:GetRelationalDatabases",
                "lightsail:GetStaticIp",
                "lightsail:GetStaticIps",
                "lightsail:ImportKeyPair",
                "lightsail:IsVpcPeered",
                "lightsail:OpenInstancePublicPorts",
                "lightsail:PeerVpc",
                "lightsail:PutAlarm",
                "lightsail:PutInstancePublicPorts",
                "lightsail:RebootInstance",
                "lightsail:RebootRelationalDatabase",
                "lightsail:RegisterContainerImage",
                "lightsail:ReleaseStaticIp",
                "lightsail:ResetDistributionCache",
                "lightsail:SendContactMethodVerification",
                "lightsail:SetIpAddressType",
                "lightsail:SetResourceAccessForBucket",
                "lightsail:StartInstance",
                "lightsail:StartRelationalDatabase",
                "lightsail:StopInstance",
                "lightsail:StopRelationalDatabase",
                "lightsail:TagResource",
                "lightsail:TestAlarm",
                "lightsail:UnpeerVpc",
                "lightsail:UntagResource",
                "lightsail:UpdateBucket",
                "lightsail:UpdateBucketBundle",
                "lightsail:UpdateContainerService",
                "lightsail:UpdateDistribution",
                "lightsail:UpdateDistributionBundle",
                "lightsail:UpdateDomainEntry",
                "lightsail:UpdateLoadBalancerAttribute",
                "lightsail:UpdateRelationalDatabase",
                "lightsail:UpdateRelationalDatabaseParameters"
            ],
            "Resource": [
                "arn:aws:lightsail:<regionName>:<userAccountId>:<resourceType>/<Id>"
            ],
            "Condition": {
                "SomeCondition-MwFvx": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-bFRiL": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-BCWdH": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Backup storage",
            "Effect": "Allow",
            "Action": [
                "backup-storage:MountCapsule"
            ]
        },
        {
            "Sid": "Amazon Cognito Sync",
            "Effect": "Allow",
            "Action": [
                "cognito-sync:BulkPublish",
                "cognito-sync:DeleteDataset",
                "cognito-sync:DescribeDataset",
                "cognito-sync:DescribeIdentityPoolUsage",
                "cognito-sync:DescribeIdentityUsage",
                "cognito-sync:GetBulkPublishDetails",
                "cognito-sync:GetCognitoEvents",
                "cognito-sync:GetIdentityPoolConfiguration",
                "cognito-sync:ListDatasets",
                "cognito-sync:ListIdentityPoolUsage",
                "cognito-sync:ListRecords",
                "cognito-sync:QueryRecords",
                "cognito-sync:RegisterDevice",
                "cognito-sync:SetCognitoEvents",
                "cognito-sync:SetDatasetConfiguration",
                "cognito-sync:SetIdentityPoolConfiguration",
                "cognito-sync:SubscribeToDataset",
                "cognito-sync:UnsubscribeFromDataset",
                "cognito-sync:UpdateRecords"
            ],
            "Resource": [
                "arn:aws:cognito-sync:<region>:<account>:<resourceType>/<resourcePath>:"
            ]
        },
        {
            "Sid": "Amazon CloudSearch",
            "Effect": "Allow",
            "Action": [
                "cloudsearch:AddTags",
                "cloudsearch:BuildSuggesters",
                "cloudsearch:CreateDomain",
                "cloudsearch:DefineAnalysisScheme",
                "cloudsearch:DefineExpression",
                "cloudsearch:DefineIndexField",
                "cloudsearch:DefineSuggester",
                "cloudsearch:DeleteAnalysisScheme",
                "cloudsearch:DeleteDomain",
                "cloudsearch:DeleteExpression",
                "cloudsearch:DeleteIndexField",
                "cloudsearch:DeleteSuggester",
                "cloudsearch:DescribeAnalysisSchemes",
                "cloudsearch:DescribeAvailabilityOptions",
                "cloudsearch:DescribeDomainEndpointOptions",
                "cloudsearch:DescribeDomains",
                "cloudsearch:DescribeExpressions",
                "cloudsearch:DescribeIndexFields",
                "cloudsearch:DescribeScalingParameters",
                "cloudsearch:DescribeServiceAccessPolicies",
                "cloudsearch:DescribeSuggesters",
                "cloudsearch:IndexDocuments",
                "cloudsearch:ListDomainNames",
                "cloudsearch:ListTags",
                "cloudsearch:RemoveTags",
                "cloudsearch:UpdateAvailabilityOptions",
                "cloudsearch:UpdateDomainEndpointOptions",
                "cloudsearch:UpdateScalingParameters",
                "cloudsearch:UpdateServiceAccessPolicies",
                "cloudsearch:document",
                "cloudsearch:search",
                "cloudsearch:suggest"
            ],
            "Resource": [
                "arn:aws:cloudsearch:<region>:<account>:<resourceType>/<resourceName>"
            ]
        },
        {
            "Sid": "Amazon Elastic Transcoder",
            "Effect": "Allow",
            "Action": [
                "elastictranscoder:CancelJob",
                "elastictranscoder:CreateJob",
                "elastictranscoder:CreatePipeline",
                "elastictranscoder:CreatePreset",
                "elastictranscoder:DeletePipeline",
                "elastictranscoder:DeletePreset",
                "elastictranscoder:ListJobsByPipeline",
                "elastictranscoder:ListJobsByStatus",
                "elastictranscoder:ListPipelines",
                "elastictranscoder:ListPresets",
                "elastictranscoder:ReadJob",
                "elastictranscoder:ReadPipeline",
                "elastictranscoder:ReadPreset",
                "elastictranscoder:TestRole",
                "elastictranscoder:UpdatePipeline",
                "elastictranscoder:UpdatePipelineNotifications",
                "elastictranscoder:UpdatePipelineStatus"
            ],
            "Resource": [
                "arn:aws:elastictranscoder:<region>:<account>:<resourceType>/<resourceId>"
            ]
        },
        {
            "Sid": "AWS Price List",
            "Effect": "Allow",
            "Action": [
                "pricing:DescribeServices",
                "pricing:GetAttributeValues",
                "pricing:GetProducts"
            ]
        },
        {
            "Sid": "AWS Backup",
            "Effect": "Allow",
            "Action": [
                "backup:CopyFromBackupVault",
                "backup:CopyIntoBackupVault",
                "backup:CreateBackupPlan",
                "backup:CreateBackupSelection",
                "backup:CreateBackupVault",
                "backup:DeleteBackupPlan",
                "backup:DeleteBackupSelection",
                "backup:DeleteBackupVault",
                "backup:DeleteBackupVaultAccessPolicy",
                "backup:DeleteBackupVaultNotifications",
                "backup:DeleteRecoveryPoint",
                "backup:DescribeBackupJob",
                "backup:DescribeBackupVault",
                "backup:DescribeCopyJob",
                "backup:DescribeGlobalSettings",
                "backup:DescribeProtectedResource",
                "backup:DescribeRecoveryPoint",
                "backup:DescribeRegionSettings",
                "backup:DescribeRestoreJob",
                "backup:DisassociateRecoveryPoint",
                "backup:ExportBackupPlanTemplate",
                "backup:GetBackupPlan",
                "backup:GetBackupPlanFromJSON",
                "backup:GetBackupPlanFromTemplate",
                "backup:GetBackupSelection",
                "backup:GetBackupVaultAccessPolicy",
                "backup:GetBackupVaultNotifications",
                "backup:GetRecoveryPointRestoreMetadata",
                "backup:GetSupportedResourceTypes",
                "backup:ListBackupJobs",
                "backup:ListBackupPlanTemplates",
                "backup:ListBackupPlanVersions",
                "backup:ListBackupPlans",
                "backup:ListBackupSelections",
                "backup:ListBackupVaults",
                "backup:ListCopyJobs",
                "backup:ListProtectedResources",
                "backup:ListRecoveryPointsByBackupVault",
                "backup:ListRecoveryPointsByResource",
                "backup:ListRestoreJobs",
                "backup:ListTags",
                "backup:PutBackupVaultAccessPolicy",
                "backup:PutBackupVaultNotifications",
                "backup:StartBackupJob",
                "backup:StartCopyJob",
                "backup:StartRestoreJob",
                "backup:StopBackupJob",
                "backup:TagResource",
                "backup:UntagResource",
                "backup:UpdateBackupPlan",
                "backup:UpdateGlobalSettings",
                "backup:UpdateRecoveryPointLifecycle",
                "backup:UpdateRegionSettings"
            ],
            "Resource": [
                "arn:<partition>:backup:<region>:<account-id>:<resource-type>:<resource_name>"
            ],
            "Condition": {
                "SomeCondition-bzDuX": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-DpoFP": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-jxdYG": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-OywQK": {
                    "backup:CopyTargetOrgPaths": "...some value..."
                },
                "SomeCondition-UEltg": {
                    "backup:CopyTargets": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Mobile Analytics",
            "Effect": "Allow",
            "Action": [
                "mobileanalytics:GetFinancialReports",
                "mobileanalytics:GetReports",
                "mobileanalytics:PutEvents"
            ]
        },
        {
            "Sid": "AWS Glue DataBrew",
            "Effect": "Allow",
            "Action": [
                "databrew:BatchDeleteRecipeVersion",
                "databrew:CreateDataset",
                "databrew:CreateProfileJob",
                "databrew:CreateProject",
                "databrew:CreateRecipe",
                "databrew:CreateRecipeJob",
                "databrew:CreateSchedule",
                "databrew:DeleteDataset",
                "databrew:DeleteJob",
                "databrew:DeleteProject",
                "databrew:DeleteRecipeVersion",
                "databrew:DeleteSchedule",
                "databrew:DescribeDataset",
                "databrew:DescribeJob",
                "databrew:DescribeJobRun",
                "databrew:DescribeProject",
                "databrew:DescribeRecipe",
                "databrew:DescribeSchedule",
                "databrew:ListDatasets",
                "databrew:ListJobRuns",
                "databrew:ListJobs",
                "databrew:ListProjects",
                "databrew:ListRecipeVersions",
                "databrew:ListRecipes",
                "databrew:ListSchedules",
                "databrew:ListTagsForResource",
                "databrew:PublishRecipe",
                "databrew:SendProjectSessionAction",
                "databrew:StartJobRun",
                "databrew:StartProjectSession",
                "databrew:StopJobRun",
                "databrew:TagResource",
                "databrew:UntagResource",
                "databrew:UpdateDataset",
                "databrew:UpdateProfileJob",
                "databrew:UpdateProject",
                "databrew:UpdateRecipe",
                "databrew:UpdateRecipeJob",
                "databrew:UpdateSchedule"
            ],
            "Resource": [
                "arn:${Partition}:databrew:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-XtHEg": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-wNlxY": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-meOIs": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Braket",
            "Effect": "Allow",
            "Action": [
                "braket:CancelQuantumTask",
                "braket:CreateQuantumTask",
                "braket:GetDevice",
                "braket:GetQuantumTask",
                "braket:ListTagsForResource",
                "braket:SearchDevices",
                "braket:SearchQuantumTasks",
                "braket:TagResource",
                "braket:UntagResource"
            ],
            "Resource": [
                "arn:${Partition}:braket:<region>:<account_ID>:.+"
            ],
            "Condition": {
                "SomeCondition-SCgLD": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-xTbFN": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-jkFDB": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS IoT Device Tester",
            "Effect": "Allow",
            "Action": [
                "iot-device-tester:CheckVersion",
                "iot-device-tester:DownloadTestSuite",
                "iot-device-tester:LatestIdt",
                "iot-device-tester:SendMetrics",
                "iot-device-tester:SupportedVersion"
            ]
        },
        {
            "Sid": "AWS Database Migration Service",
            "Effect": "Allow",
            "Action": [
                "dms:AddTagsToResource",
                "dms:ApplyPendingMaintenanceAction",
                "dms:CancelReplicationTaskAssessmentRun",
                "dms:CreateEndpoint",
                "dms:CreateEventSubscription",
                "dms:CreateReplicationInstance",
                "dms:CreateReplicationSubnetGroup",
                "dms:CreateReplicationTask",
                "dms:DeleteCertificate",
                "dms:DeleteConnection",
                "dms:DeleteEndpoint",
                "dms:DeleteEventSubscription",
                "dms:DeleteReplicationInstance",
                "dms:DeleteReplicationSubnetGroup",
                "dms:DeleteReplicationTask",
                "dms:DeleteReplicationTaskAssessmentRun",
                "dms:DescribeAccountAttributes",
                "dms:DescribeApplicableIndividualAssessments",
                "dms:DescribeCertificates",
                "dms:DescribeConnections",
                "dms:DescribeEndpointSettings",
                "dms:DescribeEndpointTypes",
                "dms:DescribeEndpoints",
                "dms:DescribeEventCategories",
                "dms:DescribeEventSubscriptions",
                "dms:DescribeEvents",
                "dms:DescribeOrderableReplicationInstances",
                "dms:DescribeRefreshSchemasStatus",
                "dms:DescribeReplicationInstanceTaskLogs",
                "dms:DescribeReplicationInstances",
                "dms:DescribeReplicationSubnetGroups",
                "dms:DescribeReplicationTaskAssessmentResults",
                "dms:DescribeReplicationTaskAssessmentRuns",
                "dms:DescribeReplicationTaskIndividualAssessments",
                "dms:DescribeReplicationTasks",
                "dms:DescribeSchemas",
                "dms:DescribeTableStatistics",
                "dms:ImportCertificate",
                "dms:ListTagsForResource",
                "dms:ModifyEndpoint",
                "dms:ModifyEventSubscription",
                "dms:ModifyReplicationInstance",
                "dms:ModifyReplicationSubnetGroup",
                "dms:ModifyReplicationTask",
                "dms:MoveReplicationTask",
                "dms:RebootReplicationInstance",
                "dms:RefreshSchemas",
                "dms:ReloadTables",
                "dms:RemoveTagsFromResource",
                "dms:StartReplicationTask",
                "dms:StartReplicationTaskAssessment",
                "dms:StartReplicationTaskAssessmentRun",
                "dms:StopReplicationTask",
                "dms:TestConnection"
            ],
            "Resource": [
                "arn:aws:dms:<region>:<account>:<resource>"
            ],
            "Condition": {
                "SomeCondition-xLPlm": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-eXMfL": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-FUixf": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-EGaLv": {
                    "dms:cert-tag/${TagKey}": "...some value..."
                },
                "SomeCondition-nqklA": {
                    "dms:endpoint-tag/${TagKey}": "...some value..."
                },
                "SomeCondition-KzVRE": {
                    "dms:es-tag/${TagKey}": "...some value..."
                },
                "SomeCondition-IKVMk": {
                    "dms:rep-tag/${TagKey}": "...some value..."
                },
                "SomeCondition-ZKDxf": {
                    "dms:req-tag/${TagKey}": "...some value..."
                },
                "SomeCondition-ydMpX": {
                    "dms:subgrp-tag/${TagKey}": "...some value..."
                },
                "SomeCondition-EzheS": {
                    "dms:task-tag/${TagKey}": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Session Manager Message Gateway Service",
            "Effect": "Allow",
            "Action": [
                "ssmmessages:CreateControlChannel",
                "ssmmessages:CreateDataChannel",
                "ssmmessages:OpenControlChannel",
                "ssmmessages:OpenDataChannel"
            ]
        },
        {
            "Sid": "AWS Network Firewall",
            "Effect": "Allow",
            "Action": [
                "network-firewall:AssociateFirewallPolicy",
                "network-firewall:AssociateSubnets",
                "network-firewall:CreateFirewall",
                "network-firewall:CreateFirewallPolicy",
                "network-firewall:CreateRuleGroup",
                "network-firewall:DeleteFirewall",
                "network-firewall:DeleteFirewallPolicy",
                "network-firewall:DeleteResourcePolicy",
                "network-firewall:DeleteRuleGroup",
                "network-firewall:DescribeFirewall",
                "network-firewall:DescribeFirewallPolicy",
                "network-firewall:DescribeLoggingConfiguration",
                "network-firewall:DescribeResourcePolicy",
                "network-firewall:DescribeRuleGroup",
                "network-firewall:DisassociateSubnets",
                "network-firewall:ListFirewallPolicies",
                "network-firewall:ListFirewalls",
                "network-firewall:ListRuleGroups",
                "network-firewall:ListTagsForResource",
                "network-firewall:PutResourcePolicy",
                "network-firewall:TagResource",
                "network-firewall:UntagResource",
                "network-firewall:UpdateFirewallDeleteProtection",
                "network-firewall:UpdateFirewallDescription",
                "network-firewall:UpdateFirewallPolicy",
                "network-firewall:UpdateFirewallPolicyChangeProtection",
                "network-firewall:UpdateLoggingConfiguration",
                "network-firewall:UpdateRuleGroup",
                "network-firewall:UpdateSubnetChangeProtection"
            ],
            "Resource": [
                "arn:aws:network-firewall:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-mgSaY": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-KcSpQ": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-XeEVZ": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Artifact",
            "Effect": "Allow",
            "Action": [
                "artifact:AcceptAgreement",
                "artifact:DownloadAgreement",
                "artifact:Get",
                "artifact:TerminateAgreement"
            ],
            "Resource": [
                "arn:aws:artifact::<resource>"
            ]
        },
        {
            "Sid": "AWS Systems Manager Incident Manager Contacts",
            "Effect": "Allow",
            "Action": [
                "ssm-contacts:AcceptPage",
                "ssm-contacts:ActivateContactChannel",
                "ssm-contacts:AssociateContact",
                "ssm-contacts:CreateContact",
                "ssm-contacts:CreateContactChannel",
                "ssm-contacts:DeactivateContactChannel",
                "ssm-contacts:DeleteContact",
                "ssm-contacts:DeleteContactChannel",
                "ssm-contacts:DeleteContactPolicy",
                "ssm-contacts:DescribeEngagement",
                "ssm-contacts:DescribePage",
                "ssm-contacts:GetContact",
                "ssm-contacts:GetContactChannel",
                "ssm-contacts:ListContactChannels",
                "ssm-contacts:ListContacts",
                "ssm-contacts:ListEngagements",
                "ssm-contacts:ListPageReceipts",
                "ssm-contacts:ListPagesByContact",
                "ssm-contacts:ListPagesByEngagement",
                "ssm-contacts:PutContactPolicy",
                "ssm-contacts:SendActivationCode",
                "ssm-contacts:StartEngagement",
                "ssm-contacts:StopEngagement",
                "ssm-contacts:UpdateContact",
                "ssm-contacts:UpdateContactChannel",
                "ssm-contacts:UpdateContactPolicy"
            ],
            "Resource": [
                "arn:aws:ssm-contacts:<region>:<account-id>:<relative-id>"
            ]
        },
        {
            "Sid": "Amazon Transcribe",
            "Effect": "Allow",
            "Action": [
                "transcribe:CreateCallAnalyticsCategory",
                "transcribe:CreateLanguageModel",
                "transcribe:CreateMedicalVocabulary",
                "transcribe:CreateVocabulary",
                "transcribe:CreateVocabularyFilter",
                "transcribe:DeleteCallAnalyticsCategory",
                "transcribe:DeleteCallAnalyticsJob",
                "transcribe:DeleteLanguageModel",
                "transcribe:DeleteMedicalTranscriptionJob",
                "transcribe:DeleteMedicalVocabulary",
                "transcribe:DeleteTranscriptionJob",
                "transcribe:DeleteVocabulary",
                "transcribe:DeleteVocabularyFilter",
                "transcribe:DescribeLanguageModel",
                "transcribe:GetCallAnalyticsCategory",
                "transcribe:GetCallAnalyticsJob",
                "transcribe:GetMedicalTranscriptionJob",
                "transcribe:GetMedicalVocabulary",
                "transcribe:GetTranscriptionJob",
                "transcribe:GetVocabulary",
                "transcribe:GetVocabularyFilter",
                "transcribe:ListCallAnalyticsCategories",
                "transcribe:ListCallAnalyticsJobs",
                "transcribe:ListLanguageModels",
                "transcribe:ListMedicalTranscriptionJobs",
                "transcribe:ListMedicalVocabularies",
                "transcribe:ListTranscriptionJobs",
                "transcribe:ListVocabularies",
                "transcribe:ListVocabularyFilters",
                "transcribe:StartCallAnalyticsJob",
                "transcribe:StartMedicalStreamTranscription",
                "transcribe:StartMedicalStreamTranscriptionWebSocket",
                "transcribe:StartMedicalTranscriptionJob",
                "transcribe:StartStreamTranscription",
                "transcribe:StartStreamTranscriptionWebSocket",
                "transcribe:StartTranscriptionJob",
                "transcribe:UpdateCallAnalyticsCategory",
                "transcribe:UpdateMedicalVocabulary",
                "transcribe:UpdateVocabulary",
                "transcribe:UpdateVocabularyFilter"
            ],
            "Condition": {
                "SomeCondition-SNlpw": {
                    "transcribe:OutputBucketName": "...some value..."
                },
                "SomeCondition-AZtUi": {
                    "transcribe:OutputEncryptionKMSKeyId": "...some value..."
                },
                "SomeCondition-yRCQD": {
                    "transcribe:OutputKey": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS IQ Permissions",
            "Effect": "Allow",
            "Action": [
                "iq-permission:ApproveAccessGrant"
            ]
        },
        {
            "Sid": "AWS Elemental MediaPackage VOD",
            "Effect": "Allow",
            "Action": [
                "mediapackage-vod:CreateAsset",
                "mediapackage-vod:CreatePackagingConfiguration",
                "mediapackage-vod:CreatePackagingGroup",
                "mediapackage-vod:DeleteAsset",
                "mediapackage-vod:DeletePackagingConfiguration",
                "mediapackage-vod:DeletePackagingGroup",
                "mediapackage-vod:DescribeAsset",
                "mediapackage-vod:DescribePackagingConfiguration",
                "mediapackage-vod:DescribePackagingGroup",
                "mediapackage-vod:ListAssets",
                "mediapackage-vod:ListPackagingConfigurations",
                "mediapackage-vod:ListPackagingGroups",
                "mediapackage-vod:ListTagsForResource",
                "mediapackage-vod:TagResource",
                "mediapackage-vod:UntagResource",
                "mediapackage-vod:UpdatePackagingGroup"
            ],
            "Resource": [
                "arn:aws:mediapackage-vod:<Region>:<Account>:<ResourceType>/<ResourceName>"
            ],
            "Condition": {
                "SomeCondition-hyYQm": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-ZDemc": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-YvSPi": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Device Farm",
            "Effect": "Allow",
            "Action": [
                "devicefarm:CreateDevicePool",
                "devicefarm:CreateInstanceProfile",
                "devicefarm:CreateNetworkProfile",
                "devicefarm:CreateProject",
                "devicefarm:CreateRemoteAccessSession",
                "devicefarm:CreateTestGridProject",
                "devicefarm:CreateTestGridUrl",
                "devicefarm:CreateUpload",
                "devicefarm:CreateVPCEConfiguration",
                "devicefarm:DeleteDevicePool",
                "devicefarm:DeleteInstanceProfile",
                "devicefarm:DeleteNetworkProfile",
                "devicefarm:DeleteProject",
                "devicefarm:DeleteRemoteAccessSession",
                "devicefarm:DeleteRun",
                "devicefarm:DeleteTestGridProject",
                "devicefarm:DeleteUpload",
                "devicefarm:DeleteVPCEConfiguration",
                "devicefarm:GetAccountSettings",
                "devicefarm:GetDevice",
                "devicefarm:GetDeviceInstance",
                "devicefarm:GetDevicePool",
                "devicefarm:GetDevicePoolCompatibility",
                "devicefarm:GetInstanceProfile",
                "devicefarm:GetJob",
                "devicefarm:GetNetworkProfile",
                "devicefarm:GetOfferingStatus",
                "devicefarm:GetProject",
                "devicefarm:GetRemoteAccessSession",
                "devicefarm:GetRun",
                "devicefarm:GetSuite",
                "devicefarm:GetTest",
                "devicefarm:GetTestGridProject",
                "devicefarm:GetTestGridSession",
                "devicefarm:GetUpload",
                "devicefarm:GetVPCEConfiguration",
                "devicefarm:InstallToRemoteAccessSession",
                "devicefarm:ListArtifacts",
                "devicefarm:ListDeviceInstances",
                "devicefarm:ListDevicePools",
                "devicefarm:ListDevices",
                "devicefarm:ListInstanceProfiles",
                "devicefarm:ListJobs",
                "devicefarm:ListNetworkProfiles",
                "devicefarm:ListOfferingPromotions",
                "devicefarm:ListOfferingTransactions",
                "devicefarm:ListOfferings",
                "devicefarm:ListProjects",
                "devicefarm:ListRemoteAccessSessions",
                "devicefarm:ListRuns",
                "devicefarm:ListSamples",
                "devicefarm:ListSuites",
                "devicefarm:ListTagsForResource",
                "devicefarm:ListTestGridProjects",
                "devicefarm:ListTestGridSessionActions",
                "devicefarm:ListTestGridSessionArtifacts",
                "devicefarm:ListTestGridSessions",
                "devicefarm:ListTests",
                "devicefarm:ListUniqueProblems",
                "devicefarm:ListUploads",
                "devicefarm:ListVPCEConfigurations",
                "devicefarm:PurchaseOffering",
                "devicefarm:RenewOffering",
                "devicefarm:ScheduleRun",
                "devicefarm:StopJob",
                "devicefarm:StopRemoteAccessSession",
                "devicefarm:StopRun",
                "devicefarm:TagResource",
                "devicefarm:UntagResource",
                "devicefarm:UpdateDeviceInstance",
                "devicefarm:UpdateDevicePool",
                "devicefarm:UpdateInstanceProfile",
                "devicefarm:UpdateNetworkProfile",
                "devicefarm:UpdateProject",
                "devicefarm:UpdateTestGridProject",
                "devicefarm:UpdateUpload",
                "devicefarm:UpdateVPCEConfiguration"
            ],
            "Resource": [
                "arn:aws:devicefarm:<region>:<account-id>:<resource-type>:<resource-id>"
            ],
            "Condition": {
                "SomeCondition-YvCjW": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-ehPDG": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-kvuUy": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Ground Station",
            "Effect": "Allow",
            "Action": [
                "groundstation:CancelContact",
                "groundstation:CreateConfig",
                "groundstation:CreateDataflowEndpointGroup",
                "groundstation:CreateMissionProfile",
                "groundstation:DeleteConfig",
                "groundstation:DeleteDataflowEndpointGroup",
                "groundstation:DeleteMissionProfile",
                "groundstation:DescribeContact",
                "groundstation:GetConfig",
                "groundstation:GetDataflowEndpointGroup",
                "groundstation:GetMinuteUsage",
                "groundstation:GetMissionProfile",
                "groundstation:GetSatellite",
                "groundstation:ListConfigs",
                "groundstation:ListContacts",
                "groundstation:ListDataflowEndpointGroups",
                "groundstation:ListGroundStations",
                "groundstation:ListMissionProfiles",
                "groundstation:ListSatellites",
                "groundstation:ListTagsForResource",
                "groundstation:ReserveContact",
                "groundstation:TagResource",
                "groundstation:UntagResource",
                "groundstation:UpdateConfig",
                "groundstation:UpdateMissionProfile"
            ],
            "Resource": [
                "arn:aws:groundstation:<region>:<accountID>:<resourceType>/<resourceId>"
            ],
            "Condition": {
                "SomeCondition-mrXul": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-bwyVi": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-VgGuy": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-XRrjL": {
                    "groundstation:configId": "...some value..."
                },
                "SomeCondition-LBKYI": {
                    "groundstation:configType": "...some value..."
                },
                "SomeCondition-xLACg": {
                    "groundstation:contactId": "...some value..."
                },
                "SomeCondition-pLWGK": {
                    "groundstation:dataflowEndpointGroupId": "...some value..."
                },
                "SomeCondition-zAefM": {
                    "groundstation:groundStationId": "...some value..."
                },
                "SomeCondition-YgaKP": {
                    "groundstation:missionProfileId": "...some value..."
                },
                "SomeCondition-rHUAQ": {
                    "groundstation:satelliteId": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon DevOps Guru",
            "Effect": "Allow",
            "Action": [
                "devops-guru:AddNotificationChannel",
                "devops-guru:DescribeAccountHealth",
                "devops-guru:DescribeAccountOverview",
                "devops-guru:DescribeAnomaly",
                "devops-guru:DescribeFeedback",
                "devops-guru:DescribeInsight",
                "devops-guru:DescribeResourceCollectionHealth",
                "devops-guru:DescribeServiceIntegration",
                "devops-guru:GetCostEstimation",
                "devops-guru:GetResourceCollection",
                "devops-guru:ListAnomaliesForInsight",
                "devops-guru:ListEvents",
                "devops-guru:ListInsights",
                "devops-guru:ListNotificationChannels",
                "devops-guru:ListRecommendations",
                "devops-guru:PutFeedback",
                "devops-guru:RemoveNotificationChannel",
                "devops-guru:SearchInsights",
                "devops-guru:StartCostEstimation",
                "devops-guru:UpdateResourceCollection",
                "devops-guru:UpdateServiceIntegration"
            ],
            "Resource": [
                "arn:aws:devops-guru:<region>:<account-id>:"
            ]
        },
        {
            "Sid": "AWS Signer",
            "Effect": "Allow",
            "Action": [
                "signer:AddProfilePermission",
                "signer:CancelSigningProfile",
                "signer:DescribeSigningJob",
                "signer:GetSigningPlatform",
                "signer:GetSigningProfile",
                "signer:ListProfilePermissions",
                "signer:ListSigningJobs",
                "signer:ListSigningPlatforms",
                "signer:ListSigningProfiles",
                "signer:ListTagsForResource",
                "signer:PutSigningProfile",
                "signer:RemoveProfilePermission",
                "signer:RevokeSignature",
                "signer:RevokeSigningProfile",
                "signer:StartSigningJob",
                "signer:TagResource",
                "signer:UntagResource"
            ],
            "Resource": [
                "arn:aws:signer:<region>::<signer_resource_path>"
            ],
            "Condition": {
                "SomeCondition-LmsVd": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-VKetl": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-hBKWa": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-PZDEO": {
                    "signer:ProfileVersion": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Purchase Orders Console",
            "Effect": "Allow",
            "Action": [
                "purchase-orders:ModifyPurchaseOrders",
                "purchase-orders:ViewPurchaseOrders"
            ]
        },
        {
            "Sid": "AWS Resource Groups",
            "Effect": "Allow",
            "Action": [
                "resource-groups:CreateGroup",
                "resource-groups:DeleteGroup",
                "resource-groups:GetGroup",
                "resource-groups:GetGroupConfiguration",
                "resource-groups:GetGroupQuery",
                "resource-groups:GetTags",
                "resource-groups:GroupResources",
                "resource-groups:ListGroupResources",
                "resource-groups:ListGroups",
                "resource-groups:PutGroupConfiguration",
                "resource-groups:PutGroupPolicy",
                "resource-groups:SearchResources",
                "resource-groups:Tag",
                "resource-groups:UngroupResources",
                "resource-groups:Untag",
                "resource-groups:UpdateGroup",
                "resource-groups:UpdateGroupQuery"
            ],
            "Resource": [
                "arn:aws:<serviceName>:<region>:<account>:<resourceType>/<resourceName>"
            ],
            "Condition": {
                "SomeCondition-wEugs": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-LVXny": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-VRfBs": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Honeycode",
            "Effect": "Allow",
            "Action": [
                "honeycode:ApproveTeamAssociation",
                "honeycode:BatchCreateTableRows",
                "honeycode:BatchDeleteTableRows",
                "honeycode:BatchUpdateTableRows",
                "honeycode:BatchUpsertTableRows",
                "honeycode:CreateTeam",
                "honeycode:CreateTenant",
                "honeycode:DeregisterGroups",
                "honeycode:DescribeTableDataImportJob",
                "honeycode:DescribeTeam",
                "honeycode:GetScreenData",
                "honeycode:InvokeScreenAutomation",
                "honeycode:ListDomains",
                "honeycode:ListGroups",
                "honeycode:ListTableColumns",
                "honeycode:ListTableRows",
                "honeycode:ListTables",
                "honeycode:ListTeamAssociations",
                "honeycode:ListTenants",
                "honeycode:QueryTableRows",
                "honeycode:RegisterDomainForVerification",
                "honeycode:RegisterGroups",
                "honeycode:RejectTeamAssociation",
                "honeycode:RestartDomainVerification",
                "honeycode:StartTableDataImportJob",
                "honeycode:UpdateTeam"
            ],
            "Resource": [
                "arn:aws:honeycode:<region>:<account-id>:<resource-type>:<resource_path>"
            ]
        },
        {
            "Sid": "AWS IQ",
            "Effect": "Allow",
            "Action": [
                "iq:CreateProject"
            ]
        },
        {
            "Sid": "Amazon Elastic Container Registry Public",
            "Effect": "Allow",
            "Action": [
                "ecr-public:BatchCheckLayerAvailability",
                "ecr-public:BatchDeleteImage",
                "ecr-public:CompleteLayerUpload",
                "ecr-public:CreateRepository",
                "ecr-public:DeleteRepository",
                "ecr-public:DeleteRepositoryPolicy",
                "ecr-public:DescribeImageTags",
                "ecr-public:DescribeImages",
                "ecr-public:DescribeRegistries",
                "ecr-public:DescribeRepositories",
                "ecr-public:GetAuthorizationToken",
                "ecr-public:GetRegistryCatalogData",
                "ecr-public:GetRepositoryCatalogData",
                "ecr-public:GetRepositoryPolicy",
                "ecr-public:InitiateLayerUpload",
                "ecr-public:ListTagsForResource",
                "ecr-public:PutImage",
                "ecr-public:PutRegistryCatalogData",
                "ecr-public:PutRepositoryCatalogData",
                "ecr-public:SetRepositoryPolicy",
                "ecr-public:TagResource",
                "ecr-public:UntagResource",
                "ecr-public:UploadLayerPart"
            ],
            "Resource": [
                "arn:aws:ecr-public::<account_id>:<repository_or_registry>/<repository_name_or_registry_id>"
            ],
            "Condition": {
                "SomeCondition-QEhfu": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-odIet": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-Zswzb": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-DKCWY": {
                    "ecr-public:ResourceTag/${TagKey}": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Snow Device Management",
            "Effect": "Allow",
            "Action": [
                "snow-device-management:CancelTask",
                "snow-device-management:CreateTask",
                "snow-device-management:DescribeDevice",
                "snow-device-management:DescribeDeviceEc2Instances",
                "snow-device-management:DescribeExecution",
                "snow-device-management:DescribeTask",
                "snow-device-management:ListDeviceResources",
                "snow-device-management:ListDevices",
                "snow-device-management:ListExecutions",
                "snow-device-management:ListTagsForResource",
                "snow-device-management:ListTasks",
                "snow-device-management:TagResource",
                "snow-device-management:UntagResource"
            ],
            "Resource": [
                "arn:aws:snow-device-management:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-esbgQ": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-qHgcS": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-ROQqE": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon API Gateway Management V2",
            "Effect": "Allow",
            "Action": [
                "apigateway:DELETE",
                "apigateway:GET",
                "apigateway:PATCH",
                "apigateway:POST",
                "apigateway:PUT"
            ],
            "Resource": [
                "arn:aws:apigateway:${Region}::${ApiGatewayResourcePath}"
            ],
            "Condition": {
                "SomeCondition-vgyCE": {
                    "apigateway:Request/AccessLoggingDestination": "...some value..."
                },
                "SomeCondition-pFzdh": {
                    "apigateway:Request/AccessLoggingFormat": "...some value..."
                },
                "SomeCondition-MdrWX": {
                    "apigateway:Request/ApiKeyRequired": "...some value..."
                },
                "SomeCondition-RstnL": {
                    "apigateway:Request/ApiName": "...some value..."
                },
                "SomeCondition-bvfNJ": {
                    "apigateway:Request/AuthorizerType": "...some value..."
                },
                "SomeCondition-naFrp": {
                    "apigateway:Request/AuthorizerUri": "...some value..."
                },
                "SomeCondition-XyPfM": {
                    "apigateway:Request/DisableExecuteApiEndpoint": "...some value..."
                },
                "SomeCondition-eVQng": {
                    "apigateway:Request/EndpointType": "...some value..."
                },
                "SomeCondition-WRhHJ": {
                    "apigateway:Request/MtlsTrustStoreUri": "...some value..."
                },
                "SomeCondition-Feisc": {
                    "apigateway:Request/MtlsTrustStoreVersion": "...some value..."
                },
                "SomeCondition-bXEoj": {
                    "apigateway:Request/RouteAuthorizationType": "...some value..."
                },
                "SomeCondition-LlTcH": {
                    "apigateway:Request/SecurityPolicy": "...some value..."
                },
                "SomeCondition-TjLOb": {
                    "apigateway:Request/StageName": "...some value..."
                },
                "SomeCondition-hslTB": {
                    "apigateway:Resource/AccessLoggingDestination": "...some value..."
                },
                "SomeCondition-rctkv": {
                    "apigateway:Resource/AccessLoggingFormat": "...some value..."
                },
                "SomeCondition-xaskB": {
                    "apigateway:Resource/ApiKeyRequired": "...some value..."
                },
                "SomeCondition-bsYzB": {
                    "apigateway:Resource/ApiName": "...some value..."
                },
                "SomeCondition-MEIqs": {
                    "apigateway:Resource/AuthorizerType": "...some value..."
                },
                "SomeCondition-rWQeC": {
                    "apigateway:Resource/AuthorizerUri": "...some value..."
                },
                "SomeCondition-oTmqx": {
                    "apigateway:Resource/DisableExecuteApiEndpoint": "...some value..."
                },
                "SomeCondition-lvjYw": {
                    "apigateway:Resource/EndpointType": "...some value..."
                },
                "SomeCondition-XNaSf": {
                    "apigateway:Resource/MtlsTrustStoreUri": "...some value..."
                },
                "SomeCondition-VrSaH": {
                    "apigateway:Resource/MtlsTrustStoreVersion": "...some value..."
                },
                "SomeCondition-Nnldg": {
                    "apigateway:Resource/RouteAuthorizationType": "...some value..."
                },
                "SomeCondition-rYZmA": {
                    "apigateway:Resource/SecurityPolicy": "...some value..."
                },
                "SomeCondition-RhrCf": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-wzVEU": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-rUdSJ": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon API Gateway Management",
            "Effect": "Allow",
            "Action": [
                "apigateway:AddCertificateToDomain",
                "apigateway:DELETE",
                "apigateway:GET",
                "apigateway:PATCH",
                "apigateway:POST",
                "apigateway:PUT",
                "apigateway:RemoveCertificateFromDomain",
                "apigateway:SetWebACL",
                "apigateway:UpdateRestApiPolicy"
            ],
            "Resource": [
                "arn:aws:apigateway:${Region}::${ApiGatewayResourcePath}"
            ],
            "Condition": {
                "SomeCondition-jypoW": {
                    "apigateway:Request/AccessLoggingDestination": "...some value..."
                },
                "SomeCondition-hkRSc": {
                    "apigateway:Request/AccessLoggingFormat": "...some value..."
                },
                "SomeCondition-faNrR": {
                    "apigateway:Request/ApiKeyRequired": "...some value..."
                },
                "SomeCondition-kASdF": {
                    "apigateway:Request/ApiName": "...some value..."
                },
                "SomeCondition-MeYmb": {
                    "apigateway:Request/AuthorizerType": "...some value..."
                },
                "SomeCondition-gOYpC": {
                    "apigateway:Request/AuthorizerUri": "...some value..."
                },
                "SomeCondition-QEXVx": {
                    "apigateway:Request/DisableExecuteApiEndpoint": "...some value..."
                },
                "SomeCondition-ehAHg": {
                    "apigateway:Request/EndpointType": "...some value..."
                },
                "SomeCondition-wEarX": {
                    "apigateway:Request/MtlsTrustStoreUri": "...some value..."
                },
                "SomeCondition-HNtxp": {
                    "apigateway:Request/MtlsTrustStoreVersion": "...some value..."
                },
                "SomeCondition-vFmKx": {
                    "apigateway:Request/RouteAuthorizationType": "...some value..."
                },
                "SomeCondition-KfuJB": {
                    "apigateway:Request/SecurityPolicy": "...some value..."
                },
                "SomeCondition-HUjet": {
                    "apigateway:Request/StageName": "...some value..."
                },
                "SomeCondition-hCxcM": {
                    "apigateway:Resource/AccessLoggingDestination": "...some value..."
                },
                "SomeCondition-qlBfh": {
                    "apigateway:Resource/AccessLoggingFormat": "...some value..."
                },
                "SomeCondition-qNpJy": {
                    "apigateway:Resource/ApiKeyRequired": "...some value..."
                },
                "SomeCondition-gzMJA": {
                    "apigateway:Resource/ApiName": "...some value..."
                },
                "SomeCondition-RbqeE": {
                    "apigateway:Resource/AuthorizerType": "...some value..."
                },
                "SomeCondition-BvqAW": {
                    "apigateway:Resource/AuthorizerUri": "...some value..."
                },
                "SomeCondition-AemyF": {
                    "apigateway:Resource/DisableExecuteApiEndpoint": "...some value..."
                },
                "SomeCondition-CeRVm": {
                    "apigateway:Resource/EndpointType": "...some value..."
                },
                "SomeCondition-lCbWJ": {
                    "apigateway:Resource/MtlsTrustStoreUri": "...some value..."
                },
                "SomeCondition-YkziX": {
                    "apigateway:Resource/MtlsTrustStoreVersion": "...some value..."
                },
                "SomeCondition-BIRHt": {
                    "apigateway:Resource/RouteAuthorizationType": "...some value..."
                },
                "SomeCondition-hLTzF": {
                    "apigateway:Resource/SecurityPolicy": "...some value..."
                },
                "SomeCondition-gGzxE": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-bfNAS": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-ZjueI": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Apache Kafka APIs for Amazon MSK clusters",
            "Effect": "Allow",
            "Action": [
                "kafka-cluster:AlterCluster",
                "kafka-cluster:AlterClusterDynamicConfiguration",
                "kafka-cluster:AlterGroup",
                "kafka-cluster:AlterTopic",
                "kafka-cluster:AlterTopicDynamicConfiguration",
                "kafka-cluster:AlterTransactionalId",
                "kafka-cluster:Connect",
                "kafka-cluster:CreateTopic",
                "kafka-cluster:DeleteGroup",
                "kafka-cluster:DeleteTopic",
                "kafka-cluster:DescribeCluster",
                "kafka-cluster:DescribeClusterDynamicConfiguration",
                "kafka-cluster:DescribeGroup",
                "kafka-cluster:DescribeTopic",
                "kafka-cluster:DescribeTopicDynamicConfiguration",
                "kafka-cluster:DescribeTransactionalId",
                "kafka-cluster:ReadData",
                "kafka-cluster:WriteData",
                "kafka-cluster:WriteDataIdempotently"
            ],
            "Resource": [
                "arn:aws:kafka:<region>:<account>:<ResourceType>/<ResourceDescriptor>"
            ],
            "Condition": {
                "SomeCondition-ldnZp": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Elemental Appliances and Software Activation Service",
            "Effect": "Allow",
            "Action": [
                "elemental-activations:CompleteAccountRegistration",
                "elemental-activations:CompleteFileUpload",
                "elemental-activations:DownloadSoftware",
                "elemental-activations:GenerateLicenses",
                "elemental-activations:GetActivation",
                "elemental-activations:ListTagsForResource",
                "elemental-activations:StartAccountRegistration",
                "elemental-activations:StartFileUpload",
                "elemental-activations:TagResource",
                "elemental-activations:UntagResource"
            ],
            "Resource": [
                "arn:aws:elemental-activations:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-wRtIe": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-WvSbY": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-owjfD": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Managed Service for Grafana",
            "Effect": "Allow",
            "Action": [
                "grafana:AssociateLicense",
                "grafana:CreateWorkspace",
                "grafana:DeleteWorkspace",
                "grafana:DescribeWorkspace",
                "grafana:DisassociateLicense",
                "grafana:ListPermissions",
                "grafana:ListWorkspaces",
                "grafana:UpdatePermissions",
                "grafana:UpdateWorkspace"
            ],
            "Resource": [
                "arn:aws:grafana:<region>:<account-id>:/<resource-type>/<resource-id>"
            ]
        },
        {
            "Sid": "AWS App Mesh",
            "Effect": "Allow",
            "Action": [
                "appmesh:CreateGatewayRoute",
                "appmesh:CreateMesh",
                "appmesh:CreateRoute",
                "appmesh:CreateVirtualGateway",
                "appmesh:CreateVirtualNode",
                "appmesh:CreateVirtualRouter",
                "appmesh:CreateVirtualService",
                "appmesh:DeleteGatewayRoute",
                "appmesh:DeleteMesh",
                "appmesh:DeleteRoute",
                "appmesh:DeleteVirtualGateway",
                "appmesh:DeleteVirtualNode",
                "appmesh:DeleteVirtualRouter",
                "appmesh:DeleteVirtualService",
                "appmesh:DescribeGatewayRoute",
                "appmesh:DescribeMesh",
                "appmesh:DescribeRoute",
                "appmesh:DescribeVirtualGateway",
                "appmesh:DescribeVirtualNode",
                "appmesh:DescribeVirtualRouter",
                "appmesh:DescribeVirtualService",
                "appmesh:ListGatewayRoutes",
                "appmesh:ListMeshes",
                "appmesh:ListRoutes",
                "appmesh:ListTagsForResource",
                "appmesh:ListVirtualGateways",
                "appmesh:ListVirtualNodes",
                "appmesh:ListVirtualRouters",
                "appmesh:ListVirtualServices",
                "appmesh:StreamAggregatedResources",
                "appmesh:TagResource",
                "appmesh:UntagResource",
                "appmesh:UpdateGatewayRoute",
                "appmesh:UpdateMesh",
                "appmesh:UpdateRoute",
                "appmesh:UpdateVirtualGateway",
                "appmesh:UpdateVirtualNode",
                "appmesh:UpdateVirtualRouter",
                "appmesh:UpdateVirtualService"
            ],
            "Resource": [
                "arn:${Partition}:appmesh:${Region}:${Account}:${ResourceType}/${ResourceName}"
            ],
            "Condition": {
                "SomeCondition-AIVbG": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-DXSOn": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-JOoLk": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Database Query Metadata Service",
            "Effect": "Allow",
            "Action": [
                "dbqms:CreateFavoriteQuery",
                "dbqms:CreateQueryHistory",
                "dbqms:CreateTab",
                "dbqms:DeleteFavoriteQueries",
                "dbqms:DeleteQueryHistory",
                "dbqms:DeleteTab",
                "dbqms:DescribeFavoriteQueries",
                "dbqms:DescribeQueryHistory",
                "dbqms:DescribeTabs",
                "dbqms:GetQueryString",
                "dbqms:UpdateFavoriteQuery",
                "dbqms:UpdateQueryHistory",
                "dbqms:UpdateTab"
            ]
        },
        {
            "Sid": "Amazon Managed Streaming for Apache Kafka",
            "Effect": "Allow",
            "Action": [
                "kafka:BatchAssociateScramSecret",
                "kafka:BatchDisassociateScramSecret",
                "kafka:CreateCluster",
                "kafka:CreateConfiguration",
                "kafka:DeleteCluster",
                "kafka:DeleteConfiguration",
                "kafka:DescribeCluster",
                "kafka:DescribeClusterOperation",
                "kafka:DescribeConfiguration",
                "kafka:DescribeConfigurationRevision",
                "kafka:GetBootstrapBrokers",
                "kafka:GetCompatibleKafkaVersions",
                "kafka:ListClusterOperations",
                "kafka:ListClusters",
                "kafka:ListConfigurationRevisions",
                "kafka:ListConfigurations",
                "kafka:ListKafkaVersions",
                "kafka:ListNodes",
                "kafka:ListScramSecrets",
                "kafka:ListTagsForResource",
                "kafka:RebootBroker",
                "kafka:TagResource",
                "kafka:UntagResource",
                "kafka:UpdateBrokerCount",
                "kafka:UpdateBrokerStorage",
                "kafka:UpdateBrokerType",
                "kafka:UpdateClusterConfiguration",
                "kafka:UpdateClusterKafkaVersion",
                "kafka:UpdateConfiguration",
                "kafka:UpdateMonitoring"
            ],
            "Resource": [
                "arn:aws:kafka:<region>:<account>:<resourceType>/<resourceName>/<UUID>"
            ],
            "Condition": {
                "SomeCondition-TEukD": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-CQnAh": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-iRJOe": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon CodeGuru Reviewer",
            "Effect": "Allow",
            "Action": [
                "codeguru-reviewer:AssociateRepository",
                "codeguru-reviewer:CreateCodeReview",
                "codeguru-reviewer:CreateConnectionToken",
                "codeguru-reviewer:DescribeCodeReview",
                "codeguru-reviewer:DescribeRecommendationFeedback",
                "codeguru-reviewer:DescribeRepositoryAssociation",
                "codeguru-reviewer:DisassociateRepository",
                "codeguru-reviewer:GetMetricsData",
                "codeguru-reviewer:ListCodeReviews",
                "codeguru-reviewer:ListRecommendationFeedback",
                "codeguru-reviewer:ListRecommendations",
                "codeguru-reviewer:ListRepositoryAssociations",
                "codeguru-reviewer:ListTagsForResource",
                "codeguru-reviewer:ListThirdPartyRepositories",
                "codeguru-reviewer:PutRecommendationFeedback",
                "codeguru-reviewer:TagResource",
                "codeguru-reviewer:UnTagResource"
            ],
            "Resource": [
                "arn:aws:codeguru-reviewer:<region>:<account-id>:<resource-type>:<resource_name>"
            ],
            "Condition": {
                "SomeCondition-OQsym": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-iLZKu": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-WwOAZ": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon MemoryDB",
            "Effect": "Allow",
            "Action": [
                "memorydb:BatchUpdateClusters",
                "memorydb:CopySnapshot",
                "memorydb:CreateAcl",
                "memorydb:CreateCluster",
                "memorydb:CreateParameterGroup",
                "memorydb:CreateSnapshot",
                "memorydb:CreateSubnetGroup",
                "memorydb:CreateUser",
                "memorydb:DeleteAcl",
                "memorydb:DeleteCluster",
                "memorydb:DeleteParameterGroup",
                "memorydb:DeleteSnapshot",
                "memorydb:DeleteSubnetGroup",
                "memorydb:DeleteUser",
                "memorydb:DescribeAcls",
                "memorydb:DescribeClusters",
                "memorydb:DescribeEngineVersions",
                "memorydb:DescribeEvents",
                "memorydb:DescribeParameterGroups",
                "memorydb:DescribeParameters",
                "memorydb:DescribeServiceUpdates",
                "memorydb:DescribeSnapshots",
                "memorydb:DescribeSubnetGroups",
                "memorydb:DescribeUsers",
                "memorydb:FailoverShard",
                "memorydb:ListNodeTypeUpdates",
                "memorydb:ListTags",
                "memorydb:ResetParameterGroup",
                "memorydb:TagResource",
                "memorydb:UntagResource",
                "memorydb:UpdateAcl",
                "memorydb:UpdateCluster",
                "memorydb:UpdateParameterGroup",
                "memorydb:UpdateSubnetGroup",
                "memorydb:UpdateUser"
            ],
            "Resource": [
                "arn:<partition>:memorydb:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-vocJr": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-lbgxF": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-WIPog": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Pinpoint SMS and Voice Service",
            "Effect": "Allow",
            "Action": [
                "sms-voice:CreateConfigurationSet",
                "sms-voice:CreateConfigurationSetEventDestination",
                "sms-voice:DeleteConfigurationSet",
                "sms-voice:DeleteConfigurationSetEventDestination",
                "sms-voice:GetConfigurationSetEventDestinations",
                "sms-voice:ListConfigurationSets",
                "sms-voice:SendVoiceMessage",
                "sms-voice:UpdateConfigurationSetEventDestination"
            ]
        },
        {
            "Sid": "Amazon CloudWatch",
            "Effect": "Allow",
            "Action": [
                "cloudwatch:DeleteAlarms",
                "cloudwatch:DeleteAnomalyDetector",
                "cloudwatch:DeleteDashboards",
                "cloudwatch:DeleteInsightRules",
                "cloudwatch:DeleteMetricStream",
                "cloudwatch:DescribeAlarmHistory",
                "cloudwatch:DescribeAlarms",
                "cloudwatch:DescribeAlarmsForMetric",
                "cloudwatch:DescribeAnomalyDetectors",
                "cloudwatch:DescribeInsightRules",
                "cloudwatch:DisableAlarmActions",
                "cloudwatch:DisableInsightRules",
                "cloudwatch:EnableAlarmActions",
                "cloudwatch:EnableInsightRules",
                "cloudwatch:GetDashboard",
                "cloudwatch:GetInsightRuleReport",
                "cloudwatch:GetMetricData",
                "cloudwatch:GetMetricStatistics",
                "cloudwatch:GetMetricStream",
                "cloudwatch:GetMetricWidgetImage",
                "cloudwatch:ListDashboards",
                "cloudwatch:ListMetricStreams",
                "cloudwatch:ListMetrics",
                "cloudwatch:ListTagsForResource",
                "cloudwatch:PutAnomalyDetector",
                "cloudwatch:PutCompositeAlarm",
                "cloudwatch:PutDashboard",
                "cloudwatch:PutInsightRule",
                "cloudwatch:PutMetricAlarm",
                "cloudwatch:PutMetricData",
                "cloudwatch:PutMetricStream",
                "cloudwatch:SetAlarmState",
                "cloudwatch:StartMetricStreams",
                "cloudwatch:StopMetricStreams",
                "cloudwatch:TagResource",
                "cloudwatch:UntagResource"
            ],
            "Resource": [
                "arn:${Partition}:cloudwatch:${Region}:${Account}:${ResourceType}/${ResourcePath}"
            ],
            "Condition": {
                "SomeCondition-fyMZO": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-XtduW": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-eZnRi": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-zaHNF": {
                    "cloudwatch:AlarmActions": "...some value..."
                },
                "SomeCondition-eiJSy": {
                    "cloudwatch:namespace": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon EC2 Auto Scaling",
            "Effect": "Allow",
            "Action": [
                "autoscaling:AttachInstances",
                "autoscaling:AttachLoadBalancerTargetGroups",
                "autoscaling:AttachLoadBalancers",
                "autoscaling:BatchDeleteScheduledAction",
                "autoscaling:BatchPutScheduledUpdateGroupAction",
                "autoscaling:CancelInstanceRefresh",
                "autoscaling:CompleteLifecycleAction",
                "autoscaling:CreateAutoScalingGroup",
                "autoscaling:CreateLaunchConfiguration",
                "autoscaling:CreateOrUpdateTags",
                "autoscaling:DeleteAutoScalingGroup",
                "autoscaling:DeleteLaunchConfiguration",
                "autoscaling:DeleteLifecycleHook",
                "autoscaling:DeleteNotificationConfiguration",
                "autoscaling:DeletePolicy",
                "autoscaling:DeleteScheduledAction",
                "autoscaling:DeleteTags",
                "autoscaling:DeleteWarmPool",
                "autoscaling:DescribeAccountLimits",
                "autoscaling:DescribeAdjustmentTypes",
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeAutoScalingNotificationTypes",
                "autoscaling:DescribeInstanceRefreshes",
                "autoscaling:DescribeLaunchConfigurations",
                "autoscaling:DescribeLifecycleHookTypes",
                "autoscaling:DescribeLifecycleHooks",
                "autoscaling:DescribeLoadBalancerTargetGroups",
                "autoscaling:DescribeLoadBalancers",
                "autoscaling:DescribeMetricCollectionTypes",
                "autoscaling:DescribeNotificationConfigurations",
                "autoscaling:DescribePolicies",
                "autoscaling:DescribeScalingActivities",
                "autoscaling:DescribeScalingProcessTypes",
                "autoscaling:DescribeScheduledActions",
                "autoscaling:DescribeTags",
                "autoscaling:DescribeTerminationPolicyTypes",
                "autoscaling:DescribeWarmPool",
                "autoscaling:DetachInstances",
                "autoscaling:DetachLoadBalancerTargetGroups",
                "autoscaling:DetachLoadBalancers",
                "autoscaling:DisableMetricsCollection",
                "autoscaling:EnableMetricsCollection",
                "autoscaling:EnterStandby",
                "autoscaling:ExecutePolicy",
                "autoscaling:ExitStandby",
                "autoscaling:PutLifecycleHook",
                "autoscaling:PutNotificationConfiguration",
                "autoscaling:PutScalingPolicy",
                "autoscaling:PutScheduledUpdateGroupAction",
                "autoscaling:PutWarmPool",
                "autoscaling:RecordLifecycleActionHeartbeat",
                "autoscaling:ResumeProcesses",
                "autoscaling:SetDesiredCapacity",
                "autoscaling:SetInstanceHealth",
                "autoscaling:SetInstanceProtection",
                "autoscaling:StartInstanceRefresh",
                "autoscaling:SuspendProcesses",
                "autoscaling:TerminateInstanceInAutoScalingGroup",
                "autoscaling:UpdateAutoScalingGroup"
            ],
            "Resource": [
                "arn:${Partition}:autoscaling:<region>:<account>:<relative-id>"
            ],
            "Condition": {
                "SomeCondition-tfZCm": {
                    "autoscaling:ImageId": "...some value..."
                },
                "SomeCondition-qAvJU": {
                    "autoscaling:InstanceType": "...some value..."
                },
                "SomeCondition-IOHrc": {
                    "autoscaling:InstanceTypes": "...some value..."
                },
                "SomeCondition-IemBZ": {
                    "autoscaling:LaunchConfigurationName": "...some value..."
                },
                "SomeCondition-WPMaL": {
                    "autoscaling:LaunchTemplateVersionSpecified": "...some value..."
                },
                "SomeCondition-mniHT": {
                    "autoscaling:LoadBalancerNames": "...some value..."
                },
                "SomeCondition-ZucVr": {
                    "autoscaling:MaxSize": "...some value..."
                },
                "SomeCondition-TVwrt": {
                    "autoscaling:MetadataHttpEndpoint": "...some value..."
                },
                "SomeCondition-NelLI": {
                    "autoscaling:MetadataHttpPutResponseHopLimit": "...some value..."
                },
                "SomeCondition-ztQIO": {
                    "autoscaling:MetadataHttpTokens": "...some value..."
                },
                "SomeCondition-xsIGu": {
                    "autoscaling:MinSize": "...some value..."
                },
                "SomeCondition-GlbVt": {
                    "autoscaling:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-DWPzu": {
                    "autoscaling:SpotPrice": "...some value..."
                },
                "SomeCondition-ZpwSG": {
                    "autoscaling:TargetGroupARNs": "...some value..."
                },
                "SomeCondition-wiCyD": {
                    "autoscaling:VPCZoneIdentifiers": "...some value..."
                },
                "SomeCondition-XqZJp": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-XTfdr": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-ThOvB": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Snowball",
            "Effect": "Allow",
            "Action": [
                "snowball:CancelCluster",
                "snowball:CancelJob",
                "snowball:CreateAddress",
                "snowball:CreateCluster",
                "snowball:CreateJob",
                "snowball:CreateReturnShippingLabel",
                "snowball:DescribeAddress",
                "snowball:DescribeAddresses",
                "snowball:DescribeCluster",
                "snowball:DescribeJob",
                "snowball:DescribeReturnShippingLabel",
                "snowball:GetJobManifest",
                "snowball:GetJobUnlockCode",
                "snowball:GetSnowballUsage",
                "snowball:GetSoftwareUpdates",
                "snowball:ListClusterJobs",
                "snowball:ListClusters",
                "snowball:ListCompatibleImages",
                "snowball:ListJobs",
                "snowball:UpdateCluster",
                "snowball:UpdateJob",
                "snowball:UpdateJobShipmentState"
            ]
        },
        {
            "Sid": "AWS Shield",
            "Effect": "Allow",
            "Action": [
                "shield:AssociateDRTLogBucket",
                "shield:AssociateDRTRole",
                "shield:AssociateHealthCheck",
                "shield:AssociateProactiveEngagementDetails",
                "shield:CreateProtection",
                "shield:CreateProtectionGroup",
                "shield:CreateSubscription",
                "shield:DeleteProtection",
                "shield:DeleteProtectionGroup",
                "shield:DeleteSubscription",
                "shield:DescribeAttack",
                "shield:DescribeAttackStatistics",
                "shield:DescribeDRTAccess",
                "shield:DescribeEmergencyContactSettings",
                "shield:DescribeProtection",
                "shield:DescribeProtectionGroup",
                "shield:DescribeSubscription",
                "shield:DisableProactiveEngagement",
                "shield:DisassociateDRTLogBucket",
                "shield:DisassociateDRTRole",
                "shield:DisassociateHealthCheck",
                "shield:EnableProactiveEngagement",
                "shield:GetSubscriptionState",
                "shield:ListAttacks",
                "shield:ListProtectionGroups",
                "shield:ListProtections",
                "shield:ListResourcesInProtectionGroup",
                "shield:ListTagsForResource",
                "shield:TagResource",
                "shield:UntagResource",
                "shield:UpdateEmergencyContactSettings",
                "shield:UpdateProtectionGroup",
                "shield:UpdateSubscription"
            ],
            "Resource": [
                "arn:aws:shield::<account_ID>:<resource>/<resource_id>"
            ],
            "Condition": {
                "SomeCondition-UCPEZ": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-rIfvn": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-zJYWn": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Secrets Manager",
            "Effect": "Allow",
            "Action": [
                "secretsmanager:CancelRotateSecret",
                "secretsmanager:CreateSecret",
                "secretsmanager:DeleteResourcePolicy",
                "secretsmanager:DeleteSecret",
                "secretsmanager:DescribeSecret",
                "secretsmanager:GetRandomPassword",
                "secretsmanager:GetResourcePolicy",
                "secretsmanager:GetSecretValue",
                "secretsmanager:ListSecretVersionIds",
                "secretsmanager:ListSecrets",
                "secretsmanager:PutResourcePolicy",
                "secretsmanager:PutSecretValue",
                "secretsmanager:RemoveRegionsFromReplication",
                "secretsmanager:ReplicateSecretToRegions",
                "secretsmanager:RestoreSecret",
                "secretsmanager:RotateSecret",
                "secretsmanager:StopReplicationToReplica",
                "secretsmanager:TagResource",
                "secretsmanager:UntagResource",
                "secretsmanager:UpdateSecret",
                "secretsmanager:UpdateSecretVersionStage",
                "secretsmanager:ValidateResourcePolicy"
            ],
            "Resource": [
                "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}"
            ],
            "Condition": {
                "SomeCondition-UTAPl": {
                    "aws:RequestTag/tag-key": "...some value..."
                },
                "SomeCondition-virBg": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-gKslY": {
                    "secretsmanager:BlockPublicPolicy": "...some value..."
                },
                "SomeCondition-aqQCT": {
                    "secretsmanager:Description": "...some value..."
                },
                "SomeCondition-vQTKW": {
                    "secretsmanager:ForceDeleteWithoutRecovery": "...some value..."
                },
                "SomeCondition-ktJUM": {
                    "secretsmanager:KmsKeyId": "...some value..."
                },
                "SomeCondition-gQPfz": {
                    "secretsmanager:Name": "...some value..."
                },
                "SomeCondition-owPCG": {
                    "secretsmanager:RecoveryWindowInDays": "...some value..."
                },
                "SomeCondition-JuqVw": {
                    "secretsmanager:ResourceTag/tag-key": "...some value..."
                },
                "SomeCondition-NVguC": {
                    "secretsmanager:RotationLambdaARN": "...some value..."
                },
                "SomeCondition-lhbYu": {
                    "secretsmanager:SecretId": "...some value..."
                },
                "SomeCondition-rQZHs": {
                    "secretsmanager:SecretPrimaryRegion": "...some value..."
                },
                "SomeCondition-PyMOV": {
                    "secretsmanager:VersionId": "...some value..."
                },
                "SomeCondition-HbtpR": {
                    "secretsmanager:VersionStage": "...some value..."
                },
                "SomeCondition-GNzKU": {
                    "secretsmanager:resource/AllowRotationLambdaArn": "...some value..."
                }
            }
        },
        {
            "Sid": "Application Auto Scaling",
            "Effect": "Allow",
            "Action": [
                "application-autoscaling:DeleteScalingPolicy",
                "application-autoscaling:DeleteScheduledAction",
                "application-autoscaling:DeregisterScalableTarget",
                "application-autoscaling:DescribeScalableTargets",
                "application-autoscaling:DescribeScalingActivities",
                "application-autoscaling:DescribeScalingPolicies",
                "application-autoscaling:DescribeScheduledActions",
                "application-autoscaling:PutScalingPolicy",
                "application-autoscaling:PutScheduledAction",
                "application-autoscaling:RegisterScalableTarget"
            ]
        },
        {
            "Sid": "Amazon FSx",
            "Effect": "Allow",
            "Action": [
                "fsx:AssociateFileGateway",
                "fsx:AssociateFileSystemAliases",
                "fsx:CancelDataRepositoryTask",
                "fsx:CopyBackup",
                "fsx:CreateBackup",
                "fsx:CreateDataRepositoryTask",
                "fsx:CreateFileSystem",
                "fsx:CreateFileSystemFromBackup",
                "fsx:DeleteBackup",
                "fsx:DeleteFileSystem",
                "fsx:DescribeAssociatedFileGateways",
                "fsx:DescribeBackups",
                "fsx:DescribeDataRepositoryTasks",
                "fsx:DescribeFileSystemAliases",
                "fsx:DescribeFileSystems",
                "fsx:DisassociateFileGateway",
                "fsx:DisassociateFileSystemAliases",
                "fsx:ListTagsForResource",
                "fsx:ManageBackupPrincipalAssociations",
                "fsx:TagResource",
                "fsx:UntagResource",
                "fsx:UpdateFileSystem"
            ],
            "Resource": [
                "arn:${Partition}:fsx:${Region}:${Account}:${ResourceType}/${ResourcePath}"
            ],
            "Condition": {
                "SomeCondition-EtXvk": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-QJUZf": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-egEya": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-Donpz": {
                    "fsx:IsBackupCopyDestination": "...some value..."
                },
                "SomeCondition-tHfYL": {
                    "fsx:IsBackupCopySource": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Amplify",
            "Effect": "Allow",
            "Action": [
                "amplify:CreateApp",
                "amplify:CreateBackendEnvironment",
                "amplify:CreateBranch",
                "amplify:CreateDeployment",
                "amplify:CreateDomainAssociation",
                "amplify:CreateWebHook",
                "amplify:DeleteApp",
                "amplify:DeleteBackendEnvironment",
                "amplify:DeleteBranch",
                "amplify:DeleteDomainAssociation",
                "amplify:DeleteJob",
                "amplify:DeleteWebHook",
                "amplify:GenerateAccessLogs",
                "amplify:GetApp",
                "amplify:GetArtifactUrl",
                "amplify:GetBackendEnvironment",
                "amplify:GetBranch",
                "amplify:GetDomainAssociation",
                "amplify:GetJob",
                "amplify:GetWebHook",
                "amplify:ListApps",
                "amplify:ListArtifacts",
                "amplify:ListBackendEnvironments",
                "amplify:ListBranches",
                "amplify:ListDomainAssociations",
                "amplify:ListJobs",
                "amplify:ListTagsForResource",
                "amplify:ListWebHooks",
                "amplify:StartDeployment",
                "amplify:StartJob",
                "amplify:StopJob",
                "amplify:TagResource",
                "amplify:UntagResource",
                "amplify:UpdateApp",
                "amplify:UpdateBranch",
                "amplify:UpdateDomainAssociation",
                "amplify:UpdateWebHook"
            ],
            "Resource": [
                "arn:aws:amplify:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-RGuHs": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-GJPxY": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-XzKhI": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS App Mesh Preview",
            "Effect": "Allow",
            "Action": [
                "appmesh-preview:CreateGatewayRoute",
                "appmesh-preview:CreateMesh",
                "appmesh-preview:CreateRoute",
                "appmesh-preview:CreateVirtualGateway",
                "appmesh-preview:CreateVirtualNode",
                "appmesh-preview:CreateVirtualRouter",
                "appmesh-preview:CreateVirtualService",
                "appmesh-preview:DeleteGatewayRoute",
                "appmesh-preview:DeleteMesh",
                "appmesh-preview:DeleteRoute",
                "appmesh-preview:DeleteVirtualGateway",
                "appmesh-preview:DeleteVirtualNode",
                "appmesh-preview:DeleteVirtualRouter",
                "appmesh-preview:DeleteVirtualService",
                "appmesh-preview:DescribeGatewayRoute",
                "appmesh-preview:DescribeMesh",
                "appmesh-preview:DescribeRoute",
                "appmesh-preview:DescribeVirtualGateway",
                "appmesh-preview:DescribeVirtualNode",
                "appmesh-preview:DescribeVirtualRouter",
                "appmesh-preview:DescribeVirtualService",
                "appmesh-preview:ListGatewayRoutes",
                "appmesh-preview:ListMeshes",
                "appmesh-preview:ListRoutes",
                "appmesh-preview:ListVirtualGateways",
                "appmesh-preview:ListVirtualNodes",
                "appmesh-preview:ListVirtualRouters",
                "appmesh-preview:ListVirtualServices",
                "appmesh-preview:StreamAggregatedResources",
                "appmesh-preview:UpdateGatewayRoute",
                "appmesh-preview:UpdateMesh",
                "appmesh-preview:UpdateRoute",
                "appmesh-preview:UpdateVirtualGateway",
                "appmesh-preview:UpdateVirtualNode",
                "appmesh-preview:UpdateVirtualRouter",
                "appmesh-preview:UpdateVirtualService"
            ],
            "Resource": [
                "arn:${Partition}:appmesh-preview:${Region}:${Account}:${ResourceType}/${ResourceName}"
            ]
        },
        {
            "Sid": "Amazon Kinesis Video Streams",
            "Effect": "Allow",
            "Action": [
                "kinesisvideo:ConnectAsMaster",
                "kinesisvideo:ConnectAsViewer",
                "kinesisvideo:CreateSignalingChannel",
                "kinesisvideo:CreateStream",
                "kinesisvideo:DeleteSignalingChannel",
                "kinesisvideo:DeleteStream",
                "kinesisvideo:DescribeSignalingChannel",
                "kinesisvideo:DescribeStream",
                "kinesisvideo:GetClip",
                "kinesisvideo:GetDASHStreamingSessionURL",
                "kinesisvideo:GetDataEndpoint",
                "kinesisvideo:GetHLSStreamingSessionURL",
                "kinesisvideo:GetIceServerConfig",
                "kinesisvideo:GetMedia",
                "kinesisvideo:GetMediaForFragmentList",
                "kinesisvideo:GetSignalingChannelEndpoint",
                "kinesisvideo:ListFragments",
                "kinesisvideo:ListSignalingChannels",
                "kinesisvideo:ListStreams",
                "kinesisvideo:ListTagsForResource",
                "kinesisvideo:ListTagsForStream",
                "kinesisvideo:PutMedia",
                "kinesisvideo:SendAlexaOfferToMaster",
                "kinesisvideo:TagResource",
                "kinesisvideo:TagStream",
                "kinesisvideo:UntagResource",
                "kinesisvideo:UntagStream",
                "kinesisvideo:UpdateDataRetention",
                "kinesisvideo:UpdateSignalingChannel",
                "kinesisvideo:UpdateStream"
            ],
            "Resource": [
                "arn:aws:kinesisvideo:<region>:<account_ID>:<resourceType>/<resourceName>/<creationTime>"
            ],
            "Condition": {
                "SomeCondition-KLhue": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-gFGXa": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-WaPFy": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon API Gateway",
            "Effect": "Allow",
            "Action": [
                "execute-api:InvalidateCache",
                "execute-api:Invoke",
                "execute-api:ManageConnections"
            ],
            "Resource": [
                "arn:aws:execute-api:<region>:<account_id>:<api_id>/<stage>/<method>/<api_specific_resource_path>"
            ]
        },
        {
            "Sid": "AWS Elemental MediaLive",
            "Effect": "Allow",
            "Action": [
                "medialive:AcceptInputDeviceTransfer",
                "medialive:BatchDelete",
                "medialive:BatchStart",
                "medialive:BatchStop",
                "medialive:BatchUpdateSchedule",
                "medialive:CancelInputDeviceTransfer",
                "medialive:CreateChannel",
                "medialive:CreateInput",
                "medialive:CreateInputSecurityGroup",
                "medialive:CreateMultiplex",
                "medialive:CreateMultiplexProgram",
                "medialive:CreateTags",
                "medialive:DeleteChannel",
                "medialive:DeleteInput",
                "medialive:DeleteInputSecurityGroup",
                "medialive:DeleteMultiplex",
                "medialive:DeleteMultiplexProgram",
                "medialive:DeleteReservation",
                "medialive:DeleteSchedule",
                "medialive:DeleteTags",
                "medialive:DescribeChannel",
                "medialive:DescribeInput",
                "medialive:DescribeInputDevice",
                "medialive:DescribeInputDeviceThumbnail",
                "medialive:DescribeInputSecurityGroup",
                "medialive:DescribeMultiplex",
                "medialive:DescribeMultiplexProgram",
                "medialive:DescribeOffering",
                "medialive:DescribeReservation",
                "medialive:DescribeSchedule",
                "medialive:ListChannels",
                "medialive:ListInputDeviceTransfers",
                "medialive:ListInputDevices",
                "medialive:ListInputSecurityGroups",
                "medialive:ListInputs",
                "medialive:ListMultiplexPrograms",
                "medialive:ListMultiplexes",
                "medialive:ListOfferings",
                "medialive:ListReservations",
                "medialive:ListTagsForResource",
                "medialive:PurchaseOffering",
                "medialive:RejectInputDeviceTransfer",
                "medialive:StartChannel",
                "medialive:StartMultiplex",
                "medialive:StopChannel",
                "medialive:StopMultiplex",
                "medialive:TransferInputDevice",
                "medialive:UpdateChannel",
                "medialive:UpdateChannelClass",
                "medialive:UpdateInput",
                "medialive:UpdateInputDevice",
                "medialive:UpdateInputSecurityGroup",
                "medialive:UpdateMultiplex",
                "medialive:UpdateMultiplexProgram",
                "medialive:UpdateReservation"
            ],
            "Resource": [
                "arn:${Partition}:medialive:${Region}:${Account}:${ResourceType}:${ResourcePath}"
            ],
            "Condition": {
                "SomeCondition-iDELe": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-hSqdf": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-lJfZx": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS CloudShell",
            "Effect": "Allow",
            "Action": [
                "cloudshell:CreateEnvironment",
                "cloudshell:CreateSession",
                "cloudshell:DeleteEnvironment",
                "cloudshell:GetEnvironmentStatus",
                "cloudshell:GetFileDownloadUrls",
                "cloudshell:GetFileUploadUrls",
                "cloudshell:PutCredentials",
                "cloudshell:StartEnvironment",
                "cloudshell:StopEnvironment"
            ],
            "Resource": [
                "arn:${Partition}:cloudshell:${Region}:${Account}:environment/${EnvironmentId}"
            ]
        },
        {
            "Sid": "Amazon Location",
            "Effect": "Allow",
            "Action": [
                "geo:AssociateTrackerConsumer",
                "geo:BatchDeleteDevicePositionHistory",
                "geo:BatchDeleteGeofence",
                "geo:BatchEvaluateGeofences",
                "geo:BatchGetDevicePosition",
                "geo:BatchPutGeofence",
                "geo:BatchUpdateDevicePosition",
                "geo:CalculateRoute",
                "geo:CreateGeofenceCollection",
                "geo:CreateMap",
                "geo:CreatePlaceIndex",
                "geo:CreateRouteCalculator",
                "geo:CreateTracker",
                "geo:DeleteGeofenceCollection",
                "geo:DeleteMap",
                "geo:DeletePlaceIndex",
                "geo:DeleteRouteCalculator",
                "geo:DeleteTracker",
                "geo:DescribeGeofenceCollection",
                "geo:DescribeMap",
                "geo:DescribePlaceIndex",
                "geo:DescribeRouteCalculator",
                "geo:DescribeTracker",
                "geo:DisassociateTrackerConsumer",
                "geo:GetDevicePosition",
                "geo:GetDevicePositionHistory",
                "geo:GetGeofence",
                "geo:GetMapGlyphs",
                "geo:GetMapSprites",
                "geo:GetMapStyleDescriptor",
                "geo:GetMapTile",
                "geo:ListDevicePositions",
                "geo:ListGeofenceCollections",
                "geo:ListGeofences",
                "geo:ListMaps",
                "geo:ListPlaceIndexes",
                "geo:ListRouteCalculators",
                "geo:ListTagsForResource",
                "geo:ListTrackerConsumers",
                "geo:ListTrackers",
                "geo:PutGeofence",
                "geo:SearchPlaceIndexForPosition",
                "geo:SearchPlaceIndexForText",
                "geo:TagResource",
                "geo:UntagResource",
                "geo:UpdateGeofenceCollection",
                "geo:UpdateTracker"
            ],
            "Resource": [
                "arn:${Partition}:geo:${Region}:${AccountId}:${ResourceType}/${ResourceName}"
            ],
            "Condition": {
                "SomeCondition-EHzDM": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-vijya": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-BdvAD": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Key Management Service",
            "Effect": "Allow",
            "Action": [
                "kms:CancelKeyDeletion",
                "kms:ConnectCustomKeyStore",
                "kms:CreateAlias",
                "kms:CreateCustomKeyStore",
                "kms:CreateGrant",
                "kms:CreateKey",
                "kms:Decrypt",
                "kms:DeleteAlias",
                "kms:DeleteCustomKeyStore",
                "kms:DeleteImportedKeyMaterial",
                "kms:DescribeCustomKeyStores",
                "kms:DescribeKey",
                "kms:DisableKey",
                "kms:DisableKeyRotation",
                "kms:DisconnectCustomKeyStore",
                "kms:EnableKey",
                "kms:EnableKeyRotation",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:GenerateDataKeyPair",
                "kms:GenerateDataKeyPairWithoutPlaintext",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:GenerateRandom",
                "kms:GetKeyPolicy",
                "kms:GetKeyRotationStatus",
                "kms:GetParametersForImport",
                "kms:GetPublicKey",
                "kms:ImportKeyMaterial",
                "kms:ListAliases",
                "kms:ListGrants",
                "kms:ListKeyPolicies",
                "kms:ListKeys",
                "kms:ListResourceTags",
                "kms:ListRetirableGrants",
                "kms:PutKeyPolicy",
                "kms:ReEncryptFrom",
                "kms:ReEncryptTo",
                "kms:ReplicateKey",
                "kms:RetireGrant",
                "kms:RevokeGrant",
                "kms:ScheduleKeyDeletion",
                "kms:Sign",
                "kms:SynchronizeMultiRegionKey",
                "kms:TagResource",
                "kms:UntagResource",
                "kms:UpdateAlias",
                "kms:UpdateCustomKeyStore",
                "kms:UpdateKeyDescription",
                "kms:UpdatePrimaryRegion",
                "kms:Verify"
            ],
            "Resource": [
                "arn:aws:kms:<region>:<account_id>:<resource_type>/<id>"
            ],
            "Condition": {
                "SomeCondition-WPMLI": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-xeKoS": {
                    "kms:BypassPolicyLockoutSafetyCheck": "...some value..."
                },
                "SomeCondition-mrCOl": {
                    "kms:CallerAccount": "...some value..."
                },
                "SomeCondition-QgDHY": {
                    "kms:CustomerMasterKeySpec": "...some value..."
                },
                "SomeCondition-ugKMI": {
                    "kms:CustomerMasterKeyUsage": "...some value..."
                },
                "SomeCondition-XyTGe": {
                    "kms:DataKeyPairSpec": "...some value..."
                },
                "SomeCondition-aIyYi": {
                    "kms:EncryptionAlgorithm": "...some value..."
                },
                "SomeCondition-ALmBs": {
                    "kms:EncryptionContextKeys": "...some value..."
                },
                "SomeCondition-IeXaW": {
                    "kms:ExpirationModel": "...some value..."
                },
                "SomeCondition-LXjoY": {
                    "kms:GrantConstraintType": "...some value..."
                },
                "SomeCondition-JeCNa": {
                    "kms:GrantIsForAWSResource": "...some value..."
                },
                "SomeCondition-MbFkU": {
                    "kms:GrantOperations": "...some value..."
                },
                "SomeCondition-NCBLJ": {
                    "kms:GranteePrincipal": "...some value..."
                },
                "SomeCondition-JGeZf": {
                    "kms:KeyOrigin": "...some value..."
                },
                "SomeCondition-OSbgA": {
                    "kms:MessageType": "...some value..."
                },
                "SomeCondition-YNkAL": {
                    "kms:MultiRegion": "...some value..."
                },
                "SomeCondition-gsNmA": {
                    "kms:MultiRegionKeyType": "...some value..."
                },
                "SomeCondition-bZarV": {
                    "kms:PrimaryRegion": "...some value..."
                },
                "SomeCondition-YBvGM": {
                    "kms:ReEncryptOnSameKey": "...some value..."
                },
                "SomeCondition-FgxzE": {
                    "kms:ReplicaRegion": "...some value..."
                },
                "SomeCondition-ryWAF": {
                    "kms:RequestAlias": "...some value..."
                },
                "SomeCondition-zSphl": {
                    "kms:ResourceAliases": "...some value..."
                },
                "SomeCondition-nLjMw": {
                    "kms:RetiringPrincipal": "...some value..."
                },
                "SomeCondition-LSRZu": {
                    "kms:SigningAlgorithm": "...some value..."
                },
                "SomeCondition-vUWMK": {
                    "kms:ValidTo": "...some value..."
                },
                "SomeCondition-wUrsC": {
                    "kms:ViaService": "...some value..."
                },
                "SomeCondition-zArmO": {
                    "kms:WrappingAlgorithm": "...some value..."
                },
                "SomeCondition-FtzUX": {
                    "kms:WrappingKeySpec": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS CloudHSM",
            "Effect": "Allow",
            "Action": [
                "cloudhsm:AddTagsToResource",
                "cloudhsm:CopyBackupToRegion",
                "cloudhsm:CreateCluster",
                "cloudhsm:CreateHapg",
                "cloudhsm:CreateHsm",
                "cloudhsm:CreateLunaClient",
                "cloudhsm:DeleteBackup",
                "cloudhsm:DeleteCluster",
                "cloudhsm:DeleteHapg",
                "cloudhsm:DeleteHsm",
                "cloudhsm:DeleteLunaClient",
                "cloudhsm:DescribeBackups",
                "cloudhsm:DescribeClusters",
                "cloudhsm:DescribeHapg",
                "cloudhsm:DescribeHsm",
                "cloudhsm:DescribeLunaClient",
                "cloudhsm:GetConfig",
                "cloudhsm:InitializeCluster",
                "cloudhsm:ListAvailableZones",
                "cloudhsm:ListHapgs",
                "cloudhsm:ListHsms",
                "cloudhsm:ListLunaClients",
                "cloudhsm:ListTags",
                "cloudhsm:ListTagsForResource",
                "cloudhsm:ModifyBackupAttributes",
                "cloudhsm:ModifyCluster",
                "cloudhsm:ModifyHapg",
                "cloudhsm:ModifyHsm",
                "cloudhsm:ModifyLunaClient",
                "cloudhsm:RemoveTagsFromResource",
                "cloudhsm:RestoreBackup",
                "cloudhsm:TagResource",
                "cloudhsm:UntagResource"
            ],
            "Resource": [
                "arn:<partition>:cloudhsm:<region>:<accountID>:<relative-id>"
            ],
            "Condition": {
                "SomeCondition-fwQYz": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-UXBzf": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-vnFbP": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon CodeGuru",
            "Effect": "Allow",
            "Action": [
                "codeguru:GetCodeGuruFreeTrialSummary"
            ]
        },
        {
            "Sid": "Amazon EC2",
            "Effect": "Allow",
            "Action": [
                "ec2:AcceptReservedInstancesExchangeQuote",
                "ec2:AcceptTransitGatewayMulticastDomainAssociations",
                "ec2:AcceptTransitGatewayPeeringAttachment",
                "ec2:AcceptTransitGatewayVpcAttachment",
                "ec2:AcceptVpcEndpointConnections",
                "ec2:AcceptVpcPeeringConnection",
                "ec2:AdvertiseByoipCidr",
                "ec2:AllocateAddress",
                "ec2:AllocateHosts",
                "ec2:ApplySecurityGroupsToClientVpnTargetNetwork",
                "ec2:AssignIpv6Addresses",
                "ec2:AssignPrivateIpAddresses",
                "ec2:AssociateAddress",
                "ec2:AssociateClientVpnTargetNetwork",
                "ec2:AssociateDhcpOptions",
                "ec2:AssociateEnclaveCertificateIamRole",
                "ec2:AssociateIamInstanceProfile",
                "ec2:AssociateRouteTable",
                "ec2:AssociateSubnetCidrBlock",
                "ec2:AssociateTransitGatewayMulticastDomain",
                "ec2:AssociateTransitGatewayRouteTable",
                "ec2:AssociateVpcCidrBlock",
                "ec2:AttachClassicLinkVpc",
                "ec2:AttachInternetGateway",
                "ec2:AttachNetworkInterface",
                "ec2:AttachVolume",
                "ec2:AttachVpnGateway",
                "ec2:AuthorizeClientVpnIngress",
                "ec2:AuthorizeSecurityGroupEgress",
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:BundleInstance",
                "ec2:CancelBundleTask",
                "ec2:CancelCapacityReservation",
                "ec2:CancelConversionTask",
                "ec2:CancelExportTask",
                "ec2:CancelImportTask",
                "ec2:CancelReservedInstancesListing",
                "ec2:CancelSpotFleetRequests",
                "ec2:CancelSpotInstanceRequests",
                "ec2:ConfirmProductInstance",
                "ec2:CopyFpgaImage",
                "ec2:CopyImage",
                "ec2:CopySnapshot",
                "ec2:CreateCapacityReservation",
                "ec2:CreateCarrierGateway",
                "ec2:CreateClientVpnEndpoint",
                "ec2:CreateClientVpnRoute",
                "ec2:CreateCustomerGateway",
                "ec2:CreateDefaultSubnet",
                "ec2:CreateDefaultVpc",
                "ec2:CreateDhcpOptions",
                "ec2:CreateEgressOnlyInternetGateway",
                "ec2:CreateFleet",
                "ec2:CreateFlowLogs",
                "ec2:CreateFpgaImage",
                "ec2:CreateImage",
                "ec2:CreateInstanceExportTask",
                "ec2:CreateInternetGateway",
                "ec2:CreateKeyPair",
                "ec2:CreateLaunchTemplate",
                "ec2:CreateLaunchTemplateVersion",
                "ec2:CreateLocalGatewayRoute",
                "ec2:CreateLocalGatewayRouteTableVpcAssociation",
                "ec2:CreateManagedPrefixList",
                "ec2:CreateNatGateway",
                "ec2:CreateNetworkAcl",
                "ec2:CreateNetworkAclEntry",
                "ec2:CreateNetworkInsightsPath",
                "ec2:CreateNetworkInterface",
                "ec2:CreateNetworkInterfacePermission",
                "ec2:CreatePlacementGroup",
                "ec2:CreateReplaceRootVolumeTask",
                "ec2:CreateReservedInstancesListing",
                "ec2:CreateRestoreImageTask",
                "ec2:CreateRoute",
                "ec2:CreateRouteTable",
                "ec2:CreateSecurityGroup",
                "ec2:CreateSnapshot",
                "ec2:CreateSnapshots",
                "ec2:CreateSpotDatafeedSubscription",
                "ec2:CreateStoreImageTask",
                "ec2:CreateSubnet",
                "ec2:CreateTags",
                "ec2:CreateTrafficMirrorFilter",
                "ec2:CreateTrafficMirrorFilterRule",
                "ec2:CreateTrafficMirrorSession",
                "ec2:CreateTrafficMirrorTarget",
                "ec2:CreateTransitGateway",
                "ec2:CreateTransitGatewayConnect",
                "ec2:CreateTransitGatewayConnectPeer",
                "ec2:CreateTransitGatewayMulticastDomain",
                "ec2:CreateTransitGatewayPeeringAttachment",
                "ec2:CreateTransitGatewayPrefixListReference",
                "ec2:CreateTransitGatewayRoute",
                "ec2:CreateTransitGatewayRouteTable",
                "ec2:CreateTransitGatewayVpcAttachment",
                "ec2:CreateVolume",
                "ec2:CreateVpc",
                "ec2:CreateVpcEndpoint",
                "ec2:CreateVpcEndpointConnectionNotification",
                "ec2:CreateVpcEndpointServiceConfiguration",
                "ec2:CreateVpcPeeringConnection",
                "ec2:CreateVpnConnection",
                "ec2:CreateVpnConnectionRoute",
                "ec2:CreateVpnGateway",
                "ec2:DeleteCarrierGateway",
                "ec2:DeleteClientVpnEndpoint",
                "ec2:DeleteClientVpnRoute",
                "ec2:DeleteCustomerGateway",
                "ec2:DeleteDhcpOptions",
                "ec2:DeleteEgressOnlyInternetGateway",
                "ec2:DeleteFleets",
                "ec2:DeleteFlowLogs",
                "ec2:DeleteFpgaImage",
                "ec2:DeleteInternetGateway",
                "ec2:DeleteKeyPair",
                "ec2:DeleteLaunchTemplate",
                "ec2:DeleteLaunchTemplateVersions",
                "ec2:DeleteLocalGatewayRoute",
                "ec2:DeleteLocalGatewayRouteTableVpcAssociation",
                "ec2:DeleteManagedPrefixList",
                "ec2:DeleteNatGateway",
                "ec2:DeleteNetworkAcl",
                "ec2:DeleteNetworkAclEntry",
                "ec2:DeleteNetworkInsightsAnalysis",
                "ec2:DeleteNetworkInsightsPath",
                "ec2:DeleteNetworkInterface",
                "ec2:DeleteNetworkInterfacePermission",
                "ec2:DeletePlacementGroup",
                "ec2:DeleteQueuedReservedInstances",
                "ec2:DeleteRoute",
                "ec2:DeleteRouteTable",
                "ec2:DeleteSecurityGroup",
                "ec2:DeleteSnapshot",
                "ec2:DeleteSpotDatafeedSubscription",
                "ec2:DeleteSubnet",
                "ec2:DeleteTags",
                "ec2:DeleteTrafficMirrorFilter",
                "ec2:DeleteTrafficMirrorFilterRule",
                "ec2:DeleteTrafficMirrorSession",
                "ec2:DeleteTrafficMirrorTarget",
                "ec2:DeleteTransitGateway",
                "ec2:DeleteTransitGatewayConnect",
                "ec2:DeleteTransitGatewayConnectPeer",
                "ec2:DeleteTransitGatewayMulticastDomain",
                "ec2:DeleteTransitGatewayPeeringAttachment",
                "ec2:DeleteTransitGatewayPrefixListReference",
                "ec2:DeleteTransitGatewayRoute",
                "ec2:DeleteTransitGatewayRouteTable",
                "ec2:DeleteTransitGatewayVpcAttachment",
                "ec2:DeleteVolume",
                "ec2:DeleteVpc",
                "ec2:DeleteVpcEndpointConnectionNotifications",
                "ec2:DeleteVpcEndpointServiceConfigurations",
                "ec2:DeleteVpcEndpoints",
                "ec2:DeleteVpcPeeringConnection",
                "ec2:DeleteVpnConnection",
                "ec2:DeleteVpnConnectionRoute",
                "ec2:DeleteVpnGateway",
                "ec2:DeprovisionByoipCidr",
                "ec2:DeregisterImage",
                "ec2:DeregisterInstanceEventNotificationAttributes",
                "ec2:DeregisterTransitGatewayMulticastGroupMembers",
                "ec2:DeregisterTransitGatewayMulticastGroupSources",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAddresses",
                "ec2:DescribeAddressesAttribute",
                "ec2:DescribeAggregateIdFormat",
                "ec2:DescribeAvailabilityZones",
                "ec2:DescribeBundleTasks",
                "ec2:DescribeByoipCidrs",
                "ec2:DescribeCapacityReservations",
                "ec2:DescribeCarrierGateways",
                "ec2:DescribeClassicLinkInstances",
                "ec2:DescribeClientVpnAuthorizationRules",
                "ec2:DescribeClientVpnConnections",
                "ec2:DescribeClientVpnEndpoints",
                "ec2:DescribeClientVpnRoutes",
                "ec2:DescribeClientVpnTargetNetworks",
                "ec2:DescribeCoipPools",
                "ec2:DescribeConversionTasks",
                "ec2:DescribeCustomerGateways",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeEgressOnlyInternetGateways",
                "ec2:DescribeElasticGpus",
                "ec2:DescribeExportImageTasks",
                "ec2:DescribeExportTasks",
                "ec2:DescribeFastSnapshotRestores",
                "ec2:DescribeFleetHistory",
                "ec2:DescribeFleetInstances",
                "ec2:DescribeFleets",
                "ec2:DescribeFlowLogs",
                "ec2:DescribeFpgaImageAttribute",
                "ec2:DescribeFpgaImages",
                "ec2:DescribeHostReservationOfferings",
                "ec2:DescribeHostReservations",
                "ec2:DescribeHosts",
                "ec2:DescribeIamInstanceProfileAssociations",
                "ec2:DescribeIdFormat",
                "ec2:DescribeIdentityIdFormat",
                "ec2:DescribeImageAttribute",
                "ec2:DescribeImages",
                "ec2:DescribeImportImageTasks",
                "ec2:DescribeImportSnapshotTasks",
                "ec2:DescribeInstanceAttribute",
                "ec2:DescribeInstanceCreditSpecifications",
                "ec2:DescribeInstanceEventNotificationAttributes",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeInstanceTypeOfferings",
                "ec2:DescribeInstanceTypes",
                "ec2:DescribeInstances",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeIpv6Pools",
                "ec2:DescribeKeyPairs",
                "ec2:DescribeLaunchTemplateVersions",
                "ec2:DescribeLaunchTemplates",
                "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
                "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
                "ec2:DescribeLocalGatewayRouteTables",
                "ec2:DescribeLocalGatewayVirtualInterfaceGroups",
                "ec2:DescribeLocalGatewayVirtualInterfaces",
                "ec2:DescribeLocalGateways",
                "ec2:DescribeManagedPrefixLists",
                "ec2:DescribeMovingAddresses",
                "ec2:DescribeNatGateways",
                "ec2:DescribeNetworkAcls",
                "ec2:DescribeNetworkInsightsAnalyses",
                "ec2:DescribeNetworkInsightsPaths",
                "ec2:DescribeNetworkInterfaceAttribute",
                "ec2:DescribeNetworkInterfacePermissions",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribePlacementGroups",
                "ec2:DescribePrefixLists",
                "ec2:DescribePrincipalIdFormat",
                "ec2:DescribePublicIpv4Pools",
                "ec2:DescribeRegions",
                "ec2:DescribeReplaceRootVolumeTasks",
                "ec2:DescribeReservedInstances",
                "ec2:DescribeReservedInstancesListings",
                "ec2:DescribeReservedInstancesModifications",
                "ec2:DescribeReservedInstancesOfferings",
                "ec2:DescribeRouteTables",
                "ec2:DescribeScheduledInstanceAvailability",
                "ec2:DescribeScheduledInstances",
                "ec2:DescribeSecurityGroupReferences",
                "ec2:DescribeSecurityGroupRules",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSnapshotAttribute",
                "ec2:DescribeSnapshots",
                "ec2:DescribeSpotDatafeedSubscription",
                "ec2:DescribeSpotFleetInstances",
                "ec2:DescribeSpotFleetRequestHistory",
                "ec2:DescribeSpotFleetRequests",
                "ec2:DescribeSpotInstanceRequests",
                "ec2:DescribeSpotPriceHistory",
                "ec2:DescribeStaleSecurityGroups",
                "ec2:DescribeStoreImageTasks",
                "ec2:DescribeSubnets",
                "ec2:DescribeTags",
                "ec2:DescribeTrafficMirrorFilters",
                "ec2:DescribeTrafficMirrorSessions",
                "ec2:DescribeTrafficMirrorTargets",
                "ec2:DescribeTransitGatewayAttachments",
                "ec2:DescribeTransitGatewayConnectPeers",
                "ec2:DescribeTransitGatewayConnects",
                "ec2:DescribeTransitGatewayMulticastDomains",
                "ec2:DescribeTransitGatewayPeeringAttachments",
                "ec2:DescribeTransitGatewayRouteTables",
                "ec2:DescribeTransitGatewayVpcAttachments",
                "ec2:DescribeTransitGateways",
                "ec2:DescribeVolumeAttribute",
                "ec2:DescribeVolumeStatus",
                "ec2:DescribeVolumes",
                "ec2:DescribeVolumesModifications",
                "ec2:DescribeVpcAttribute",
                "ec2:DescribeVpcClassicLink",
                "ec2:DescribeVpcClassicLinkDnsSupport",
                "ec2:DescribeVpcEndpointConnectionNotifications",
                "ec2:DescribeVpcEndpointConnections",
                "ec2:DescribeVpcEndpointServiceConfigurations",
                "ec2:DescribeVpcEndpointServicePermissions",
                "ec2:DescribeVpcEndpointServices",
                "ec2:DescribeVpcEndpoints",
                "ec2:DescribeVpcPeeringConnections",
                "ec2:DescribeVpcs",
                "ec2:DescribeVpnConnections",
                "ec2:DescribeVpnGateways",
                "ec2:DetachClassicLinkVpc",
                "ec2:DetachInternetGateway",
                "ec2:DetachNetworkInterface",
                "ec2:DetachVolume",
                "ec2:DetachVpnGateway",
                "ec2:DisableEbsEncryptionByDefault",
                "ec2:DisableFastSnapshotRestores",
                "ec2:DisableImageDeprecation",
                "ec2:DisableSerialConsoleAccess",
                "ec2:DisableTransitGatewayRouteTablePropagation",
                "ec2:DisableVgwRoutePropagation",
                "ec2:DisableVpcClassicLink",
                "ec2:DisableVpcClassicLinkDnsSupport",
                "ec2:DisassociateAddress",
                "ec2:DisassociateClientVpnTargetNetwork",
                "ec2:DisassociateEnclaveCertificateIamRole",
                "ec2:DisassociateIamInstanceProfile",
                "ec2:DisassociateRouteTable",
                "ec2:DisassociateSubnetCidrBlock",
                "ec2:DisassociateTransitGatewayMulticastDomain",
                "ec2:DisassociateTransitGatewayRouteTable",
                "ec2:DisassociateVpcCidrBlock",
                "ec2:EnableEbsEncryptionByDefault",
                "ec2:EnableFastSnapshotRestores",
                "ec2:EnableImageDeprecation",
                "ec2:EnableSerialConsoleAccess",
                "ec2:EnableTransitGatewayRouteTablePropagation",
                "ec2:EnableVgwRoutePropagation",
                "ec2:EnableVolumeIO",
                "ec2:EnableVpcClassicLink",
                "ec2:EnableVpcClassicLinkDnsSupport",
                "ec2:ExportClientVpnClientCertificateRevocationList",
                "ec2:ExportClientVpnClientConfiguration",
                "ec2:ExportImage",
                "ec2:ExportTransitGatewayRoutes",
                "ec2:GetAssociatedEnclaveCertificateIamRoles",
                "ec2:GetAssociatedIpv6PoolCidrs",
                "ec2:GetCapacityReservationUsage",
                "ec2:GetCoipPoolUsage",
                "ec2:GetConsoleOutput",
                "ec2:GetConsoleScreenshot",
                "ec2:GetDefaultCreditSpecification",
                "ec2:GetEbsDefaultKmsKeyId",
                "ec2:GetEbsEncryptionByDefault",
                "ec2:GetFlowLogsIntegrationTemplate",
                "ec2:GetGroupsForCapacityReservation",
                "ec2:GetHostReservationPurchasePreview",
                "ec2:GetLaunchTemplateData",
                "ec2:GetManagedPrefixListAssociations",
                "ec2:GetManagedPrefixListEntries",
                "ec2:GetPasswordData",
                "ec2:GetReservedInstancesExchangeQuote",
                "ec2:GetSerialConsoleAccessStatus",
                "ec2:GetTransitGatewayAttachmentPropagations",
                "ec2:GetTransitGatewayMulticastDomainAssociations",
                "ec2:GetTransitGatewayPrefixListReferences",
                "ec2:GetTransitGatewayRouteTableAssociations",
                "ec2:GetTransitGatewayRouteTablePropagations",
                "ec2:ImportClientVpnClientCertificateRevocationList",
                "ec2:ImportImage",
                "ec2:ImportInstance",
                "ec2:ImportKeyPair",
                "ec2:ImportSnapshot",
                "ec2:ImportVolume",
                "ec2:ModifyAddressAttribute",
                "ec2:ModifyAvailabilityZoneGroup",
                "ec2:ModifyCapacityReservation",
                "ec2:ModifyClientVpnEndpoint",
                "ec2:ModifyDefaultCreditSpecification",
                "ec2:ModifyEbsDefaultKmsKeyId",
                "ec2:ModifyFleet",
                "ec2:ModifyFpgaImageAttribute",
                "ec2:ModifyHosts",
                "ec2:ModifyIdFormat",
                "ec2:ModifyIdentityIdFormat",
                "ec2:ModifyImageAttribute",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyInstanceCapacityReservationAttributes",
                "ec2:ModifyInstanceCreditSpecification",
                "ec2:ModifyInstanceEventStartTime",
                "ec2:ModifyInstanceMetadataOptions",
                "ec2:ModifyInstancePlacement",
                "ec2:ModifyLaunchTemplate",
                "ec2:ModifyManagedPrefixList",
                "ec2:ModifyNetworkInterfaceAttribute",
                "ec2:ModifyReservedInstances",
                "ec2:ModifySecurityGroupRules",
                "ec2:ModifySnapshotAttribute",
                "ec2:ModifySpotFleetRequest",
                "ec2:ModifySubnetAttribute",
                "ec2:ModifyTrafficMirrorFilterNetworkServices",
                "ec2:ModifyTrafficMirrorFilterRule",
                "ec2:ModifyTrafficMirrorSession",
                "ec2:ModifyTransitGateway",
                "ec2:ModifyTransitGatewayPrefixListReference",
                "ec2:ModifyTransitGatewayVpcAttachment",
                "ec2:ModifyVolume",
                "ec2:ModifyVolumeAttribute",
                "ec2:ModifyVpcAttribute",
                "ec2:ModifyVpcEndpoint",
                "ec2:ModifyVpcEndpointConnectionNotification",
                "ec2:ModifyVpcEndpointServiceConfiguration",
                "ec2:ModifyVpcEndpointServicePermissions",
                "ec2:ModifyVpcPeeringConnectionOptions",
                "ec2:ModifyVpcTenancy",
                "ec2:ModifyVpnConnection",
                "ec2:ModifyVpnConnectionOptions",
                "ec2:ModifyVpnTunnelCertificate",
                "ec2:ModifyVpnTunnelOptions",
                "ec2:MonitorInstances",
                "ec2:MoveAddressToVpc",
                "ec2:ProvisionByoipCidr",
                "ec2:PurchaseHostReservation",
                "ec2:PurchaseReservedInstancesOffering",
                "ec2:PurchaseScheduledInstances",
                "ec2:RebootInstances",
                "ec2:RegisterImage",
                "ec2:RegisterInstanceEventNotificationAttributes",
                "ec2:RegisterTransitGatewayMulticastGroupMembers",
                "ec2:RegisterTransitGatewayMulticastGroupSources",
                "ec2:RejectTransitGatewayMulticastDomainAssociations",
                "ec2:RejectTransitGatewayPeeringAttachment",
                "ec2:RejectTransitGatewayVpcAttachment",
                "ec2:RejectVpcEndpointConnections",
                "ec2:RejectVpcPeeringConnection",
                "ec2:ReleaseAddress",
                "ec2:ReleaseHosts",
                "ec2:ReplaceIamInstanceProfileAssociation",
                "ec2:ReplaceNetworkAclAssociation",
                "ec2:ReplaceNetworkAclEntry",
                "ec2:ReplaceRoute",
                "ec2:ReplaceRouteTableAssociation",
                "ec2:ReplaceTransitGatewayRoute",
                "ec2:ReportInstanceStatus",
                "ec2:RequestSpotFleet",
                "ec2:RequestSpotInstances",
                "ec2:ResetAddressAttribute",
                "ec2:ResetEbsDefaultKmsKeyId",
                "ec2:ResetFpgaImageAttribute",
                "ec2:ResetImageAttribute",
                "ec2:ResetInstanceAttribute",
                "ec2:ResetNetworkInterfaceAttribute",
                "ec2:ResetSnapshotAttribute",
                "ec2:RestoreAddressToClassic",
                "ec2:RestoreManagedPrefixListVersion",
                "ec2:RevokeClientVpnIngress",
                "ec2:RevokeSecurityGroupEgress",
                "ec2:RevokeSecurityGroupIngress",
                "ec2:RunInstances",
                "ec2:RunScheduledInstances",
                "ec2:SearchLocalGatewayRoutes",
                "ec2:SearchTransitGatewayMulticastGroups",
                "ec2:SearchTransitGatewayRoutes",
                "ec2:SendDiagnosticInterrupt",
                "ec2:StartInstances",
                "ec2:StartNetworkInsightsAnalysis",
                "ec2:StartVpcEndpointServicePrivateDnsVerification",
                "ec2:StopInstances",
                "ec2:TerminateClientVpnConnections",
                "ec2:TerminateInstances",
                "ec2:UnassignIpv6Addresses",
                "ec2:UnassignPrivateIpAddresses",
                "ec2:UnmonitorInstances",
                "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
                "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
                "ec2:WithdrawByoipCidr"
            ],
            "Resource": [
                "arn:aws:ec2:<region>:<account>:<resourceType>/<resourcePath>"
            ],
            "Condition": {
                "SomeCondition-WjSpX": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-Gwotv": {
                    "aws:ResourceTag/": "...some value..."
                },
                "SomeCondition-ImLtg": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-xvUMI": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-zyWMF": {
                    "ec2:AccepterVpc": "...some value..."
                },
                "SomeCondition-cbCim": {
                    "ec2:AssociatePublicIpAddress": "...some value..."
                },
                "SomeCondition-suAvw": {
                    "ec2:Attribute/${AttributeName}": "...some value..."
                },
                "SomeCondition-UYZNJ": {
                    "ec2:AuthenticationType": "...some value..."
                },
                "SomeCondition-XqFxo": {
                    "ec2:AuthorizedService": "...some value..."
                },
                "SomeCondition-iIkuo": {
                    "ec2:AuthorizedUser": "...some value..."
                },
                "SomeCondition-OdiZw": {
                    "ec2:AutoPlacement": "...some value..."
                },
                "SomeCondition-zSZKy": {
                    "ec2:AvailabilityZone": "...some value..."
                },
                "SomeCondition-spVBU": {
                    "ec2:ClientRootCertificateChainArn": "...some value..."
                },
                "SomeCondition-bpeWI": {
                    "ec2:CloudwatchLogGroupArn": "...some value..."
                },
                "SomeCondition-KDcLQ": {
                    "ec2:CloudwatchLogStreamArn": "...some value..."
                },
                "SomeCondition-anIsM": {
                    "ec2:CreateAction": "...some value..."
                },
                "SomeCondition-fDoRB": {
                    "ec2:DPDTimeoutSeconds": "...some value..."
                },
                "SomeCondition-JrNAc": {
                    "ec2:DirectoryArn": "...some value..."
                },
                "SomeCondition-bwRBz": {
                    "ec2:EbsOptimized": "...some value..."
                },
                "SomeCondition-xZJUl": {
                    "ec2:ElasticGpuType": "...some value..."
                },
                "SomeCondition-rRGSa": {
                    "ec2:Encrypted": "...some value..."
                },
                "SomeCondition-XWdvG": {
                    "ec2:GatewayType": "...some value..."
                },
                "SomeCondition-jZkco": {
                    "ec2:HostRecovery": "...some value..."
                },
                "SomeCondition-QBKfT": {
                    "ec2:IKEVersions": "...some value..."
                },
                "SomeCondition-zpOBG": {
                    "ec2:ImageType": "...some value..."
                },
                "SomeCondition-tvqrl": {
                    "ec2:InsideTunnelCidr": "...some value..."
                },
                "SomeCondition-bEzqy": {
                    "ec2:InstanceMarketType": "...some value..."
                },
                "SomeCondition-OUmvx": {
                    "ec2:InstanceProfile": "...some value..."
                },
                "SomeCondition-zFReH": {
                    "ec2:InstanceType": "...some value..."
                },
                "SomeCondition-JduSB": {
                    "ec2:IsLaunchTemplateResource": "...some value..."
                },
                "SomeCondition-MrNyw": {
                    "ec2:KeyPairName": "...some value..."
                },
                "SomeCondition-MYKiv": {
                    "ec2:LaunchTemplate": "...some value..."
                },
                "SomeCondition-hLBly": {
                    "ec2:MetadataHttpEndpoint": "...some value..."
                },
                "SomeCondition-iewhZ": {
                    "ec2:MetadataHttpPutResponseHopLimit": "...some value..."
                },
                "SomeCondition-MbXfj": {
                    "ec2:MetadataHttpTokens": "...some value..."
                },
                "SomeCondition-Gjpus": {
                    "ec2:NewInstanceProfile": "...some value..."
                },
                "SomeCondition-THczg": {
                    "ec2:OutpostArn": "...some value..."
                },
                "SomeCondition-xPZIi": {
                    "ec2:Owner": "...some value..."
                },
                "SomeCondition-UDRhN": {
                    "ec2:ParentSnapshot": "...some value..."
                },
                "SomeCondition-jUcbz": {
                    "ec2:ParentVolume": "...some value..."
                },
                "SomeCondition-jpVzO": {
                    "ec2:Permission": "...some value..."
                },
                "SomeCondition-nYIhH": {
                    "ec2:Phase1DHGroupNumbers": "...some value..."
                },
                "SomeCondition-UwSxD": {
                    "ec2:Phase1EncryptionAlgorithms": "...some value..."
                },
                "SomeCondition-vCMUW": {
                    "ec2:Phase1IntegrityAlgorithms": "...some value..."
                },
                "SomeCondition-TeGHA": {
                    "ec2:Phase1LifetimeSeconds": "...some value..."
                },
                "SomeCondition-mvAIN": {
                    "ec2:Phase2DHGroupNumbers": "...some value..."
                },
                "SomeCondition-yAxac": {
                    "ec2:Phase2EncryptionAlgorithms": "...some value..."
                },
                "SomeCondition-hXkeH": {
                    "ec2:Phase2IntegrityAlgorithms": "...some value..."
                },
                "SomeCondition-cIBrQ": {
                    "ec2:Phase2LifetimeSeconds": "...some value..."
                },
                "SomeCondition-SrHvw": {
                    "ec2:PlacementGroup": "...some value..."
                },
                "SomeCondition-BecGn": {
                    "ec2:PlacementGroupStrategy": "...some value..."
                },
                "SomeCondition-DroJz": {
                    "ec2:PresharedKeys": "...some value..."
                },
                "SomeCondition-dKbMJ": {
                    "ec2:ProductCode": "...some value..."
                },
                "SomeCondition-nFHXc": {
                    "ec2:Public": "...some value..."
                },
                "SomeCondition-pimLG": {
                    "ec2:Quantity": "...some value..."
                },
                "SomeCondition-nxzuD": {
                    "ec2:Region": "...some value..."
                },
                "SomeCondition-blCcS": {
                    "ec2:RekeyFuzzPercentage": "...some value..."
                },
                "SomeCondition-PvNsE": {
                    "ec2:RekeyMarginTimeSeconds": "...some value..."
                },
                "SomeCondition-mgsDy": {
                    "ec2:RequesterVpc": "...some value..."
                },
                "SomeCondition-vigeG": {
                    "ec2:ReservedInstancesOfferingType": "...some value..."
                },
                "SomeCondition-AchmG": {
                    "ec2:ResourceTag/": "...some value..."
                },
                "SomeCondition-FVQoX": {
                    "ec2:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-sAPaQ": {
                    "ec2:RoleDelivery": "...some value..."
                },
                "SomeCondition-ElsBf": {
                    "ec2:RootDeviceType": "...some value..."
                },
                "SomeCondition-OKQVt": {
                    "ec2:RoutingType": "...some value..."
                },
                "SomeCondition-eKJfE": {
                    "ec2:SamlProviderArn": "...some value..."
                },
                "SomeCondition-tklIh": {
                    "ec2:ServerCertificateArn": "...some value..."
                },
                "SomeCondition-nfXzC": {
                    "ec2:SnapshotTime": "...some value..."
                },
                "SomeCondition-zHiUS": {
                    "ec2:SourceInstanceARN": "...some value..."
                },
                "SomeCondition-QcEzZ": {
                    "ec2:SourceOutpostArn": "...some value..."
                },
                "SomeCondition-VmCbz": {
                    "ec2:Subnet": "...some value..."
                },
                "SomeCondition-gaVIf": {
                    "ec2:Tenancy": "...some value..."
                },
                "SomeCondition-zekQL": {
                    "ec2:VolumeIops": "...some value..."
                },
                "SomeCondition-UFMVK": {
                    "ec2:VolumeSize": "...some value..."
                },
                "SomeCondition-UjRSJ": {
                    "ec2:VolumeThroughput": "...some value..."
                },
                "SomeCondition-bZBYa": {
                    "ec2:VolumeType": "...some value..."
                },
                "SomeCondition-otpZu": {
                    "ec2:Vpc": "...some value..."
                },
                "SomeCondition-ElnHp": {
                    "ec2:VpceServiceName": "...some value..."
                },
                "SomeCondition-eqCnm": {
                    "ec2:VpceServiceOwner": "...some value..."
                },
                "SomeCondition-CDdeT": {
                    "ec2:VpceServicePrivateDnsName": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Import Export Disk Service",
            "Effect": "Allow",
            "Action": [
                "importexport:CancelJob",
                "importexport:CreateJob",
                "importexport:GetShippingLabel",
                "importexport:GetStatus",
                "importexport:ListJobs",
                "importexport:UpdateJob"
            ]
        },
        {
            "Sid": "Data Pipeline",
            "Effect": "Allow",
            "Action": [
                "datapipeline:ActivatePipeline",
                "datapipeline:AddTags",
                "datapipeline:CreatePipeline",
                "datapipeline:DeactivatePipeline",
                "datapipeline:DeletePipeline",
                "datapipeline:DescribeObjects",
                "datapipeline:DescribePipelines",
                "datapipeline:EvaluateExpression",
                "datapipeline:GetAccountLimits",
                "datapipeline:GetPipelineDefinition",
                "datapipeline:ListPipelines",
                "datapipeline:PollForTask",
                "datapipeline:PutAccountLimits",
                "datapipeline:PutPipelineDefinition",
                "datapipeline:QueryObjects",
                "datapipeline:RemoveTags",
                "datapipeline:ReportTaskProgress",
                "datapipeline:ReportTaskRunnerHeartbeat",
                "datapipeline:SetStatus",
                "datapipeline:SetTaskStatus",
                "datapipeline:ValidatePipelineDefinition"
            ],
            "Condition": {
                "SomeCondition-LDoHZ": {
                    "datapipeline:PipelineCreator": "...some value..."
                },
                "SomeCondition-KDzCO": {
                    "datapipeline:Tag": "...some value..."
                },
                "SomeCondition-CROfB": {
                    "datapipeline:workerGroup": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Server Migration Service",
            "Effect": "Allow",
            "Action": [
                "sms:CreateApp",
                "sms:CreateReplicationJob",
                "sms:DeleteApp",
                "sms:DeleteAppLaunchConfiguration",
                "sms:DeleteAppReplicationConfiguration",
                "sms:DeleteAppValidationConfiguration",
                "sms:DeleteReplicationJob",
                "sms:DeleteServerCatalog",
                "sms:DisassociateConnector",
                "sms:GenerateChangeSet",
                "sms:GenerateTemplate",
                "sms:GetApp",
                "sms:GetAppLaunchConfiguration",
                "sms:GetAppReplicationConfiguration",
                "sms:GetAppValidationConfiguration",
                "sms:GetAppValidationOutput",
                "sms:GetConnectors",
                "sms:GetMessages",
                "sms:GetReplicationJobs",
                "sms:GetReplicationRuns",
                "sms:GetServers",
                "sms:ImportAppCatalog",
                "sms:ImportServerCatalog",
                "sms:LaunchApp",
                "sms:ListApps",
                "sms:NotifyAppValidationOutput",
                "sms:PutAppLaunchConfiguration",
                "sms:PutAppReplicationConfiguration",
                "sms:PutAppValidationConfiguration",
                "sms:SendMessage",
                "sms:StartAppReplication",
                "sms:StartOnDemandAppReplication",
                "sms:StartOnDemandReplicationRun",
                "sms:StopAppReplication",
                "sms:TerminateApp",
                "sms:UpdateApp",
                "sms:UpdateReplicationJob"
            ]
        },
        {
            "Sid": "Amazon Monitron",
            "Effect": "Allow",
            "Action": [
                "monitron:AssociateProjectAdminUser",
                "monitron:CreateProject",
                "monitron:DeleteProject",
                "monitron:DisassociateProjectAdminUser",
                "monitron:GetProject",
                "monitron:GetProjectAdminUser",
                "monitron:ListProjectAdminUsers",
                "monitron:ListProjects",
                "monitron:ListTagsForResource",
                "monitron:TagResource",
                "monitron:UntagResource",
                "monitron:UpdateProject"
            ],
            "Resource": [
                "arn:aws:monitron:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-iSmGC": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-aDtfk": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-PaJiv": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS CloudFormation",
            "Effect": "Allow",
            "Action": [
                "cloudformation:CancelUpdateStack",
                "cloudformation:ContinueUpdateRollback",
                "cloudformation:CreateChangeSet",
                "cloudformation:CreateStack",
                "cloudformation:CreateStackInstances",
                "cloudformation:CreateStackSet",
                "cloudformation:CreateUploadBucket",
                "cloudformation:DeleteChangeSet",
                "cloudformation:DeleteStack",
                "cloudformation:DeleteStackInstances",
                "cloudformation:DeleteStackSet",
                "cloudformation:DeregisterType",
                "cloudformation:DescribeAccountLimits",
                "cloudformation:DescribeChangeSet",
                "cloudformation:DescribeStackDriftDetectionStatus",
                "cloudformation:DescribeStackEvents",
                "cloudformation:DescribeStackInstance",
                "cloudformation:DescribeStackResource",
                "cloudformation:DescribeStackResourceDrifts",
                "cloudformation:DescribeStackResources",
                "cloudformation:DescribeStackSet",
                "cloudformation:DescribeStackSetOperation",
                "cloudformation:DescribeStacks",
                "cloudformation:DescribeType",
                "cloudformation:DescribeTypeRegistration",
                "cloudformation:DetectStackDrift",
                "cloudformation:DetectStackResourceDrift",
                "cloudformation:DetectStackSetDrift",
                "cloudformation:EstimateTemplateCost",
                "cloudformation:ExecuteChangeSet",
                "cloudformation:GetStackPolicy",
                "cloudformation:GetTemplate",
                "cloudformation:GetTemplateSummary",
                "cloudformation:ListChangeSets",
                "cloudformation:ListExports",
                "cloudformation:ListImports",
                "cloudformation:ListStackInstances",
                "cloudformation:ListStackResources",
                "cloudformation:ListStackSetOperationResults",
                "cloudformation:ListStackSetOperations",
                "cloudformation:ListStackSets",
                "cloudformation:ListStacks",
                "cloudformation:ListTypeRegistrations",
                "cloudformation:ListTypeVersions",
                "cloudformation:ListTypes",
                "cloudformation:RecordHandlerProgress",
                "cloudformation:RegisterType",
                "cloudformation:SetStackPolicy",
                "cloudformation:SetTypeDefaultVersion",
                "cloudformation:SignalResource",
                "cloudformation:StopStackSetOperation",
                "cloudformation:TagResource",
                "cloudformation:UntagResource",
                "cloudformation:UpdateStack",
                "cloudformation:UpdateStackInstances",
                "cloudformation:UpdateStackSet",
                "cloudformation:UpdateTerminationProtection",
                "cloudformation:ValidateTemplate"
            ],
            "Resource": [
                "arn:aws:cloudformation:<region>:<account>:<relative-id>"
            ],
            "Condition": {
                "SomeCondition-NERPh": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-iQpVS": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-TEltU": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-dFmhO": {
                    "cloudformation:ChangeSetName": "...some value..."
                },
                "SomeCondition-JsODd": {
                    "cloudformation:ImportResourceTypes": "...some value..."
                },
                "SomeCondition-ZCFHU": {
                    "cloudformation:ResourceTypes": "...some value..."
                },
                "SomeCondition-fKVWC": {
                    "cloudformation:RoleArn": "...some value..."
                },
                "SomeCondition-qGvZE": {
                    "cloudformation:StackPolicyUrl": "...some value..."
                },
                "SomeCondition-kGuEQ": {
                    "cloudformation:TemplateUrl": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon WorkMail Message Flow",
            "Effect": "Allow",
            "Action": [
                "workmailmessageflow:GetRawMessageContent",
                "workmailmessageflow:PutRawMessageContent"
            ],
            "Resource": [
                "arn:${Partition}:workmailmessageflow:${Region}:${Account}:message/${OrganizationId}/${Context}/${MessageId}"
            ]
        },
        {
            "Sid": "AWS Chatbot",
            "Effect": "Allow",
            "Action": [
                "chatbot:CreateChimeWebhookConfiguration",
                "chatbot:CreateSlackChannelConfiguration",
                "chatbot:DeleteChimeWebhookConfiguration",
                "chatbot:DeleteSlackChannelConfiguration",
                "chatbot:DeleteSlackWorkspaceAuthorization",
                "chatbot:DescribeChimeWebhookConfigurations",
                "chatbot:DescribeSlackChannelConfigurations",
                "chatbot:DescribeSlackChannels",
                "chatbot:DescribeSlackWorkspaces",
                "chatbot:GetSlackOauthParameters",
                "chatbot:RedeemSlackOauthCode",
                "chatbot:UpdateChimeWebhookConfiguration",
                "chatbot:UpdateSlackChannelConfiguration"
            ],
            "Resource": [
                "arn:${Partition}:chatbot::<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-rLlQm": {
                    "aws:CalledVia": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Macie",
            "Effect": "Allow",
            "Action": [
                "macie2:AcceptInvitation",
                "macie2:BatchGetCustomDataIdentifiers",
                "macie2:CreateClassificationJob",
                "macie2:CreateCustomDataIdentifier",
                "macie2:CreateFindingsFilter",
                "macie2:CreateInvitations",
                "macie2:CreateMember",
                "macie2:CreateSampleFindings",
                "macie2:DeclineInvitations",
                "macie2:DeleteCustomDataIdentifier",
                "macie2:DeleteFindingsFilter",
                "macie2:DeleteInvitations",
                "macie2:DeleteMember",
                "macie2:DescribeBuckets",
                "macie2:DescribeClassificationJob",
                "macie2:DescribeOrganizationConfiguration",
                "macie2:DisableMacie",
                "macie2:DisableOrganizationAdminAccount",
                "macie2:DisassociateFromAdministratorAccount",
                "macie2:DisassociateFromMasterAccount",
                "macie2:DisassociateMember",
                "macie2:EnableMacie",
                "macie2:EnableOrganizationAdminAccount",
                "macie2:GetAdministratorAccount",
                "macie2:GetBucketStatistics",
                "macie2:GetClassificationExportConfiguration",
                "macie2:GetCustomDataIdentifier",
                "macie2:GetFindingStatistics",
                "macie2:GetFindings",
                "macie2:GetFindingsFilter",
                "macie2:GetFindingsPublicationConfiguration",
                "macie2:GetInvitationsCount",
                "macie2:GetMacieSession",
                "macie2:GetMasterAccount",
                "macie2:GetMember",
                "macie2:GetUsageStatistics",
                "macie2:GetUsageTotals",
                "macie2:ListClassificationJobs",
                "macie2:ListCustomDataIdentifiers",
                "macie2:ListFindings",
                "macie2:ListFindingsFilters",
                "macie2:ListInvitations",
                "macie2:ListMembers",
                "macie2:ListOrganizationAdminAccounts",
                "macie2:ListTagsForResource",
                "macie2:PutClassificationExportConfiguration",
                "macie2:PutFindingsPublicationConfiguration",
                "macie2:SearchResources",
                "macie2:TagResource",
                "macie2:TestCustomDataIdentifier",
                "macie2:UntagResource",
                "macie2:UpdateClassificationJob",
                "macie2:UpdateFindingsFilter",
                "macie2:UpdateMacieSession",
                "macie2:UpdateMemberSession",
                "macie2:UpdateOrganizationConfiguration"
            ],
            "Resource": [
                "arn:aws:macie2:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-VgcBq": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-fuvaU": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-ZKTsJ": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Health APIs and Notifications",
            "Effect": "Allow",
            "Action": [
                "health:DescribeAffectedAccountsForOrganization",
                "health:DescribeAffectedEntities",
                "health:DescribeAffectedEntitiesForOrganization",
                "health:DescribeEntityAggregates",
                "health:DescribeEventAggregates",
                "health:DescribeEventDetails",
                "health:DescribeEventDetailsForOrganization",
                "health:DescribeEventTypes",
                "health:DescribeEvents",
                "health:DescribeEventsForOrganization",
                "health:DescribeHealthServiceStatusForOrganization",
                "health:DisableHealthServiceAccessForOrganization",
                "health:EnableHealthServiceAccessForOrganization"
            ],
            "Resource": [
                "arn:aws:health::<namespace>:<relative-id>"
            ],
            "Condition": {
                "SomeCondition-ebDNs": {
                    "health:eventTypeCode": "...some value..."
                },
                "SomeCondition-GAvza": {
                    "health:service": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Outposts",
            "Effect": "Allow",
            "Action": [
                "outposts:CreateOutpost",
                "outposts:DeleteOutpost",
                "outposts:DeleteSite",
                "outposts:GetOutpost",
                "outposts:GetOutpostInstanceTypes",
                "outposts:ListOutposts",
                "outposts:ListSites",
                "outposts:ListTagsForResource",
                "outposts:TagResource",
                "outposts:UntagResource"
            ]
        },
        {
            "Sid": "Amazon GameLift",
            "Effect": "Allow",
            "Action": [
                "gamelift:AcceptMatch",
                "gamelift:ClaimGameServer",
                "gamelift:CreateAlias",
                "gamelift:CreateBuild",
                "gamelift:CreateFleet",
                "gamelift:CreateFleetLocations",
                "gamelift:CreateGameServerGroup",
                "gamelift:CreateGameSession",
                "gamelift:CreateGameSessionQueue",
                "gamelift:CreateMatchmakingConfiguration",
                "gamelift:CreateMatchmakingRuleSet",
                "gamelift:CreatePlayerSession",
                "gamelift:CreatePlayerSessions",
                "gamelift:CreateScript",
                "gamelift:CreateVpcPeeringAuthorization",
                "gamelift:CreateVpcPeeringConnection",
                "gamelift:DeleteAlias",
                "gamelift:DeleteBuild",
                "gamelift:DeleteFleet",
                "gamelift:DeleteFleetLocations",
                "gamelift:DeleteGameServerGroup",
                "gamelift:DeleteGameSessionQueue",
                "gamelift:DeleteMatchmakingConfiguration",
                "gamelift:DeleteMatchmakingRuleSet",
                "gamelift:DeleteScalingPolicy",
                "gamelift:DeleteScript",
                "gamelift:DeleteVpcPeeringAuthorization",
                "gamelift:DeleteVpcPeeringConnection",
                "gamelift:DeregisterGameServer",
                "gamelift:DescribeAlias",
                "gamelift:DescribeBuild",
                "gamelift:DescribeEC2InstanceLimits",
                "gamelift:DescribeFleetAttributes",
                "gamelift:DescribeFleetCapacity",
                "gamelift:DescribeFleetEvents",
                "gamelift:DescribeFleetLocationAttributes",
                "gamelift:DescribeFleetLocationCapacity",
                "gamelift:DescribeFleetLocationUtilization",
                "gamelift:DescribeFleetPortSettings",
                "gamelift:DescribeFleetUtilization",
                "gamelift:DescribeGameServer",
                "gamelift:DescribeGameServerGroup",
                "gamelift:DescribeGameServerInstances",
                "gamelift:DescribeGameSessionDetails",
                "gamelift:DescribeGameSessionPlacement",
                "gamelift:DescribeGameSessionQueues",
                "gamelift:DescribeGameSessions",
                "gamelift:DescribeInstances",
                "gamelift:DescribeMatchmaking",
                "gamelift:DescribeMatchmakingConfigurations",
                "gamelift:DescribeMatchmakingRuleSets",
                "gamelift:DescribePlayerSessions",
                "gamelift:DescribeRuntimeConfiguration",
                "gamelift:DescribeScalingPolicies",
                "gamelift:DescribeScript",
                "gamelift:DescribeVpcPeeringAuthorizations",
                "gamelift:DescribeVpcPeeringConnections",
                "gamelift:GetGameSessionLogUrl",
                "gamelift:GetInstanceAccess",
                "gamelift:ListAliases",
                "gamelift:ListBuilds",
                "gamelift:ListFleets",
                "gamelift:ListGameServerGroups",
                "gamelift:ListGameServers",
                "gamelift:ListScripts",
                "gamelift:ListTagsForResource",
                "gamelift:PutScalingPolicy",
                "gamelift:RegisterGameServer",
                "gamelift:RequestUploadCredentials",
                "gamelift:ResolveAlias",
                "gamelift:ResumeGameServerGroup",
                "gamelift:SearchGameSessions",
                "gamelift:StartFleetActions",
                "gamelift:StartGameSessionPlacement",
                "gamelift:StartMatchBackfill",
                "gamelift:StartMatchmaking",
                "gamelift:StopFleetActions",
                "gamelift:StopGameSessionPlacement",
                "gamelift:StopMatchmaking",
                "gamelift:SuspendGameServerGroup",
                "gamelift:TagResource",
                "gamelift:UntagResource",
                "gamelift:UpdateAlias",
                "gamelift:UpdateBuild",
                "gamelift:UpdateFleetAttributes",
                "gamelift:UpdateFleetCapacity",
                "gamelift:UpdateFleetPortSettings",
                "gamelift:UpdateGameServer",
                "gamelift:UpdateGameServerGroup",
                "gamelift:UpdateGameSession",
                "gamelift:UpdateGameSessionQueue",
                "gamelift:UpdateMatchmakingConfiguration",
                "gamelift:UpdateRuntimeConfiguration",
                "gamelift:UpdateScript",
                "gamelift:ValidateMatchmakingRuleSet"
            ],
            "Resource": [
                "arn:aws:gamelift:<region>:<accountId>:<resourceType>/<resourceId>"
            ],
            "Condition": {
                "SomeCondition-vYXJK": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-WhUHv": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-SzehV": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS IoT Fleet Hub for Device Management",
            "Effect": "Allow",
            "Action": [
                "iotfleethub:CreateApplication",
                "iotfleethub:DeleteApplication",
                "iotfleethub:DescribeApplication",
                "iotfleethub:ListApplications",
                "iotfleethub:ListTagsForResource",
                "iotfleethub:TagResource",
                "iotfleethub:UntagResource",
                "iotfleethub:UpdateApplication"
            ],
            "Resource": [
                "arn:aws:iotfleethub:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-GKMLc": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-upRxA": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-YUTRr": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Route53 Recovery Controls",
            "Effect": "Allow",
            "Action": [
                "route53-recovery-control-config:CreateCluster",
                "route53-recovery-control-config:CreateControlPanel",
                "route53-recovery-control-config:CreateRoutingControl",
                "route53-recovery-control-config:CreateSafetyRule",
                "route53-recovery-control-config:DeleteCluster",
                "route53-recovery-control-config:DeleteControlPanel",
                "route53-recovery-control-config:DeleteRoutingControl",
                "route53-recovery-control-config:DeleteSafetyRule",
                "route53-recovery-control-config:DescribeCluster",
                "route53-recovery-control-config:DescribeControlPanel",
                "route53-recovery-control-config:DescribeRoutingControl",
                "route53-recovery-control-config:DescribeRoutingControlByName",
                "route53-recovery-control-config:DescribeSafetyRule",
                "route53-recovery-control-config:ListAssociatedRoute53HealthChecks",
                "route53-recovery-control-config:ListClusters",
                "route53-recovery-control-config:ListControlPanels",
                "route53-recovery-control-config:ListRoutingControls",
                "route53-recovery-control-config:ListSafetyRules",
                "route53-recovery-control-config:UpdateControlPanel",
                "route53-recovery-control-config:UpdateRoutingControl",
                "route53-recovery-control-config:UpdateSafetyRule"
            ],
            "Resource": [
                "arn:${Partition}:route53-recovery-control::${AccountId}:${ResourceType}/${ResourceName}"
            ]
        },
        {
            "Sid": "AWS OpsWorks Configuration Management",
            "Effect": "Allow",
            "Action": [
                "opsworks-cm:AssociateNode",
                "opsworks-cm:CreateBackup",
                "opsworks-cm:CreateServer",
                "opsworks-cm:DeleteBackup",
                "opsworks-cm:DeleteServer",
                "opsworks-cm:DescribeAccountAttributes",
                "opsworks-cm:DescribeBackups",
                "opsworks-cm:DescribeEvents",
                "opsworks-cm:DescribeNodeAssociationStatus",
                "opsworks-cm:DescribeServers",
                "opsworks-cm:DisassociateNode",
                "opsworks-cm:ExportServerEngineAttribute",
                "opsworks-cm:ListTagsForResource",
                "opsworks-cm:RestoreServer",
                "opsworks-cm:StartMaintenance",
                "opsworks-cm:TagResource",
                "opsworks-cm:UntagResource",
                "opsworks-cm:UpdateServer",
                "opsworks-cm:UpdateServerEngineAttributes"
            ],
            "Resource": [
                "arn:aws:opsworks-cm:<region>:<account>:<resourceType>/<id>"
            ]
        },
        {
            "Sid": "Amazon Timestream",
            "Effect": "Allow",
            "Action": [
                "timestream:CancelQuery",
                "timestream:CreateDatabase",
                "timestream:CreateTable",
                "timestream:DeleteDatabase",
                "timestream:DeleteTable",
                "timestream:DescribeDatabase",
                "timestream:DescribeEndpoints",
                "timestream:DescribeTable",
                "timestream:ListDatabases",
                "timestream:ListMeasures",
                "timestream:ListTables",
                "timestream:ListTagsForResource",
                "timestream:Select",
                "timestream:SelectValues",
                "timestream:TagResource",
                "timestream:UntagResource",
                "timestream:UpdateDatabase",
                "timestream:UpdateTable",
                "timestream:WriteRecords"
            ],
            "Resource": [
                "arn:${Partition}:timestream:${Region}:${Account}:database/${DatabaseName}/table/${TableName}"
            ],
            "Condition": {
                "SomeCondition-NHRFb": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-fcRLg": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-UpXqS": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon EC2 Instance Connect",
            "Effect": "Allow",
            "Action": [
                "ec2-instance-connect:SendSSHPublicKey",
                "ec2-instance-connect:SendSerialConsoleSSHPublicKey"
            ],
            "Resource": [
                "arn:aws:ec2:<region>:<account>:<resourceType>/<resourcePath>"
            ],
            "Condition": {
                "SomeCondition-vBHtj": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-XNaoZ": {
                    "ec2:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-OBYdy": {
                    "ec2:osuser": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon RDS IAM Authentication",
            "Effect": "Allow",
            "Action": [
                "rds-db:connect"
            ],
            "Resource": [
                "arn:aws:rds-db:<region>:<account-id>:dbuser:<dbi-resource-id>/<db-user-name>"
            ]
        },
        {
            "Sid": "Application Discovery",
            "Effect": "Allow",
            "Action": [
                "discovery:AssociateConfigurationItemsToApplication",
                "discovery:BatchDeleteImportData",
                "discovery:CreateApplication",
                "discovery:CreateTags",
                "discovery:DeleteApplications",
                "discovery:DeleteTags",
                "discovery:DescribeAgents",
                "discovery:DescribeConfigurations",
                "discovery:DescribeContinuousExports",
                "discovery:DescribeExportConfigurations",
                "discovery:DescribeExportTasks",
                "discovery:DescribeImportTasks",
                "discovery:DescribeTags",
                "discovery:DisassociateConfigurationItemsFromApplication",
                "discovery:ExportConfigurations",
                "discovery:GetDiscoverySummary",
                "discovery:ListConfigurations",
                "discovery:ListServerNeighbors",
                "discovery:StartContinuousExport",
                "discovery:StartDataCollectionByAgentIds",
                "discovery:StartExportTask",
                "discovery:StartImportTask",
                "discovery:StopContinuousExport",
                "discovery:StopDataCollectionByAgentIds",
                "discovery:UpdateApplication"
            ]
        },
        {
            "Sid": "Amazon Elastic Block Store",
            "Effect": "Allow",
            "Action": [
                "ebs:CompleteSnapshot",
                "ebs:GetSnapshotBlock",
                "ebs:ListChangedBlocks",
                "ebs:ListSnapshotBlocks",
                "ebs:PutSnapshotBlock",
                "ebs:StartSnapshot"
            ],
            "Resource": [
                "arn:aws:ebs:<region>:<account>:<resourceType>/<resourcePath>"
            ],
            "Condition": {
                "SomeCondition-pvNHD": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-ANLUV": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-xjRGV": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-geRrX": {
                    "ebs:Description": "...some value..."
                },
                "SomeCondition-JAHue": {
                    "ebs:ParentSnapshot": "...some value..."
                },
                "SomeCondition-uKYHc": {
                    "ebs:VolumeSize": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS CodeCommit",
            "Effect": "Allow",
            "Action": [
                "codecommit:AssociateApprovalRuleTemplateWithRepository",
                "codecommit:BatchAssociateApprovalRuleTemplateWithRepositories",
                "codecommit:BatchDescribeMergeConflicts",
                "codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories",
                "codecommit:BatchGetCommits",
                "codecommit:BatchGetPullRequests",
                "codecommit:BatchGetRepositories",
                "codecommit:CancelUploadArchive",
                "codecommit:CreateApprovalRuleTemplate",
                "codecommit:CreateBranch",
                "codecommit:CreateCommit",
                "codecommit:CreatePullRequest",
                "codecommit:CreatePullRequestApprovalRule",
                "codecommit:CreateRepository",
                "codecommit:CreateUnreferencedMergeCommit",
                "codecommit:DeleteApprovalRuleTemplate",
                "codecommit:DeleteBranch",
                "codecommit:DeleteCommentContent",
                "codecommit:DeleteFile",
                "codecommit:DeletePullRequestApprovalRule",
                "codecommit:DeleteRepository",
                "codecommit:DescribeMergeConflicts",
                "codecommit:DescribePullRequestEvents",
                "codecommit:DisassociateApprovalRuleTemplateFromRepository",
                "codecommit:EvaluatePullRequestApprovalRules",
                "codecommit:GetApprovalRuleTemplate",
                "codecommit:GetBlob",
                "codecommit:GetBranch",
                "codecommit:GetComment",
                "codecommit:GetCommentReactions",
                "codecommit:GetCommentsForComparedCommit",
                "codecommit:GetCommentsForPullRequest",
                "codecommit:GetCommit",
                "codecommit:GetCommitHistory",
                "codecommit:GetCommitsFromMergeBase",
                "codecommit:GetDifferences",
                "codecommit:GetFile",
                "codecommit:GetFolder",
                "codecommit:GetMergeCommit",
                "codecommit:GetMergeConflicts",
                "codecommit:GetMergeOptions",
                "codecommit:GetObjectIdentifier",
                "codecommit:GetPullRequest",
                "codecommit:GetPullRequestApprovalStates",
                "codecommit:GetPullRequestOverrideState",
                "codecommit:GetReferences",
                "codecommit:GetRepository",
                "codecommit:GetRepositoryTriggers",
                "codecommit:GetTree",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:GitPull",
                "codecommit:GitPush",
                "codecommit:ListApprovalRuleTemplates",
                "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
                "codecommit:ListBranches",
                "codecommit:ListPullRequests",
                "codecommit:ListRepositories",
                "codecommit:ListRepositoriesForApprovalRuleTemplate",
                "codecommit:ListTagsForResource",
                "codecommit:MergeBranchesByFastForward",
                "codecommit:MergeBranchesBySquash",
                "codecommit:MergeBranchesByThreeWay",
                "codecommit:MergePullRequestByFastForward",
                "codecommit:MergePullRequestBySquash",
                "codecommit:MergePullRequestByThreeWay",
                "codecommit:OverridePullRequestApprovalRules",
                "codecommit:PostCommentForComparedCommit",
                "codecommit:PostCommentForPullRequest",
                "codecommit:PostCommentReply",
                "codecommit:PutCommentReaction",
                "codecommit:PutFile",
                "codecommit:PutRepositoryTriggers",
                "codecommit:TagResource",
                "codecommit:TestRepositoryTriggers",
                "codecommit:UntagResource",
                "codecommit:UpdateApprovalRuleTemplateContent",
                "codecommit:UpdateApprovalRuleTemplateDescription",
                "codecommit:UpdateApprovalRuleTemplateName",
                "codecommit:UpdateComment",
                "codecommit:UpdateDefaultBranch",
                "codecommit:UpdatePullRequestApprovalRuleContent",
                "codecommit:UpdatePullRequestApprovalState",
                "codecommit:UpdatePullRequestDescription",
                "codecommit:UpdatePullRequestStatus",
                "codecommit:UpdatePullRequestTitle",
                "codecommit:UpdateRepositoryDescription",
                "codecommit:UpdateRepositoryName",
                "codecommit:UploadArchive"
            ],
            "Resource": [
                "arn:aws:codecommit:<region>:<account_ID>:<repository_name>"
            ],
            "Condition": {
                "SomeCondition-MSGlL": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-jvrli": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-JkGTq": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-Kevjm": {
                    "codecommit:References": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon CodeGuru Profiler",
            "Effect": "Allow",
            "Action": [
                "codeguru-profiler:AddNotificationChannels",
                "codeguru-profiler:BatchGetFrameMetricData",
                "codeguru-profiler:ConfigureAgent",
                "codeguru-profiler:CreateProfilingGroup",
                "codeguru-profiler:DeleteProfilingGroup",
                "codeguru-profiler:DescribeProfilingGroup",
                "codeguru-profiler:GetFindingsReportAccountSummary",
                "codeguru-profiler:GetNotificationConfiguration",
                "codeguru-profiler:GetPolicy",
                "codeguru-profiler:GetProfile",
                "codeguru-profiler:GetRecommendations",
                "codeguru-profiler:ListFindingsReports",
                "codeguru-profiler:ListProfileTimes",
                "codeguru-profiler:ListProfilingGroups",
                "codeguru-profiler:ListTagsForResource",
                "codeguru-profiler:PostAgentProfile",
                "codeguru-profiler:PutPermission",
                "codeguru-profiler:RemoveNotificationChannel",
                "codeguru-profiler:RemovePermission",
                "codeguru-profiler:SubmitFeedback",
                "codeguru-profiler:TagResource",
                "codeguru-profiler:UntagResource",
                "codeguru-profiler:UpdateProfilingGroup"
            ],
            "Resource": [
                "arn:aws:codeguru-profiler:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-wxyPS": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-fmjWI": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-yTZeb": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS IoT Core Device Advisor",
            "Effect": "Allow",
            "Action": [
                "iotdeviceadvisor:CreateSuiteDefinition",
                "iotdeviceadvisor:DeleteSuiteDefinition",
                "iotdeviceadvisor:GetSuiteDefinition",
                "iotdeviceadvisor:GetSuiteRun",
                "iotdeviceadvisor:GetSuiteRunReport",
                "iotdeviceadvisor:ListSuiteDefinitions",
                "iotdeviceadvisor:ListSuiteRuns",
                "iotdeviceadvisor:ListTagsForResource",
                "iotdeviceadvisor:StartSuiteRun",
                "iotdeviceadvisor:StopSuiteRun",
                "iotdeviceadvisor:TagResource",
                "iotdeviceadvisor:UntagResource",
                "iotdeviceadvisor:UpdateSuiteDefinition"
            ],
            "Resource": [
                "arn:${Partition}:iotdeviceadvisor:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-oXEZf": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-wGzNl": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-Poeac": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon SNS",
            "Effect": "Allow",
            "Action": [
                "sns:AddPermission",
                "sns:CheckIfPhoneNumberIsOptedOut",
                "sns:ConfirmSubscription",
                "sns:CreatePlatformApplication",
                "sns:CreatePlatformEndpoint",
                "sns:CreateSMSSandboxPhoneNumber",
                "sns:CreateTopic",
                "sns:DeleteEndpoint",
                "sns:DeletePlatformApplication",
                "sns:DeleteSMSSandboxPhoneNumber",
                "sns:DeleteTopic",
                "sns:GetEndpointAttributes",
                "sns:GetPlatformApplicationAttributes",
                "sns:GetSMSAttributes",
                "sns:GetSMSSandboxAccountStatus",
                "sns:GetSubscriptionAttributes",
                "sns:GetTopicAttributes",
                "sns:ListEndpointsByPlatformApplication",
                "sns:ListOriginationNumbers",
                "sns:ListPhoneNumbersOptedOut",
                "sns:ListPlatformApplications",
                "sns:ListSMSSandboxPhoneNumbers",
                "sns:ListSubscriptions",
                "sns:ListSubscriptionsByTopic",
                "sns:ListTagsForResource",
                "sns:ListTopics",
                "sns:OptInPhoneNumber",
                "sns:Publish",
                "sns:RemovePermission",
                "sns:SetEndpointAttributes",
                "sns:SetPlatformApplicationAttributes",
                "sns:SetSMSAttributes",
                "sns:SetSubscriptionAttributes",
                "sns:SetTopicAttributes",
                "sns:Subscribe",
                "sns:TagResource",
                "sns:Unsubscribe",
                "sns:UntagResource",
                "sns:VerifySMSSandboxPhoneNumber"
            ],
            "Resource": [
                "arn:aws:sns:<region>:<account_ID>:<topic_name>"
            ],
            "Condition": {
                "SomeCondition-XZYkx": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-NMyxc": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-OaChi": {
                    "sns:Endpoint": "...some value..."
                },
                "SomeCondition-sRpxH": {
                    "sns:Protocol": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Cognito User Pools",
            "Effect": "Allow",
            "Action": [
                "cognito-idp:AddCustomAttributes",
                "cognito-idp:AdminAddUserToGroup",
                "cognito-idp:AdminConfirmSignUp",
                "cognito-idp:AdminCreateUser",
                "cognito-idp:AdminDeleteUser",
                "cognito-idp:AdminDeleteUserAttributes",
                "cognito-idp:AdminDisableProviderForUser",
                "cognito-idp:AdminDisableUser",
                "cognito-idp:AdminEnableUser",
                "cognito-idp:AdminForgetDevice",
                "cognito-idp:AdminGetDevice",
                "cognito-idp:AdminGetUser",
                "cognito-idp:AdminInitiateAuth",
                "cognito-idp:AdminLinkProviderForUser",
                "cognito-idp:AdminListDevices",
                "cognito-idp:AdminListGroupsForUser",
                "cognito-idp:AdminListUserAuthEvents",
                "cognito-idp:AdminRemoveUserFromGroup",
                "cognito-idp:AdminResetUserPassword",
                "cognito-idp:AdminRespondToAuthChallenge",
                "cognito-idp:AdminSetUserMFAPreference",
                "cognito-idp:AdminSetUserPassword",
                "cognito-idp:AdminSetUserSettings",
                "cognito-idp:AdminUpdateAuthEventFeedback",
                "cognito-idp:AdminUpdateDeviceStatus",
                "cognito-idp:AdminUpdateUserAttributes",
                "cognito-idp:AdminUserGlobalSignOut",
                "cognito-idp:AssociateSoftwareToken",
                "cognito-idp:ChangePassword",
                "cognito-idp:ConfirmDevice",
                "cognito-idp:ConfirmForgotPassword",
                "cognito-idp:ConfirmSignUp",
                "cognito-idp:CreateGroup",
                "cognito-idp:CreateIdentityProvider",
                "cognito-idp:CreateResourceServer",
                "cognito-idp:CreateUserImportJob",
                "cognito-idp:CreateUserPool",
                "cognito-idp:CreateUserPoolClient",
                "cognito-idp:CreateUserPoolDomain",
                "cognito-idp:DeleteGroup",
                "cognito-idp:DeleteIdentityProvider",
                "cognito-idp:DeleteResourceServer",
                "cognito-idp:DeleteUser",
                "cognito-idp:DeleteUserAttributes",
                "cognito-idp:DeleteUserPool",
                "cognito-idp:DeleteUserPoolClient",
                "cognito-idp:DeleteUserPoolDomain",
                "cognito-idp:DescribeIdentityProvider",
                "cognito-idp:DescribeResourceServer",
                "cognito-idp:DescribeRiskConfiguration",
                "cognito-idp:DescribeUserImportJob",
                "cognito-idp:DescribeUserPool",
                "cognito-idp:DescribeUserPoolClient",
                "cognito-idp:DescribeUserPoolDomain",
                "cognito-idp:ForgetDevice",
                "cognito-idp:ForgotPassword",
                "cognito-idp:GetCSVHeader",
                "cognito-idp:GetDevice",
                "cognito-idp:GetGroup",
                "cognito-idp:GetIdentityProviderByIdentifier",
                "cognito-idp:GetSigningCertificate",
                "cognito-idp:GetUICustomization",
                "cognito-idp:GetUser",
                "cognito-idp:GetUserAttributeVerificationCode",
                "cognito-idp:GetUserPoolMfaConfig",
                "cognito-idp:GlobalSignOut",
                "cognito-idp:InitiateAuth",
                "cognito-idp:ListDevices",
                "cognito-idp:ListGroups",
                "cognito-idp:ListIdentityProviders",
                "cognito-idp:ListResourceServers",
                "cognito-idp:ListTagsForResource",
                "cognito-idp:ListUserImportJobs",
                "cognito-idp:ListUserPoolClients",
                "cognito-idp:ListUserPools",
                "cognito-idp:ListUsers",
                "cognito-idp:ListUsersInGroup",
                "cognito-idp:ResendConfirmationCode",
                "cognito-idp:RespondToAuthChallenge",
                "cognito-idp:SetRiskConfiguration",
                "cognito-idp:SetUICustomization",
                "cognito-idp:SetUserMFAPreference",
                "cognito-idp:SetUserPoolMfaConfig",
                "cognito-idp:SetUserSettings",
                "cognito-idp:SignUp",
                "cognito-idp:StartUserImportJob",
                "cognito-idp:StopUserImportJob",
                "cognito-idp:TagResource",
                "cognito-idp:UntagResource",
                "cognito-idp:UpdateAuthEventFeedback",
                "cognito-idp:UpdateDeviceStatus",
                "cognito-idp:UpdateGroup",
                "cognito-idp:UpdateIdentityProvider",
                "cognito-idp:UpdateResourceServer",
                "cognito-idp:UpdateUserAttributes",
                "cognito-idp:UpdateUserPool",
                "cognito-idp:UpdateUserPoolClient",
                "cognito-idp:UpdateUserPoolDomain",
                "cognito-idp:VerifySoftwareToken",
                "cognito-idp:VerifyUserAttribute"
            ],
            "Resource": [
                "arn:aws:cognito-idp:<region>:<account>:<resourceType>/<resourcePath>:"
            ],
            "Condition": {
                "SomeCondition-CocOW": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-tghDP": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-FOIDT": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Tag Editor",
            "Effect": "Allow",
            "Action": [
                "resource-explorer:ListResourceTypes",
                "resource-explorer:ListResources",
                "resource-explorer:ListTags"
            ]
        },
        {
            "Sid": "AWS Elastic Beanstalk",
            "Effect": "Allow",
            "Action": [
                "elasticbeanstalk:AbortEnvironmentUpdate",
                "elasticbeanstalk:AddTags",
                "elasticbeanstalk:ApplyEnvironmentManagedAction",
                "elasticbeanstalk:AssociateEnvironmentOperationsRole",
                "elasticbeanstalk:CheckDNSAvailability",
                "elasticbeanstalk:ComposeEnvironments",
                "elasticbeanstalk:CreateApplication",
                "elasticbeanstalk:CreateApplicationVersion",
                "elasticbeanstalk:CreateConfigurationTemplate",
                "elasticbeanstalk:CreateEnvironment",
                "elasticbeanstalk:CreatePlatformVersion",
                "elasticbeanstalk:CreateStorageLocation",
                "elasticbeanstalk:DeleteApplication",
                "elasticbeanstalk:DeleteApplicationVersion",
                "elasticbeanstalk:DeleteConfigurationTemplate",
                "elasticbeanstalk:DeleteEnvironmentConfiguration",
                "elasticbeanstalk:DeletePlatformVersion",
                "elasticbeanstalk:DescribeAccountAttributes",
                "elasticbeanstalk:DescribeApplicationVersions",
                "elasticbeanstalk:DescribeApplications",
                "elasticbeanstalk:DescribeConfigurationOptions",
                "elasticbeanstalk:DescribeConfigurationSettings",
                "elasticbeanstalk:DescribeEnvironmentHealth",
                "elasticbeanstalk:DescribeEnvironmentManagedActionHistory",
                "elasticbeanstalk:DescribeEnvironmentManagedActions",
                "elasticbeanstalk:DescribeEnvironmentResources",
                "elasticbeanstalk:DescribeEnvironments",
                "elasticbeanstalk:DescribeEvents",
                "elasticbeanstalk:DescribeInstancesHealth",
                "elasticbeanstalk:DescribePlatformVersion",
                "elasticbeanstalk:DisassociateEnvironmentOperationsRole",
                "elasticbeanstalk:ListAvailableSolutionStacks",
                "elasticbeanstalk:ListPlatformBranches",
                "elasticbeanstalk:ListPlatformVersions",
                "elasticbeanstalk:ListTagsForResource",
                "elasticbeanstalk:PutInstanceStatistics",
                "elasticbeanstalk:RebuildEnvironment",
                "elasticbeanstalk:RemoveTags",
                "elasticbeanstalk:RequestEnvironmentInfo",
                "elasticbeanstalk:RestartAppServer",
                "elasticbeanstalk:RetrieveEnvironmentInfo",
                "elasticbeanstalk:SwapEnvironmentCNAMEs",
                "elasticbeanstalk:TerminateEnvironment",
                "elasticbeanstalk:UpdateApplication",
                "elasticbeanstalk:UpdateApplicationResourceLifecycle",
                "elasticbeanstalk:UpdateApplicationVersion",
                "elasticbeanstalk:UpdateConfigurationTemplate",
                "elasticbeanstalk:UpdateEnvironment",
                "elasticbeanstalk:ValidateConfigurationSettings"
            ],
            "Resource": [
                "arn:aws:elasticbeanstalk:<region>:<account_ID>:<resource_type>/<path_to_resource>"
            ],
            "Condition": {
                "SomeCondition-NXmWF": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-HaRUY": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-XovzS": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-KnsrC": {
                    "elasticbeanstalk:FromApplication": "...some value..."
                },
                "SomeCondition-vyhIA": {
                    "elasticbeanstalk:FromApplicationVersion": "...some value..."
                },
                "SomeCondition-LEOUz": {
                    "elasticbeanstalk:FromConfigurationTemplate": "...some value..."
                },
                "SomeCondition-YJQGX": {
                    "elasticbeanstalk:FromEnvironment": "...some value..."
                },
                "SomeCondition-MvRJg": {
                    "elasticbeanstalk:FromPlatform": "...some value..."
                },
                "SomeCondition-lqdkW": {
                    "elasticbeanstalk:FromSolutionStack": "...some value..."
                },
                "SomeCondition-Nmuyh": {
                    "elasticbeanstalk:InApplication": "...some value..."
                }
            }
        },
        {
            "Sid": "CloudWatch Application Insights",
            "Effect": "Allow",
            "Action": [
                "applicationinsights:CreateApplication",
                "applicationinsights:CreateComponent",
                "applicationinsights:CreateLogPattern",
                "applicationinsights:DeleteApplication",
                "applicationinsights:DeleteComponent",
                "applicationinsights:DeleteLogPattern",
                "applicationinsights:DescribeApplication",
                "applicationinsights:DescribeComponent",
                "applicationinsights:DescribeComponentConfiguration",
                "applicationinsights:DescribeComponentConfigurationRecommendation",
                "applicationinsights:DescribeLogPattern",
                "applicationinsights:DescribeObservation",
                "applicationinsights:DescribeProblem",
                "applicationinsights:DescribeProblemObservations",
                "applicationinsights:ListApplications",
                "applicationinsights:ListComponents",
                "applicationinsights:ListConfigurationHistory",
                "applicationinsights:ListLogPatternSets",
                "applicationinsights:ListLogPatterns",
                "applicationinsights:ListProblems",
                "applicationinsights:ListTagsForResource",
                "applicationinsights:TagResource",
                "applicationinsights:UntagResource",
                "applicationinsights:UpdateApplication",
                "applicationinsights:UpdateComponent",
                "applicationinsights:UpdateComponentConfiguration",
                "applicationinsights:UpdateLogPattern"
            ]
        },
        {
            "Sid": "Elastic Load Balancing V2",
            "Effect": "Allow",
            "Action": [
                "elasticloadbalancing:AddListenerCertificates",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:DeleteRule",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:DescribeAccountLimits",
                "elasticloadbalancing:DescribeListenerCertificates",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeTags",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:ModifyRule",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:RemoveListenerCertificates",
                "elasticloadbalancing:RemoveTags",
                "elasticloadbalancing:SetIpAddressType",
                "elasticloadbalancing:SetRulePriorities",
                "elasticloadbalancing:SetSecurityGroups",
                "elasticloadbalancing:SetSubnets",
                "elasticloadbalancing:SetWebAcl"
            ],
            "Resource": [
                "arn:aws:elasticloadbalancing:<region>:<account>:<resourceType>/<resourceid>"
            ],
            "Condition": {
                "SomeCondition-SuvOp": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-blnIT": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-ODCGU": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-KAFRe": {
                    "elasticloadbalancing:ResourceTag/${TagKey}": "...some value..."
                }
            }
        },
        {
            "Sid": "Elastic Load Balancing",
            "Effect": "Allow",
            "Action": [
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
                "elasticloadbalancing:AttachLoadBalancerToSubnets",
                "elasticloadbalancing:ConfigureHealthCheck",
                "elasticloadbalancing:CreateAppCookieStickinessPolicy",
                "elasticloadbalancing:CreateLBCookieStickinessPolicy",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateLoadBalancerListeners",
                "elasticloadbalancing:CreateLoadBalancerPolicy",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:DeleteLoadBalancerListeners",
                "elasticloadbalancing:DeleteLoadBalancerPolicy",
                "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                "elasticloadbalancing:DescribeInstanceHealth",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeLoadBalancerPolicies",
                "elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeTags",
                "elasticloadbalancing:DetachLoadBalancerFromSubnets",
                "elasticloadbalancing:DisableAvailabilityZonesForLoadBalancer",
                "elasticloadbalancing:EnableAvailabilityZonesForLoadBalancer",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                "elasticloadbalancing:RemoveTags",
                "elasticloadbalancing:SetLoadBalancerListenerSSLCertificate",
                "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer",
                "elasticloadbalancing:SetLoadBalancerPoliciesOfListener"
            ],
            "Resource": [
                "arn:aws:elasticloadbalancing:<region>:<account>:<resourceType>/<resourceid>"
            ],
            "Condition": {
                "SomeCondition-knTyF": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-DhTcM": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-FJjow": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-wXYeO": {
                    "elasticloadbalancing:ResourceTag/": "...some value..."
                },
                "SomeCondition-HUvMS": {
                    "elasticloadbalancing:ResourceTag/${TagKey}": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Lookout for Equipment",
            "Effect": "Allow",
            "Action": [
                "lookoutequipment:CreateDataset",
                "lookoutequipment:CreateInferenceScheduler",
                "lookoutequipment:CreateModel",
                "lookoutequipment:DeleteDataset",
                "lookoutequipment:DeleteInferenceScheduler",
                "lookoutequipment:DeleteModel",
                "lookoutequipment:DescribeDataIngestionJob",
                "lookoutequipment:DescribeDataset",
                "lookoutequipment:DescribeInferenceScheduler",
                "lookoutequipment:DescribeModel",
                "lookoutequipment:ListDataIngestionJobs",
                "lookoutequipment:ListDatasets",
                "lookoutequipment:ListInferenceExecutions",
                "lookoutequipment:ListInferenceSchedulers",
                "lookoutequipment:ListModels",
                "lookoutequipment:ListTagsForResource",
                "lookoutequipment:StartDataIngestionJob",
                "lookoutequipment:StartInferenceScheduler",
                "lookoutequipment:StopInferenceScheduler",
                "lookoutequipment:TagResource",
                "lookoutequipment:UntagResource",
                "lookoutequipment:UpdateInferenceScheduler"
            ],
            "Resource": [
                "arn:aws:lookoutequipment:${Region}:${AccountId}:${ResourceType}/${ResourceName}/${ResourceId}"
            ],
            "Condition": {
                "SomeCondition-NAIWf": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-OXMvC": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-YpISB": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Lookout for Metrics",
            "Effect": "Allow",
            "Action": [
                "lookoutmetrics:ActivateAnomalyDetector",
                "lookoutmetrics:BackTestAnomalyDetector",
                "lookoutmetrics:CreateAlert",
                "lookoutmetrics:CreateAnomalyDetector",
                "lookoutmetrics:CreateMetricSet",
                "lookoutmetrics:DeleteAlert",
                "lookoutmetrics:DeleteAnomalyDetector",
                "lookoutmetrics:DescribeAlert",
                "lookoutmetrics:DescribeAnomalyDetectionExecutions",
                "lookoutmetrics:DescribeAnomalyDetector",
                "lookoutmetrics:DescribeMetricSet",
                "lookoutmetrics:GetAnomalyGroup",
                "lookoutmetrics:GetDataQualityMetrics",
                "lookoutmetrics:GetFeedback",
                "lookoutmetrics:GetSampleData",
                "lookoutmetrics:ListAlerts",
                "lookoutmetrics:ListAnomalyDetectors",
                "lookoutmetrics:ListAnomalyGroupSummaries",
                "lookoutmetrics:ListAnomalyGroupTimeSeries",
                "lookoutmetrics:ListMetricSets",
                "lookoutmetrics:ListTagsForResource",
                "lookoutmetrics:PutFeedback",
                "lookoutmetrics:TagResource",
                "lookoutmetrics:UntagResource",
                "lookoutmetrics:UpdateAnomalyDetector",
                "lookoutmetrics:UpdateMetricSet"
            ],
            "Resource": [
                "arn:aws:lookoutmetrics:<region>:<account-id>:<resource-type>:<resource_name>"
            ],
            "Condition": {
                "SomeCondition-TcHqd": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-UwKfC": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-pvjnX": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Marketplace Commerce Analytics Service",
            "Effect": "Allow",
            "Action": [
                "marketplacecommerceanalytics:GenerateDataSet",
                "marketplacecommerceanalytics:StartSupportDataExport"
            ]
        },
        {
            "Sid": "Amazon Translate",
            "Effect": "Allow",
            "Action": [
                "translate:CreateParallelData",
                "translate:DeleteParallelData",
                "translate:DeleteTerminology",
                "translate:DescribeTextTranslationJob",
                "translate:GetParallelData",
                "translate:GetTerminology",
                "translate:ImportTerminology",
                "translate:ListParallelData",
                "translate:ListTerminologies",
                "translate:ListTextTranslationJobs",
                "translate:StartTextTranslationJob",
                "translate:StopTextTranslationJob",
                "translate:TranslateText",
                "translate:UpdateParallelData"
            ]
        },
        {
            "Sid": "AWS WAF Regional",
            "Effect": "Allow",
            "Action": [
                "waf-regional:AssociateWebACL",
                "waf-regional:CreateByteMatchSet",
                "waf-regional:CreateGeoMatchSet",
                "waf-regional:CreateIPSet",
                "waf-regional:CreateRateBasedRule",
                "waf-regional:CreateRegexMatchSet",
                "waf-regional:CreateRegexPatternSet",
                "waf-regional:CreateRule",
                "waf-regional:CreateRuleGroup",
                "waf-regional:CreateSizeConstraintSet",
                "waf-regional:CreateSqlInjectionMatchSet",
                "waf-regional:CreateWebACL",
                "waf-regional:CreateWebACLMigrationStack",
                "waf-regional:CreateXssMatchSet",
                "waf-regional:DeleteByteMatchSet",
                "waf-regional:DeleteGeoMatchSet",
                "waf-regional:DeleteIPSet",
                "waf-regional:DeleteLoggingConfiguration",
                "waf-regional:DeletePermissionPolicy",
                "waf-regional:DeleteRateBasedRule",
                "waf-regional:DeleteRegexMatchSet",
                "waf-regional:DeleteRegexPatternSet",
                "waf-regional:DeleteRule",
                "waf-regional:DeleteRuleGroup",
                "waf-regional:DeleteSizeConstraintSet",
                "waf-regional:DeleteSqlInjectionMatchSet",
                "waf-regional:DeleteWebACL",
                "waf-regional:DeleteXssMatchSet",
                "waf-regional:DisassociateWebACL",
                "waf-regional:GetByteMatchSet",
                "waf-regional:GetChangeToken",
                "waf-regional:GetChangeTokenStatus",
                "waf-regional:GetGeoMatchSet",
                "waf-regional:GetIPSet",
                "waf-regional:GetLoggingConfiguration",
                "waf-regional:GetPermissionPolicy",
                "waf-regional:GetRateBasedRule",
                "waf-regional:GetRateBasedRuleManagedKeys",
                "waf-regional:GetRegexMatchSet",
                "waf-regional:GetRegexPatternSet",
                "waf-regional:GetRule",
                "waf-regional:GetRuleGroup",
                "waf-regional:GetSampledRequests",
                "waf-regional:GetSizeConstraintSet",
                "waf-regional:GetSqlInjectionMatchSet",
                "waf-regional:GetWebACL",
                "waf-regional:GetWebACLForResource",
                "waf-regional:GetXssMatchSet",
                "waf-regional:ListActivatedRulesInRuleGroup",
                "waf-regional:ListByteMatchSets",
                "waf-regional:ListGeoMatchSets",
                "waf-regional:ListIPSets",
                "waf-regional:ListLoggingConfigurations",
                "waf-regional:ListRateBasedRules",
                "waf-regional:ListRegexMatchSets",
                "waf-regional:ListRegexPatternSets",
                "waf-regional:ListResourcesForWebACL",
                "waf-regional:ListRuleGroups",
                "waf-regional:ListRules",
                "waf-regional:ListSizeConstraintSets",
                "waf-regional:ListSqlInjectionMatchSets",
                "waf-regional:ListSubscribedRuleGroups",
                "waf-regional:ListTagsForResource",
                "waf-regional:ListWebACLs",
                "waf-regional:ListXssMatchSets",
                "waf-regional:PutLoggingConfiguration",
                "waf-regional:PutPermissionPolicy",
                "waf-regional:TagResource",
                "waf-regional:UntagResource",
                "waf-regional:UpdateByteMatchSet",
                "waf-regional:UpdateGeoMatchSet",
                "waf-regional:UpdateIPSet",
                "waf-regional:UpdateRateBasedRule",
                "waf-regional:UpdateRegexMatchSet",
                "waf-regional:UpdateRegexPatternSet",
                "waf-regional:UpdateRule",
                "waf-regional:UpdateRuleGroup",
                "waf-regional:UpdateSizeConstraintSet",
                "waf-regional:UpdateSqlInjectionMatchSet",
                "waf-regional:UpdateWebACL",
                "waf-regional:UpdateXssMatchSet"
            ],
            "Resource": [
                "arn:aws:waf-regional:<region>:<account_ID>:<resource>/<resource_id>"
            ],
            "Condition": {
                "SomeCondition-YPmuB": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-ipkco": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-xXQSL": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Elastic Container Service",
            "Effect": "Allow",
            "Action": [
                "ecs:CreateCapacityProvider",
                "ecs:CreateCluster",
                "ecs:CreateService",
                "ecs:CreateTaskSet",
                "ecs:DeleteAccountSetting",
                "ecs:DeleteAttributes",
                "ecs:DeleteCapacityProvider",
                "ecs:DeleteCluster",
                "ecs:DeleteService",
                "ecs:DeleteTaskSet",
                "ecs:DeregisterContainerInstance",
                "ecs:DeregisterTaskDefinition",
                "ecs:DescribeCapacityProviders",
                "ecs:DescribeClusters",
                "ecs:DescribeContainerInstances",
                "ecs:DescribeServices",
                "ecs:DescribeTaskDefinition",
                "ecs:DescribeTaskSets",
                "ecs:DescribeTasks",
                "ecs:DiscoverPollEndpoint",
                "ecs:ExecuteCommand",
                "ecs:ListAccountSettings",
                "ecs:ListAttributes",
                "ecs:ListClusters",
                "ecs:ListContainerInstances",
                "ecs:ListServices",
                "ecs:ListTagsForResource",
                "ecs:ListTaskDefinitionFamilies",
                "ecs:ListTaskDefinitions",
                "ecs:ListTasks",
                "ecs:Poll",
                "ecs:PutAccountSetting",
                "ecs:PutAccountSettingDefault",
                "ecs:PutAttributes",
                "ecs:PutClusterCapacityProviders",
                "ecs:RegisterContainerInstance",
                "ecs:RegisterTaskDefinition",
                "ecs:RunTask",
                "ecs:StartTask",
                "ecs:StartTelemetrySession",
                "ecs:StopTask",
                "ecs:SubmitAttachmentStateChanges",
                "ecs:SubmitContainerStateChange",
                "ecs:SubmitTaskStateChange",
                "ecs:TagResource",
                "ecs:UntagResource",
                "ecs:UpdateCapacityProvider",
                "ecs:UpdateCluster",
                "ecs:UpdateClusterSettings",
                "ecs:UpdateContainerAgent",
                "ecs:UpdateContainerInstancesState",
                "ecs:UpdateService",
                "ecs:UpdateServicePrimaryTaskSet",
                "ecs:UpdateTaskSet"
            ],
            "Resource": [
                "arn:aws:ecs:<region>:<account_ID>:<resource_type>/<relative_ID>"
            ],
            "Condition": {
                "SomeCondition-AXxqP": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-pUyGx": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-mwOZo": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-bMasZ": {
                    "ecs:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-ZrFyo": {
                    "ecs:capacity-provider": "...some value..."
                },
                "SomeCondition-okYET": {
                    "ecs:cluster": "...some value..."
                },
                "SomeCondition-PvFeR": {
                    "ecs:container-instances": "...some value..."
                },
                "SomeCondition-MXPIb": {
                    "ecs:container-name": "...some value..."
                },
                "SomeCondition-FxTLY": {
                    "ecs:enable-execute-command": "...some value..."
                },
                "SomeCondition-YFSyQ": {
                    "ecs:service": "...some value..."
                },
                "SomeCondition-OvwTH": {
                    "ecs:task": "...some value..."
                },
                "SomeCondition-euSQT": {
                    "ecs:task-definition": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Elastic Container Registry",
            "Effect": "Allow",
            "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:BatchDeleteImage",
                "ecr:BatchGetImage",
                "ecr:CompleteLayerUpload",
                "ecr:CreateRepository",
                "ecr:DeleteLifecyclePolicy",
                "ecr:DeleteRegistryPolicy",
                "ecr:DeleteRepository",
                "ecr:DeleteRepositoryPolicy",
                "ecr:DescribeImageScanFindings",
                "ecr:DescribeImages",
                "ecr:DescribeRegistry",
                "ecr:DescribeRepositories",
                "ecr:GetAuthorizationToken",
                "ecr:GetDownloadUrlForLayer",
                "ecr:GetLifecyclePolicy",
                "ecr:GetLifecyclePolicyPreview",
                "ecr:GetRegistryPolicy",
                "ecr:GetRepositoryPolicy",
                "ecr:InitiateLayerUpload",
                "ecr:ListImages",
                "ecr:ListTagsForResource",
                "ecr:PutImage",
                "ecr:PutImageScanningConfiguration",
                "ecr:PutImageTagMutability",
                "ecr:PutLifecyclePolicy",
                "ecr:PutRegistryPolicy",
                "ecr:PutReplicationConfiguration",
                "ecr:ReplicateImage",
                "ecr:SetRepositoryPolicy",
                "ecr:StartImageScan",
                "ecr:StartLifecyclePolicyPreview",
                "ecr:TagResource",
                "ecr:UntagResource",
                "ecr:UploadLayerPart"
            ],
            "Resource": [
                "arn:aws:ecr:<region>:<account_ID>:repository/<repository_name>"
            ],
            "Condition": {
                "SomeCondition-WctIo": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-OQGBn": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-xfQTi": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-PbwIU": {
                    "ecr:ResourceTag/${TagKey}": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon DynamoDB Accelerator (DAX)",
            "Effect": "Allow",
            "Action": [
                "dax:BatchGetItem",
                "dax:BatchWriteItem",
                "dax:ConditionCheckItem",
                "dax:CreateCluster",
                "dax:CreateParameterGroup",
                "dax:CreateSubnetGroup",
                "dax:DecreaseReplicationFactor",
                "dax:DeleteCluster",
                "dax:DeleteItem",
                "dax:DeleteParameterGroup",
                "dax:DeleteSubnetGroup",
                "dax:DescribeClusters",
                "dax:DescribeDefaultParameters",
                "dax:DescribeEvents",
                "dax:DescribeParameterGroups",
                "dax:DescribeParameters",
                "dax:DescribeSubnetGroups",
                "dax:GetItem",
                "dax:IncreaseReplicationFactor",
                "dax:ListTags",
                "dax:PutItem",
                "dax:Query",
                "dax:RebootNode",
                "dax:Scan",
                "dax:TagResource",
                "dax:UntagResource",
                "dax:UpdateCluster",
                "dax:UpdateItem",
                "dax:UpdateParameterGroup",
                "dax:UpdateSubnetGroup"
            ],
            "Resource": [
                "arn:aws:dax:<region>:<accountId>:cache/<clustername>"
            ],
            "Condition": {
                "SomeCondition-xkNcn": {
                    "dax:EnclosingOperation": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Resource Group Tagging API",
            "Effect": "Allow",
            "Action": [
                "tag:DescribeReportCreation",
                "tag:GetComplianceSummary",
                "tag:GetResources",
                "tag:GetTagKeys",
                "tag:GetTagValues",
                "tag:StartReportCreation",
                "tag:TagResources",
                "tag:UntagResources"
            ]
        },
        {
            "Sid": "Amazon CloudWatch Logs",
            "Effect": "Allow",
            "Action": [
                "logs:AssociateKmsKey",
                "logs:CancelExportTask",
                "logs:CreateExportTask",
                "logs:CreateLogDelivery",
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DeleteDestination",
                "logs:DeleteLogDelivery",
                "logs:DeleteLogGroup",
                "logs:DeleteLogStream",
                "logs:DeleteMetricFilter",
                "logs:DeleteQueryDefinition",
                "logs:DeleteResourcePolicy",
                "logs:DeleteRetentionPolicy",
                "logs:DeleteSubscriptionFilter",
                "logs:DescribeDestinations",
                "logs:DescribeExportTasks",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams",
                "logs:DescribeMetricFilters",
                "logs:DescribeQueries",
                "logs:DescribeQueryDefinitions",
                "logs:DescribeResourcePolicies",
                "logs:DescribeSubscriptionFilters",
                "logs:DisassociateKmsKey",
                "logs:FilterLogEvents",
                "logs:GetLogDelivery",
                "logs:GetLogEvents",
                "logs:GetLogGroupFields",
                "logs:GetLogRecord",
                "logs:GetQueryResults",
                "logs:ListLogDeliveries",
                "logs:ListTagsLogGroup",
                "logs:PutDestination",
                "logs:PutDestinationPolicy",
                "logs:PutLogEvents",
                "logs:PutMetricFilter",
                "logs:PutQueryDefinition",
                "logs:PutResourcePolicy",
                "logs:PutRetentionPolicy",
                "logs:PutSubscriptionFilter",
                "logs:StartQuery",
                "logs:StopQuery",
                "logs:TagLogGroup",
                "logs:TestMetricFilter",
                "logs:UntagLogGroup",
                "logs:UpdateLogDelivery"
            ],
            "Resource": [
                "arn:aws:logs:.+:.+:.+"
            ],
            "Condition": {
                "SomeCondition-taufy": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Service Catalog",
            "Effect": "Allow",
            "Action": [
                "servicecatalog:AcceptPortfolioShare",
                "servicecatalog:AssociateAttributeGroup",
                "servicecatalog:AssociateBudgetWithResource",
                "servicecatalog:AssociatePrincipalWithPortfolio",
                "servicecatalog:AssociateProductWithPortfolio",
                "servicecatalog:AssociateResource",
                "servicecatalog:AssociateServiceActionWithProvisioningArtifact",
                "servicecatalog:AssociateTagOptionWithResource",
                "servicecatalog:BatchAssociateServiceActionWithProvisioningArtifact",
                "servicecatalog:BatchDisassociateServiceActionFromProvisioningArtifact",
                "servicecatalog:CopyProduct",
                "servicecatalog:CreateApplication",
                "servicecatalog:CreateAttributeGroup",
                "servicecatalog:CreateConstraint",
                "servicecatalog:CreatePortfolio",
                "servicecatalog:CreatePortfolioShare",
                "servicecatalog:CreateProduct",
                "servicecatalog:CreateProvisionedProductPlan",
                "servicecatalog:CreateProvisioningArtifact",
                "servicecatalog:CreateServiceAction",
                "servicecatalog:CreateTagOption",
                "servicecatalog:DeleteApplication",
                "servicecatalog:DeleteAttributeGroup",
                "servicecatalog:DeleteConstraint",
                "servicecatalog:DeletePortfolio",
                "servicecatalog:DeletePortfolioShare",
                "servicecatalog:DeleteProduct",
                "servicecatalog:DeleteProvisionedProductPlan",
                "servicecatalog:DeleteProvisioningArtifact",
                "servicecatalog:DeleteServiceAction",
                "servicecatalog:DeleteTagOption",
                "servicecatalog:DescribeConstraint",
                "servicecatalog:DescribeCopyProductStatus",
                "servicecatalog:DescribePortfolio",
                "servicecatalog:DescribePortfolioShareStatus",
                "servicecatalog:DescribePortfolioShares",
                "servicecatalog:DescribeProduct",
                "servicecatalog:DescribeProductAsAdmin",
                "servicecatalog:DescribeProductView",
                "servicecatalog:DescribeProvisionedProduct",
                "servicecatalog:DescribeProvisionedProductPlan",
                "servicecatalog:DescribeProvisioningArtifact",
                "servicecatalog:DescribeProvisioningParameters",
                "servicecatalog:DescribeRecord",
                "servicecatalog:DescribeServiceAction",
                "servicecatalog:DescribeServiceActionExecutionParameters",
                "servicecatalog:DescribeTagOption",
                "servicecatalog:DisableAWSOrganizationsAccess",
                "servicecatalog:DisassociateAttributeGroup",
                "servicecatalog:DisassociateBudgetFromResource",
                "servicecatalog:DisassociatePrincipalFromPortfolio",
                "servicecatalog:DisassociateProductFromPortfolio",
                "servicecatalog:DisassociateResource",
                "servicecatalog:DisassociateServiceActionFromProvisioningArtifact",
                "servicecatalog:DisassociateTagOptionFromResource",
                "servicecatalog:EnableAWSOrganizationsAccess",
                "servicecatalog:ExecuteProvisionedProductPlan",
                "servicecatalog:ExecuteProvisionedProductServiceAction",
                "servicecatalog:GetAWSOrganizationsAccessStatus",
                "servicecatalog:GetApplication",
                "servicecatalog:GetAssociatedResource",
                "servicecatalog:GetAttributeGroup",
                "servicecatalog:GetProvisionedProductOutputs",
                "servicecatalog:ImportAsProvisionedProduct",
                "servicecatalog:ListAcceptedPortfolioShares",
                "servicecatalog:ListApplications",
                "servicecatalog:ListAssociatedAttributeGroups",
                "servicecatalog:ListAssociatedResources",
                "servicecatalog:ListAttributeGroups",
                "servicecatalog:ListBudgetsForResource",
                "servicecatalog:ListConstraintsForPortfolio",
                "servicecatalog:ListLaunchPaths",
                "servicecatalog:ListOrganizationPortfolioAccess",
                "servicecatalog:ListPortfolioAccess",
                "servicecatalog:ListPortfolios",
                "servicecatalog:ListPortfoliosForProduct",
                "servicecatalog:ListPrincipalsForPortfolio",
                "servicecatalog:ListProvisionedProductPlans",
                "servicecatalog:ListProvisioningArtifacts",
                "servicecatalog:ListProvisioningArtifactsForServiceAction",
                "servicecatalog:ListRecordHistory",
                "servicecatalog:ListResourcesForTagOption",
                "servicecatalog:ListServiceActions",
                "servicecatalog:ListServiceActionsForProvisioningArtifact",
                "servicecatalog:ListStackInstancesForProvisionedProduct",
                "servicecatalog:ListTagOptions",
                "servicecatalog:ListTagsForResource",
                "servicecatalog:ProvisionProduct",
                "servicecatalog:RejectPortfolioShare",
                "servicecatalog:ScanProvisionedProducts",
                "servicecatalog:SearchProducts",
                "servicecatalog:SearchProductsAsAdmin",
                "servicecatalog:SearchProvisionedProducts",
                "servicecatalog:SyncResource",
                "servicecatalog:TagResource",
                "servicecatalog:TerminateProvisionedProduct",
                "servicecatalog:UntagResource",
                "servicecatalog:UpdateApplication",
                "servicecatalog:UpdateAttributeGroup",
                "servicecatalog:UpdateConstraint",
                "servicecatalog:UpdatePortfolio",
                "servicecatalog:UpdatePortfolioShare",
                "servicecatalog:UpdateProduct",
                "servicecatalog:UpdateProvisionedProduct",
                "servicecatalog:UpdateProvisionedProductProperties",
                "servicecatalog:UpdateProvisioningArtifact",
                "servicecatalog:UpdateServiceAction",
                "servicecatalog:UpdateTagOption"
            ],
            "Resource": [
                "arn:aws:(catalog|servicecatalog):<region>:<account>:<resourceType>/<id>"
            ],
            "Condition": {
                "SomeCondition-qGySM": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-YHMqa": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-dZFLe": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-yYKZm": {
                    "servicecatalog:accountLevel": "...some value..."
                },
                "SomeCondition-kDanO": {
                    "servicecatalog:roleLevel": "...some value..."
                },
                "SomeCondition-casNP": {
                    "servicecatalog:userLevel": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon MQ",
            "Effect": "Allow",
            "Action": [
                "mq:CreateBroker",
                "mq:CreateConfiguration",
                "mq:CreateTags",
                "mq:CreateUser",
                "mq:DeleteBroker",
                "mq:DeleteTags",
                "mq:DeleteUser",
                "mq:DescribeBroker",
                "mq:DescribeBrokerEngineTypes",
                "mq:DescribeBrokerInstanceOptions",
                "mq:DescribeConfiguration",
                "mq:DescribeConfigurationRevision",
                "mq:DescribeUser",
                "mq:ListBrokers",
                "mq:ListConfigurationRevisions",
                "mq:ListConfigurations",
                "mq:ListTags",
                "mq:ListUsers",
                "mq:RebootBroker",
                "mq:UpdateBroker",
                "mq:UpdateConfiguration",
                "mq:UpdateUser"
            ],
            "Resource": [
                "arn:${Partition}:mq:<region>:<account>:.+"
            ],
            "Condition": {
                "SomeCondition-iDkgV": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-FSLqj": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-jLvCd": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Control Tower",
            "Effect": "Allow",
            "Action": [
                "controltower:CreateManagedAccount",
                "controltower:DeregisterManagedAccount",
                "controltower:DeregisterOrganizationalUnit",
                "controltower:DescribeAccountFactoryConfig",
                "controltower:DescribeCoreService",
                "controltower:DescribeGuardrail",
                "controltower:DescribeGuardrailForTarget",
                "controltower:DescribeManagedAccount",
                "controltower:DescribeManagedOrganizationalUnit",
                "controltower:DescribeSingleSignOn",
                "controltower:DisableGuardrail",
                "controltower:EnableGuardrail",
                "controltower:GetAvailableUpdates",
                "controltower:GetGuardrailComplianceStatus",
                "controltower:GetHomeRegion",
                "controltower:GetLandingZoneStatus",
                "controltower:ListDirectoryGroups",
                "controltower:ListEnabledGuardrails",
                "controltower:ListGuardrailViolations",
                "controltower:ListGuardrails",
                "controltower:ListGuardrailsForTarget",
                "controltower:ListManagedAccounts",
                "controltower:ListManagedAccountsForGuardrail",
                "controltower:ListManagedAccountsForParent",
                "controltower:ListManagedOrganizationalUnits",
                "controltower:ListManagedOrganizationalUnitsForGuardrail",
                "controltower:ManageOrganizationalUnit",
                "controltower:SetupLandingZone",
                "controltower:UpdateAccountFactoryConfig"
            ]
        },
        {
            "Sid": "Amazon Nimble Studio",
            "Effect": "Allow",
            "Action": [
                "nimble:AcceptEulas",
                "nimble:CreateLaunchProfile",
                "nimble:CreateStreamingImage",
                "nimble:CreateStreamingSession",
                "nimble:CreateStreamingSessionStream",
                "nimble:CreateStudio",
                "nimble:CreateStudioComponent",
                "nimble:DeleteLaunchProfile",
                "nimble:DeleteLaunchProfileMember",
                "nimble:DeleteStreamingImage",
                "nimble:DeleteStreamingSession",
                "nimble:DeleteStudio",
                "nimble:DeleteStudioComponent",
                "nimble:DeleteStudioMember",
                "nimble:GetEula",
                "nimble:GetFeatureMap",
                "nimble:GetLaunchProfile",
                "nimble:GetLaunchProfileDetails",
                "nimble:GetLaunchProfileInitialization",
                "nimble:GetLaunchProfileMember",
                "nimble:GetStreamingImage",
                "nimble:GetStreamingSession",
                "nimble:GetStreamingSessionStream",
                "nimble:GetStudio",
                "nimble:GetStudioComponent",
                "nimble:GetStudioMember",
                "nimble:ListEulaAcceptances",
                "nimble:ListEulas",
                "nimble:ListLaunchProfileMembers",
                "nimble:ListLaunchProfiles",
                "nimble:ListStreamingImages",
                "nimble:ListStreamingSessions",
                "nimble:ListStudioComponents",
                "nimble:ListStudioMembers",
                "nimble:ListStudios",
                "nimble:ListTagsForResource",
                "nimble:PutLaunchProfileMembers",
                "nimble:PutStudioLogEvents",
                "nimble:PutStudioMembers",
                "nimble:StartStudioSSOConfigurationRepair",
                "nimble:TagResource",
                "nimble:UntagResource",
                "nimble:UpdateLaunchProfile",
                "nimble:UpdateLaunchProfileMember",
                "nimble:UpdateStreamingImage",
                "nimble:UpdateStudio",
                "nimble:UpdateStudioComponent"
            ],
            "Resource": [
                "arn:aws:nimble:<region>:<account>:<resourceType>/<resourcePath>"
            ],
            "Condition": {
                "SomeCondition-AuNOT": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-UaNMq": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-FAXMv": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-LYjNb": {
                    "nimble:createdBy": "...some value..."
                },
                "SomeCondition-lcPAo": {
                    "nimble:ownedBy": "...some value..."
                },
                "SomeCondition-QNZui": {
                    "nimble:principalId": "...some value..."
                },
                "SomeCondition-ldhVn": {
                    "nimble:requesterPrincipalId": "...some value..."
                },
                "SomeCondition-yDAuX": {
                    "nimble:studioId": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Managed Workflows for Apache Airflow",
            "Effect": "Allow",
            "Action": [
                "airflow:CreateCliToken",
                "airflow:CreateEnvironment",
                "airflow:CreateWebLoginToken",
                "airflow:DeleteEnvironment",
                "airflow:GetEnvironment",
                "airflow:ListEnvironments",
                "airflow:ListTagsForResource",
                "airflow:PublishMetrics",
                "airflow:TagResource",
                "airflow:UntagResource",
                "airflow:UpdateEnvironment"
            ],
            "Resource": [
                "arn:aws:<serviceName>:<region>:<account>:<resourceType>/<resourceName>"
            ],
            "Condition": {
                "SomeCondition-LQBJW": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-pYbFl": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-XiNmV": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon S3 Object Lambda",
            "Effect": "Allow",
            "Action": [
                "s3-object-lambda:AbortMultipartUpload",
                "s3-object-lambda:DeleteObject",
                "s3-object-lambda:DeleteObjectTagging",
                "s3-object-lambda:DeleteObjectVersion",
                "s3-object-lambda:DeleteObjectVersionTagging",
                "s3-object-lambda:GetObject",
                "s3-object-lambda:GetObjectAcl",
                "s3-object-lambda:GetObjectLegalHold",
                "s3-object-lambda:GetObjectRetention",
                "s3-object-lambda:GetObjectTagging",
                "s3-object-lambda:GetObjectVersion",
                "s3-object-lambda:GetObjectVersionAcl",
                "s3-object-lambda:GetObjectVersionTagging",
                "s3-object-lambda:ListBucket",
                "s3-object-lambda:ListBucketMultipartUploads",
                "s3-object-lambda:ListBucketVersions",
                "s3-object-lambda:ListMultipartUploadParts",
                "s3-object-lambda:PutObject",
                "s3-object-lambda:PutObjectAcl",
                "s3-object-lambda:PutObjectLegalHold",
                "s3-object-lambda:PutObjectRetention",
                "s3-object-lambda:PutObjectTagging",
                "s3-object-lambda:PutObjectVersionAcl",
                "s3-object-lambda:PutObjectVersionTagging",
                "s3-object-lambda:RestoreObject",
                "s3-object-lambda:WriteGetObjectResponse"
            ],
            "Resource": [
                "arn:aws:s3-object-lambda:::accesspoint/<access point name>"
            ],
            "Condition": {
                "SomeCondition-QfhiY": {
                    "s3-object-lambda:TlsVersion": "...some value..."
                },
                "SomeCondition-kspxA": {
                    "s3-object-lambda:authType": "...some value..."
                },
                "SomeCondition-IgSxt": {
                    "s3-object-lambda:signatureAge": "...some value..."
                },
                "SomeCondition-CLIuB": {
                    "s3-object-lambda:versionid": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Personalize",
            "Effect": "Allow",
            "Action": [
                "personalize:CreateBatchInferenceJob",
                "personalize:CreateCampaign",
                "personalize:CreateDataset",
                "personalize:CreateDatasetGroup",
                "personalize:CreateDatasetImportJob",
                "personalize:CreateEventTracker",
                "personalize:CreateFilter",
                "personalize:CreateSchema",
                "personalize:CreateSolution",
                "personalize:CreateSolutionVersion",
                "personalize:DeleteCampaign",
                "personalize:DeleteDataset",
                "personalize:DeleteDatasetGroup",
                "personalize:DeleteEventTracker",
                "personalize:DeleteFilter",
                "personalize:DeleteSchema",
                "personalize:DeleteSolution",
                "personalize:DescribeAlgorithm",
                "personalize:DescribeBatchInferenceJob",
                "personalize:DescribeCampaign",
                "personalize:DescribeDataset",
                "personalize:DescribeDatasetGroup",
                "personalize:DescribeDatasetImportJob",
                "personalize:DescribeEventTracker",
                "personalize:DescribeFeatureTransformation",
                "personalize:DescribeFilter",
                "personalize:DescribeRecipe",
                "personalize:DescribeSchema",
                "personalize:DescribeSolution",
                "personalize:DescribeSolutionVersion",
                "personalize:GetPersonalizedRanking",
                "personalize:GetRecommendations",
                "personalize:GetSolutionMetrics",
                "personalize:ListBatchInferenceJobs",
                "personalize:ListCampaigns",
                "personalize:ListDatasetGroups",
                "personalize:ListDatasetImportJobs",
                "personalize:ListDatasets",
                "personalize:ListEventTrackers",
                "personalize:ListFilters",
                "personalize:ListRecipes",
                "personalize:ListSchemas",
                "personalize:ListSolutionVersions",
                "personalize:ListSolutions",
                "personalize:PutEvents",
                "personalize:PutItems",
                "personalize:PutUsers",
                "personalize:UpdateCampaign"
            ],
            "Resource": [
                "arn:${Partition}:personalize:<region>:<account-id>:<resource-type>/<resource_name>"
            ]
        },
        {
            "Sid": "AWS Cloud9",
            "Effect": "Allow",
            "Action": [
                "cloud9:CreateEnvironmentEC2",
                "cloud9:CreateEnvironmentMembership",
                "cloud9:DeleteEnvironment",
                "cloud9:DeleteEnvironmentMembership",
                "cloud9:DescribeEnvironmentMemberships",
                "cloud9:DescribeEnvironmentStatus",
                "cloud9:DescribeEnvironments",
                "cloud9:GetUserSettings",
                "cloud9:ListEnvironments",
                "cloud9:ListTagsForResource",
                "cloud9:TagResource",
                "cloud9:UntagResource",
                "cloud9:UpdateEnvironment",
                "cloud9:UpdateEnvironmentMembership",
                "cloud9:UpdateUserSettings"
            ],
            "Resource": [
                "arn:aws:cloud9:<region>:<account-id>:<resource_type>:<resource_id>"
            ],
            "Condition": {
                "SomeCondition-jMxsq": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-YRxQb": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-RbQUw": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-bdgwW": {
                    "cloud9:EnvironmentId": "...some value..."
                },
                "SomeCondition-nRErZ": {
                    "cloud9:EnvironmentName": "...some value..."
                },
                "SomeCondition-mHWwP": {
                    "cloud9:InstanceType": "...some value..."
                },
                "SomeCondition-MkxCt": {
                    "cloud9:Permissions": "...some value..."
                },
                "SomeCondition-wtLOP": {
                    "cloud9:SubnetId": "...some value..."
                },
                "SomeCondition-klRAP": {
                    "cloud9:UserArn": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Elemental Appliances and Software",
            "Effect": "Allow",
            "Action": [
                "elemental-appliances-software:CreateQuote",
                "elemental-appliances-software:GetQuote",
                "elemental-appliances-software:ListQuotes",
                "elemental-appliances-software:ListTagsForResource",
                "elemental-appliances-software:TagResource",
                "elemental-appliances-software:UntagResource",
                "elemental-appliances-software:UpdateQuote"
            ],
            "Resource": [
                "arn:aws:elemental-appliances-software:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-rvnML": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-OabJu": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-aLrRM": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Detective",
            "Effect": "Allow",
            "Action": [
                "detective:AcceptInvitation",
                "detective:CreateGraph",
                "detective:CreateMembers",
                "detective:DeleteGraph",
                "detective:DeleteMembers",
                "detective:DisassociateMembership",
                "detective:GetFreeTrialEligibility",
                "detective:GetGraphIngestState",
                "detective:GetMembers",
                "detective:GetPricingInformation",
                "detective:GetUsageInformation",
                "detective:ListGraphs",
                "detective:ListInvitations",
                "detective:ListMembers",
                "detective:ListTagsForResource",
                "detective:RejectInvitation",
                "detective:SearchGraph",
                "detective:StartMonitoringMember",
                "detective:TagResource",
                "detective:UntagResource"
            ],
            "Resource": [
                "arn:aws:detective:${Region}:${AccountId}:graph:${GraphId}"
            ],
            "Condition": {
                "SomeCondition-TBdkS": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-UgNXO": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-pxuXj": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Transfer for SFTP",
            "Effect": "Allow",
            "Action": [
                "transfer:CreateServer",
                "transfer:CreateUser",
                "transfer:DeleteServer",
                "transfer:DeleteSshPublicKey",
                "transfer:DeleteUser",
                "transfer:DescribeSecurityPolicy",
                "transfer:DescribeServer",
                "transfer:DescribeUser",
                "transfer:ImportSshPublicKey",
                "transfer:ListSecurityPolicies",
                "transfer:ListServers",
                "transfer:ListTagsForResource",
                "transfer:ListUsers",
                "transfer:StartServer",
                "transfer:StopServer",
                "transfer:TagResource",
                "transfer:TestIdentityProvider",
                "transfer:UntagResource",
                "transfer:UpdateServer",
                "transfer:UpdateUser"
            ],
            "Resource": [
                "arn:aws:transfer:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-RMoqp": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-aDzbu": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-ojpxv": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Panorama",
            "Effect": "Allow",
            "Action": [
                "panorama:CreateApp",
                "panorama:CreateAppDeployment",
                "panorama:CreateAppVersion",
                "panorama:CreateDataSource",
                "panorama:CreateDeploymentConfiguration",
                "panorama:CreateDevice",
                "panorama:CreateDeviceUpdate",
                "panorama:CreateInputs",
                "panorama:CreateModel",
                "panorama:CreateStreams",
                "panorama:DeleteApp",
                "panorama:DeleteAppVersion",
                "panorama:DeleteDataSource",
                "panorama:DeleteDevice",
                "panorama:DeleteModel",
                "panorama:DescribeApp",
                "panorama:DescribeAppDeployment",
                "panorama:DescribeAppVersion",
                "panorama:DescribeDataSource",
                "panorama:DescribeDevice",
                "panorama:DescribeDeviceUpdate",
                "panorama:DescribeModel",
                "panorama:DescribeSoftware",
                "panorama:GetDeploymentConfiguration",
                "panorama:GetInputs",
                "panorama:GetStreams",
                "panorama:GetWebSocketURL",
                "panorama:ListAppDeploymentOperations",
                "panorama:ListAppVersions",
                "panorama:ListApps",
                "panorama:ListDataSources",
                "panorama:ListDeploymentConfigurations",
                "panorama:ListDeviceUpdates",
                "panorama:ListDevices",
                "panorama:ListModels",
                "panorama:ListTagsForResource",
                "panorama:TagResource",
                "panorama:UntagResource",
                "panorama:UpdateApp",
                "panorama:UpdateAppConfiguration",
                "panorama:UpdateDataSource",
                "panorama:UpdateDevice"
            ],
            "Resource": [
                "arn:${Partition}:panorama:${Region}:${AccountId}:${ResourceType}/${ResourceName}"
            ],
            "Condition": {
                "SomeCondition-BmSME": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-XNbck": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-jflZV": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS IAM Access Analyzer",
            "Effect": "Allow",
            "Action": [
                "access-analyzer:ApplyArchiveRule",
                "access-analyzer:CancelPolicyGeneration",
                "access-analyzer:CreateAccessPreview",
                "access-analyzer:CreateAnalyzer",
                "access-analyzer:CreateArchiveRule",
                "access-analyzer:DeleteAnalyzer",
                "access-analyzer:DeleteArchiveRule",
                "access-analyzer:GetAccessPreview",
                "access-analyzer:GetAnalyzedResource",
                "access-analyzer:GetAnalyzer",
                "access-analyzer:GetArchiveRule",
                "access-analyzer:GetFinding",
                "access-analyzer:GetGeneratedPolicy",
                "access-analyzer:ListAccessPreviewFindings",
                "access-analyzer:ListAccessPreviews",
                "access-analyzer:ListAnalyzedResources",
                "access-analyzer:ListAnalyzers",
                "access-analyzer:ListArchiveRules",
                "access-analyzer:ListFindings",
                "access-analyzer:ListPolicyGenerations",
                "access-analyzer:ListTagsForResource",
                "access-analyzer:StartPolicyGeneration",
                "access-analyzer:StartResourceScan",
                "access-analyzer:TagResource",
                "access-analyzer:UntagResource",
                "access-analyzer:UpdateArchiveRule",
                "access-analyzer:UpdateFindings",
                "access-analyzer:ValidatePolicy"
            ],
            "Resource": [
                "arn:${Partition}:access-analyzer:${Region}:${Account}:analyzer/${AnalyzerName}"
            ],
            "Condition": {
                "SomeCondition-mdQTn": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-hsdnF": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-qfSna": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Textract",
            "Effect": "Allow",
            "Action": [
                "textract:AnalyzeDocument",
                "textract:DetectDocumentText",
                "textract:GetDocumentAnalysis",
                "textract:GetDocumentTextDetection",
                "textract:StartDocumentAnalysis",
                "textract:StartDocumentTextDetection"
            ]
        },
        {
            "Sid": "AWS Activate",
            "Effect": "Allow",
            "Action": [
                "activate:CreateForm",
                "activate:GetAccountContact",
                "activate:GetContentInfo",
                "activate:GetCosts",
                "activate:GetCredits",
                "activate:GetMemberInfo",
                "activate:GetProgram",
                "activate:PutMemberInfo"
            ]
        },
        {
            "Sid": "Amazon AppIntegrations",
            "Effect": "Allow",
            "Action": [
                "app-integrations:CreateEventIntegration",
                "app-integrations:CreateEventIntegrationAssociation",
                "app-integrations:DeleteEventIntegration",
                "app-integrations:DeleteEventIntegrationAssociation",
                "app-integrations:GetEventIntegration",
                "app-integrations:ListEventIntegrationAssociations",
                "app-integrations:ListEventIntegrations",
                "app-integrations:ListTagsForResource",
                "app-integrations:TagResource",
                "app-integrations:UntagResource",
                "app-integrations:UpdateEventIntegration"
            ],
            "Resource": [
                "arn:aws:app-integrations:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-hQPuO": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-SpWMo": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-nARCK": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Application Discovery Arsenal",
            "Effect": "Allow",
            "Action": [
                "arsenal:RegisterOnPremisesAgent"
            ]
        },
        {
            "Sid": "Amazon GroundTruth Labeling",
            "Effect": "Allow",
            "Action": [
                "groundtruthlabeling:AssociatePatchToManifestJob",
                "groundtruthlabeling:DescribeConsoleJob",
                "groundtruthlabeling:ListDatasetObjects",
                "groundtruthlabeling:RunFilterOrSampleDatasetJob",
                "groundtruthlabeling:RunGenerateManifestByCrawlingJob"
            ]
        },
        {
            "Sid": "Amazon S3 on Outposts",
            "Effect": "Allow",
            "Action": [
                "s3-outposts:AbortMultipartUpload",
                "s3-outposts:CreateAccessPoint",
                "s3-outposts:CreateBucket",
                "s3-outposts:CreateEndpoint",
                "s3-outposts:DeleteAccessPoint",
                "s3-outposts:DeleteAccessPointPolicy",
                "s3-outposts:DeleteBucket",
                "s3-outposts:DeleteBucketPolicy",
                "s3-outposts:DeleteEndpoint",
                "s3-outposts:DeleteObject",
                "s3-outposts:DeleteObjectTagging",
                "s3-outposts:GetAccessPoint",
                "s3-outposts:GetAccessPointPolicy",
                "s3-outposts:GetBucket",
                "s3-outposts:GetBucketPolicy",
                "s3-outposts:GetBucketTagging",
                "s3-outposts:GetLifecycleConfiguration",
                "s3-outposts:GetObject",
                "s3-outposts:GetObjectTagging",
                "s3-outposts:ListAccessPoints",
                "s3-outposts:ListBucket",
                "s3-outposts:ListBucketMultipartUploads",
                "s3-outposts:ListEndpoints",
                "s3-outposts:ListMultipartUploadParts",
                "s3-outposts:ListRegionalBuckets",
                "s3-outposts:PutAccessPointPolicy",
                "s3-outposts:PutBucketPolicy",
                "s3-outposts:PutBucketTagging",
                "s3-outposts:PutLifecycleConfiguration",
                "s3-outposts:PutObject",
                "s3-outposts:PutObjectAcl",
                "s3-outposts:PutObjectTagging"
            ],
            "Resource": [
                "arn:${Partition}:s3-outposts:${Region}:${Account}:${ResourceType}/${ResourcePath}"
            ],
            "Condition": {
                "SomeCondition-JcEfI": {
                    "s3-outposts:AccessPointNetworkOrigin": "...some value..."
                },
                "SomeCondition-SkhOq": {
                    "s3-outposts:DataAccessPointAccount": "...some value..."
                },
                "SomeCondition-lyQjS": {
                    "s3-outposts:DataAccessPointArn": "...some value..."
                },
                "SomeCondition-SWbsT": {
                    "s3-outposts:ExistingObjectTag/<key>": "...some value..."
                },
                "SomeCondition-kBxUr": {
                    "s3-outposts:RequestObjectTag/<key>": "...some value..."
                },
                "SomeCondition-nLkCv": {
                    "s3-outposts:RequestObjectTagKeys": "...some value..."
                },
                "SomeCondition-Przxw": {
                    "s3-outposts:authType": "...some value..."
                },
                "SomeCondition-lWIBt": {
                    "s3-outposts:delimiter": "...some value..."
                },
                "SomeCondition-BTRuD": {
                    "s3-outposts:max-keys": "...some value..."
                },
                "SomeCondition-OSRDg": {
                    "s3-outposts:prefix": "...some value..."
                },
                "SomeCondition-DVFRJ": {
                    "s3-outposts:signatureAge": "...some value..."
                },
                "SomeCondition-coHRr": {
                    "s3-outposts:signatureversion": "...some value..."
                },
                "SomeCondition-mVhdb": {
                    "s3-outposts:x-amz-acl": "...some value..."
                },
                "SomeCondition-EvNMW": {
                    "s3-outposts:x-amz-content-sha256": "...some value..."
                },
                "SomeCondition-YqpUH": {
                    "s3-outposts:x-amz-copy-source": "...some value..."
                },
                "SomeCondition-xIniq": {
                    "s3-outposts:x-amz-metadata-directive": "...some value..."
                },
                "SomeCondition-DiASU": {
                    "s3-outposts:x-amz-server-side-encryption": "...some value..."
                },
                "SomeCondition-LWHcZ": {
                    "s3-outposts:x-amz-storage-class": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Elemental MediaStore",
            "Effect": "Allow",
            "Action": [
                "mediastore:CreateContainer",
                "mediastore:DeleteContainer",
                "mediastore:DeleteContainerPolicy",
                "mediastore:DeleteCorsPolicy",
                "mediastore:DeleteLifecyclePolicy",
                "mediastore:DeleteMetricPolicy",
                "mediastore:DeleteObject",
                "mediastore:DescribeContainer",
                "mediastore:DescribeObject",
                "mediastore:GetContainerPolicy",
                "mediastore:GetCorsPolicy",
                "mediastore:GetLifecyclePolicy",
                "mediastore:GetMetricPolicy",
                "mediastore:GetObject",
                "mediastore:ListContainers",
                "mediastore:ListItems",
                "mediastore:ListTagsForResource",
                "mediastore:PutContainerPolicy",
                "mediastore:PutCorsPolicy",
                "mediastore:PutLifecyclePolicy",
                "mediastore:PutMetricPolicy",
                "mediastore:PutObject",
                "mediastore:StartAccessLogging",
                "mediastore:StopAccessLogging",
                "mediastore:TagResource",
                "mediastore:UntagResource"
            ],
            "Resource": [
                "arn:aws:mediastore:<Region>:<Account>:<Resource>"
            ]
        },
        {
            "Sid": "AWS BugBust",
            "Effect": "Allow",
            "Action": [
                "bugbust:CreateEvent",
                "bugbust:EvaluateProfilingGroups",
                "bugbust:GetEvent",
                "bugbust:GetJoinEventStatus",
                "bugbust:JoinEvent",
                "bugbust:ListBugs",
                "bugbust:ListEventParticipants",
                "bugbust:ListEventScores",
                "bugbust:ListEvents",
                "bugbust:ListProfilingGroups",
                "bugbust:ListPullRequests",
                "bugbust:ListTagsForResource",
                "bugbust:TagResource",
                "bugbust:UntagResource",
                "bugbust:UpdateEvent",
                "bugbust:UpdateWorkItem",
                "bugbust:UpdateWorkItemAdmin"
            ],
            "Resource": [
                "arn:aws:bugbust:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-NfOlB": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-uCMdT": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-rHfPS": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon HealthLake",
            "Effect": "Allow",
            "Action": [
                "healthlake:CreateFHIRDatastore",
                "healthlake:CreateResource",
                "healthlake:DeleteFHIRDatastore",
                "healthlake:DeleteResource",
                "healthlake:DescribeFHIRDatastore",
                "healthlake:DescribeFHIRExportJob",
                "healthlake:DescribeFHIRImportJob",
                "healthlake:GetCapabilities",
                "healthlake:ListFHIRDatastores",
                "healthlake:ListFHIRExportJobs",
                "healthlake:ListFHIRImportJobs",
                "healthlake:ListTagsForResource",
                "healthlake:ReadResource",
                "healthlake:SearchWithGet",
                "healthlake:SearchWithPost",
                "healthlake:StartFHIRExportJob",
                "healthlake:StartFHIRImportJob",
                "healthlake:TagResource",
                "healthlake:UntagResource",
                "healthlake:UpdateResource"
            ],
            "Resource": [
                "arn:${Partition}:healthlake:${Region}:${AccountId}:${ResourceType}/${ResourceName}"
            ],
            "Condition": {
                "SomeCondition-zbWPC": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-rGbgN": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-VMOqh": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS IoT 1-Click",
            "Effect": "Allow",
            "Action": [
                "iot1click:AssociateDeviceWithPlacement",
                "iot1click:ClaimDevicesByClaimCode",
                "iot1click:CreatePlacement",
                "iot1click:CreateProject",
                "iot1click:DeletePlacement",
                "iot1click:DeleteProject",
                "iot1click:DescribeDevice",
                "iot1click:DescribePlacement",
                "iot1click:DescribeProject",
                "iot1click:DisassociateDeviceFromPlacement",
                "iot1click:FinalizeDeviceClaim",
                "iot1click:GetDeviceMethods",
                "iot1click:GetDevicesInPlacement",
                "iot1click:InitiateDeviceClaim",
                "iot1click:InvokeDeviceMethod",
                "iot1click:ListDeviceEvents",
                "iot1click:ListDevices",
                "iot1click:ListPlacements",
                "iot1click:ListProjects",
                "iot1click:ListTagsForResource",
                "iot1click:TagResource",
                "iot1click:UnclaimDevice",
                "iot1click:UntagResource",
                "iot1click:UpdateDeviceState",
                "iot1click:UpdatePlacement",
                "iot1click:UpdateProject"
            ],
            "Resource": [
                "arn:aws:iot1click:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-fyADU": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-zZdEm": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-wfuaS": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS CodePipeline",
            "Effect": "Allow",
            "Action": [
                "codepipeline:AcknowledgeJob",
                "codepipeline:AcknowledgeThirdPartyJob",
                "codepipeline:CreateCustomActionType",
                "codepipeline:CreatePipeline",
                "codepipeline:DeleteCustomActionType",
                "codepipeline:DeletePipeline",
                "codepipeline:DeleteWebhook",
                "codepipeline:DeregisterWebhookWithThirdParty",
                "codepipeline:DisableStageTransition",
                "codepipeline:EnableStageTransition",
                "codepipeline:GetJobDetails",
                "codepipeline:GetPipeline",
                "codepipeline:GetPipelineExecution",
                "codepipeline:GetPipelineState",
                "codepipeline:GetThirdPartyJobDetails",
                "codepipeline:ListActionExecutions",
                "codepipeline:ListActionTypes",
                "codepipeline:ListPipelineExecutions",
                "codepipeline:ListPipelines",
                "codepipeline:ListTagsForResource",
                "codepipeline:ListWebhooks",
                "codepipeline:PollForJobs",
                "codepipeline:PollForThirdPartyJobs",
                "codepipeline:PutActionRevision",
                "codepipeline:PutApprovalResult",
                "codepipeline:PutJobFailureResult",
                "codepipeline:PutJobSuccessResult",
                "codepipeline:PutThirdPartyJobFailureResult",
                "codepipeline:PutThirdPartyJobSuccessResult",
                "codepipeline:PutWebhook",
                "codepipeline:RegisterWebhookWithThirdParty",
                "codepipeline:RetryStageExecution",
                "codepipeline:StartPipelineExecution",
                "codepipeline:StopPipelineExecution",
                "codepipeline:TagResource",
                "codepipeline:UntagResource",
                "codepipeline:UpdatePipeline"
            ],
            "Resource": [
                "arn:aws:codepipeline:<region>:<account_ID>:<path_to_pipeline_resource>"
            ],
            "Condition": {
                "SomeCondition-EUrAl": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-mIqbo": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-rIHPw": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Security Hub",
            "Effect": "Allow",
            "Action": [
                "securityhub:AcceptAdministratorInvitation",
                "securityhub:AcceptInvitation",
                "securityhub:BatchDisableStandards",
                "securityhub:BatchEnableStandards",
                "securityhub:BatchImportFindings",
                "securityhub:BatchUpdateFindings",
                "securityhub:CreateActionTarget",
                "securityhub:CreateInsight",
                "securityhub:CreateMembers",
                "securityhub:DeclineInvitations",
                "securityhub:DeleteActionTarget",
                "securityhub:DeleteInsight",
                "securityhub:DeleteInvitations",
                "securityhub:DeleteMembers",
                "securityhub:DescribeActionTargets",
                "securityhub:DescribeHub",
                "securityhub:DescribeOrganizationConfiguration",
                "securityhub:DescribeProducts",
                "securityhub:DescribeStandards",
                "securityhub:DescribeStandardsControls",
                "securityhub:DisableImportFindingsForProduct",
                "securityhub:DisableOrganizationAdminAccount",
                "securityhub:DisableSecurityHub",
                "securityhub:DisassociateFromAdministratorAccount",
                "securityhub:DisassociateFromMasterAccount",
                "securityhub:DisassociateMembers",
                "securityhub:EnableImportFindingsForProduct",
                "securityhub:EnableOrganizationAdminAccount",
                "securityhub:EnableSecurityHub",
                "securityhub:GetAdhocInsightResults",
                "securityhub:GetAdministratorAccount",
                "securityhub:GetControlFindingSummary",
                "securityhub:GetEnabledStandards",
                "securityhub:GetFindings",
                "securityhub:GetFreeTrialEndDate",
                "securityhub:GetFreeTrialUsage",
                "securityhub:GetInsightFindingTrend",
                "securityhub:GetInsightResults",
                "securityhub:GetInsights",
                "securityhub:GetInvitationsCount",
                "securityhub:GetMasterAccount",
                "securityhub:GetMembers",
                "securityhub:GetUsage",
                "securityhub:InviteMembers",
                "securityhub:ListControlEvaluationSummaries",
                "securityhub:ListEnabledProductsForImport",
                "securityhub:ListInvitations",
                "securityhub:ListMembers",
                "securityhub:ListOrganizationAdminAccounts",
                "securityhub:ListTagsForResource",
                "securityhub:SendFindingEvents",
                "securityhub:SendInsightEvents",
                "securityhub:TagResource",
                "securityhub:UntagResource",
                "securityhub:UpdateActionTarget",
                "securityhub:UpdateFindings",
                "securityhub:UpdateInsight",
                "securityhub:UpdateOrganizationConfiguration",
                "securityhub:UpdateSecurityHubConfiguration",
                "securityhub:UpdateStandardsControl"
            ],
            "Resource": [
                "arn:${Partition}:securityhub:<region>:<account_ID>:.+"
            ],
            "Condition": {
                "SomeCondition-avHnr": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-mdVWs": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-tsNIa": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-UkvgR": {
                    "securityhub:ASFFSyntaxPath/${ASFFSyntaxPath}": "...some value..."
                },
                "SomeCondition-TgNOn": {
                    "securityhub:TargetAccount": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon EC2 Image Builder",
            "Effect": "Allow",
            "Action": [
                "imagebuilder:CancelImageCreation",
                "imagebuilder:CreateComponent",
                "imagebuilder:CreateContainerRecipe",
                "imagebuilder:CreateDistributionConfiguration",
                "imagebuilder:CreateImage",
                "imagebuilder:CreateImagePipeline",
                "imagebuilder:CreateImageRecipe",
                "imagebuilder:CreateInfrastructureConfiguration",
                "imagebuilder:DeleteComponent",
                "imagebuilder:DeleteContainerRecipe",
                "imagebuilder:DeleteDistributionConfiguration",
                "imagebuilder:DeleteImage",
                "imagebuilder:DeleteImagePipeline",
                "imagebuilder:DeleteImageRecipe",
                "imagebuilder:DeleteInfrastructureConfiguration",
                "imagebuilder:GetComponent",
                "imagebuilder:GetComponentPolicy",
                "imagebuilder:GetContainerRecipe",
                "imagebuilder:GetContainerRecipePolicy",
                "imagebuilder:GetDistributionConfiguration",
                "imagebuilder:GetImage",
                "imagebuilder:GetImagePipeline",
                "imagebuilder:GetImagePolicy",
                "imagebuilder:GetImageRecipe",
                "imagebuilder:GetImageRecipePolicy",
                "imagebuilder:GetInfrastructureConfiguration",
                "imagebuilder:ImportComponent",
                "imagebuilder:ListComponentBuildVersions",
                "imagebuilder:ListComponents",
                "imagebuilder:ListContainerRecipes",
                "imagebuilder:ListDistributionConfigurations",
                "imagebuilder:ListImageBuildVersions",
                "imagebuilder:ListImagePackages",
                "imagebuilder:ListImagePipelineImages",
                "imagebuilder:ListImagePipelines",
                "imagebuilder:ListImageRecipes",
                "imagebuilder:ListImages",
                "imagebuilder:ListInfrastructureConfigurations",
                "imagebuilder:ListTagsForResource",
                "imagebuilder:PutComponentPolicy",
                "imagebuilder:PutContainerRecipePolicy",
                "imagebuilder:PutImagePolicy",
                "imagebuilder:PutImageRecipePolicy",
                "imagebuilder:StartImagePipelineExecution",
                "imagebuilder:TagResource",
                "imagebuilder:UntagResource",
                "imagebuilder:UpdateDistributionConfiguration",
                "imagebuilder:UpdateImagePipeline",
                "imagebuilder:UpdateInfrastructureConfiguration"
            ],
            "Resource": [
                "arn:aws:imagebuilder:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-cfOxM": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-rqMue": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-OfcyM": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-hPNbH": {
                    "imagebuilder:CreatedResourceTag/<key>": "...some value..."
                },
                "SomeCondition-rkDvT": {
                    "imagebuilder:CreatedResourceTagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon SQS",
            "Effect": "Allow",
            "Action": [
                "sqs:AddPermission",
                "sqs:ChangeMessageVisibility",
                "sqs:ChangeMessageVisibilityBatch",
                "sqs:CreateQueue",
                "sqs:DeleteMessage",
                "sqs:DeleteMessageBatch",
                "sqs:DeleteQueue",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
                "sqs:ListDeadLetterSourceQueues",
                "sqs:ListQueueTags",
                "sqs:ListQueues",
                "sqs:PurgeQueue",
                "sqs:ReceiveMessage",
                "sqs:RemovePermission",
                "sqs:SendMessage",
                "sqs:SendMessageBatch",
                "sqs:SetQueueAttributes",
                "sqs:TagQueue",
                "sqs:UntagQueue"
            ],
            "Resource": [
                "arn:aws:sqs:<region>:<account_ID>:<queue_name>"
            ]
        },
        {
            "Sid": "AWS Cloud Map",
            "Effect": "Allow",
            "Action": [
                "servicediscovery:CreateHttpNamespace",
                "servicediscovery:CreatePrivateDnsNamespace",
                "servicediscovery:CreatePublicDnsNamespace",
                "servicediscovery:CreateService",
                "servicediscovery:DeleteNamespace",
                "servicediscovery:DeleteService",
                "servicediscovery:DeregisterInstance",
                "servicediscovery:DiscoverInstances",
                "servicediscovery:GetInstance",
                "servicediscovery:GetInstancesHealthStatus",
                "servicediscovery:GetNamespace",
                "servicediscovery:GetOperation",
                "servicediscovery:GetService",
                "servicediscovery:ListInstances",
                "servicediscovery:ListNamespaces",
                "servicediscovery:ListOperations",
                "servicediscovery:ListServices",
                "servicediscovery:ListTagsForResource",
                "servicediscovery:RegisterInstance",
                "servicediscovery:TagResource",
                "servicediscovery:UntagResource",
                "servicediscovery:UpdateInstanceCustomHealthStatus",
                "servicediscovery:UpdateService"
            ],
            "Resource": [
                "arn:aws:servicediscovery:<region>:<account-id>:<resource-type>/<resource_name>"
            ],
            "Condition": {
                "SomeCondition-nqxLk": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-RYiQI": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-bywWc": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-hkEBw": {
                    "servicediscovery:NamespaceArn": "...some value..."
                },
                "SomeCondition-csHtp": {
                    "servicediscovery:NamespaceName": "...some value..."
                },
                "SomeCondition-OdPIv": {
                    "servicediscovery:ServiceArn": "...some value..."
                },
                "SomeCondition-EZUNJ": {
                    "servicediscovery:ServiceName": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Tiros",
            "Effect": "Allow",
            "Action": [
                "tiros:CreateQuery",
                "tiros:GetQueryAnswer",
                "tiros:GetQueryExplanation"
            ]
        },
        {
            "Sid": "AWS Compute Optimizer",
            "Effect": "Allow",
            "Action": [
                "compute-optimizer:DescribeRecommendationExportJobs",
                "compute-optimizer:ExportAutoScalingGroupRecommendations",
                "compute-optimizer:ExportEBSVolumeRecommendations",
                "compute-optimizer:ExportEC2InstanceRecommendations",
                "compute-optimizer:ExportLambdaFunctionRecommendations",
                "compute-optimizer:GetAutoScalingGroupRecommendations",
                "compute-optimizer:GetEBSVolumeRecommendations",
                "compute-optimizer:GetEC2InstanceRecommendations",
                "compute-optimizer:GetEC2RecommendationProjectedMetrics",
                "compute-optimizer:GetEnrollmentStatus",
                "compute-optimizer:GetLambdaFunctionRecommendations",
                "compute-optimizer:GetRecommendationSummaries",
                "compute-optimizer:UpdateEnrollmentStatus"
            ]
        },
        {
            "Sid": "Amazon Glacier",
            "Effect": "Allow",
            "Action": [
                "glacier:AbortMultipartUpload",
                "glacier:AbortVaultLock",
                "glacier:AddTagsToVault",
                "glacier:CompleteMultipartUpload",
                "glacier:CompleteVaultLock",
                "glacier:CreateVault",
                "glacier:DeleteArchive",
                "glacier:DeleteVault",
                "glacier:DeleteVaultAccessPolicy",
                "glacier:DeleteVaultNotifications",
                "glacier:DescribeJob",
                "glacier:DescribeVault",
                "glacier:GetDataRetrievalPolicy",
                "glacier:GetJobOutput",
                "glacier:GetVaultAccessPolicy",
                "glacier:GetVaultLock",
                "glacier:GetVaultNotifications",
                "glacier:InitiateJob",
                "glacier:InitiateMultipartUpload",
                "glacier:InitiateVaultLock",
                "glacier:ListJobs",
                "glacier:ListMultipartUploads",
                "glacier:ListParts",
                "glacier:ListProvisionedCapacity",
                "glacier:ListTagsForVault",
                "glacier:ListVaults",
                "glacier:PurchaseProvisionedCapacity",
                "glacier:RemoveTagsFromVault",
                "glacier:SetDataRetrievalPolicy",
                "glacier:SetVaultAccessPolicy",
                "glacier:SetVaultNotifications",
                "glacier:UploadArchive",
                "glacier:UploadMultipartPart"
            ],
            "Resource": [
                "arn:aws:glacier:<region>:<accountID>:<relative-id>"
            ],
            "Condition": {
                "SomeCondition-QjZVu": {
                    "glacier:ArchiveAgeInDays": "...some value..."
                },
                "SomeCondition-LaIQK": {
                    "glacier:ResourceTag/": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Rekognition",
            "Effect": "Allow",
            "Action": [
                "rekognition:CompareFaces",
                "rekognition:CreateCollection",
                "rekognition:CreateProject",
                "rekognition:CreateProjectVersion",
                "rekognition:CreateStreamProcessor",
                "rekognition:DeleteCollection",
                "rekognition:DeleteFaces",
                "rekognition:DeleteProject",
                "rekognition:DeleteProjectVersion",
                "rekognition:DeleteStreamProcessor",
                "rekognition:DescribeCollection",
                "rekognition:DescribeProjectVersions",
                "rekognition:DescribeProjects",
                "rekognition:DescribeStreamProcessor",
                "rekognition:DetectCustomLabels",
                "rekognition:DetectFaces",
                "rekognition:DetectLabels",
                "rekognition:DetectModerationLabels",
                "rekognition:DetectProtectiveEquipment",
                "rekognition:DetectText",
                "rekognition:GetCelebrityInfo",
                "rekognition:GetCelebrityRecognition",
                "rekognition:GetContentModeration",
                "rekognition:GetFaceDetection",
                "rekognition:GetFaceSearch",
                "rekognition:GetLabelDetection",
                "rekognition:GetPersonTracking",
                "rekognition:GetSegmentDetection",
                "rekognition:GetTextDetection",
                "rekognition:IndexFaces",
                "rekognition:ListCollections",
                "rekognition:ListFaces",
                "rekognition:ListStreamProcessors",
                "rekognition:ListTagsForResource",
                "rekognition:RecognizeCelebrities",
                "rekognition:SearchFaces",
                "rekognition:SearchFacesByImage",
                "rekognition:StartCelebrityRecognition",
                "rekognition:StartContentModeration",
                "rekognition:StartFaceDetection",
                "rekognition:StartFaceSearch",
                "rekognition:StartLabelDetection",
                "rekognition:StartPersonTracking",
                "rekognition:StartProjectVersion",
                "rekognition:StartSegmentDetection",
                "rekognition:StartStreamProcessor",
                "rekognition:StartTextDetection",
                "rekognition:StopProjectVersion",
                "rekognition:StopStreamProcessor",
                "rekognition:TagResource",
                "rekognition:UntagResource"
            ],
            "Resource": [
                "arn:aws:rekognition:<region>:<accountID>:<relative-id>"
            ],
            "Condition": {
                "SomeCondition-jNSyx": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-VoKkY": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-Tndbl": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Launch Wizard",
            "Effect": "Allow",
            "Action": [
                "launchwizard:DeleteApp",
                "launchwizard:DescribeProvisionedApp",
                "launchwizard:DescribeProvisioningEvents",
                "launchwizard:GetInfrastructureSuggestion",
                "launchwizard:GetIpAddress",
                "launchwizard:GetResourceCostEstimate",
                "launchwizard:ListProvisionedApps",
                "launchwizard:StartProvisioning"
            ]
        },
        {
            "Sid": "AWS Elemental MediaConvert",
            "Effect": "Allow",
            "Action": [
                "mediaconvert:AssociateCertificate",
                "mediaconvert:CancelJob",
                "mediaconvert:CreateJob",
                "mediaconvert:CreateJobTemplate",
                "mediaconvert:CreatePreset",
                "mediaconvert:CreateQueue",
                "mediaconvert:DeleteJobTemplate",
                "mediaconvert:DeletePreset",
                "mediaconvert:DeleteQueue",
                "mediaconvert:DescribeEndpoints",
                "mediaconvert:DisassociateCertificate",
                "mediaconvert:GetJob",
                "mediaconvert:GetJobTemplate",
                "mediaconvert:GetPreset",
                "mediaconvert:GetQueue",
                "mediaconvert:ListJobTemplates",
                "mediaconvert:ListJobs",
                "mediaconvert:ListPresets",
                "mediaconvert:ListQueues",
                "mediaconvert:ListTagsForResource",
                "mediaconvert:TagResource",
                "mediaconvert:UntagResource",
                "mediaconvert:UpdateJobTemplate",
                "mediaconvert:UpdatePreset",
                "mediaconvert:UpdateQueue"
            ],
            "Resource": [
                "arn:${Partition}:mediaconvert:<region>:<account>:<resourceType>/<resourceId>"
            ],
            "Condition": {
                "SomeCondition-qOuRM": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-nrXFl": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-bnIHs": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Service Quotas",
            "Effect": "Allow",
            "Action": [
                "servicequotas:AssociateServiceQuotaTemplate",
                "servicequotas:DeleteServiceQuotaIncreaseRequestFromTemplate",
                "servicequotas:DisassociateServiceQuotaTemplate",
                "servicequotas:GetAWSDefaultServiceQuota",
                "servicequotas:GetAssociationForServiceQuotaTemplate",
                "servicequotas:GetRequestedServiceQuotaChange",
                "servicequotas:GetServiceQuota",
                "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
                "servicequotas:ListAWSDefaultServiceQuotas",
                "servicequotas:ListRequestedServiceQuotaChangeHistory",
                "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
                "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
                "servicequotas:ListServiceQuotas",
                "servicequotas:ListServices",
                "servicequotas:ListTagsForResource",
                "servicequotas:PutServiceQuotaIncreaseRequestIntoTemplate",
                "servicequotas:RequestServiceQuotaIncrease",
                "servicequotas:TagResource",
                "servicequotas:UntagResource"
            ],
            "Resource": [
                "arn:aws:servicequotas:<region>:<account>:<resourceType>/<resourceName>"
            ],
            "Condition": {
                "SomeCondition-VMZOG": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-fojHJ": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-vDPSm": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-fCcKB": {
                    "servicequotas:service": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Inspector",
            "Effect": "Allow",
            "Action": [
                "inspector:AddAttributesToFindings",
                "inspector:CreateAssessmentTarget",
                "inspector:CreateAssessmentTemplate",
                "inspector:CreateExclusionsPreview",
                "inspector:CreateResourceGroup",
                "inspector:DeleteAssessmentRun",
                "inspector:DeleteAssessmentTarget",
                "inspector:DeleteAssessmentTemplate",
                "inspector:DescribeAssessmentRuns",
                "inspector:DescribeAssessmentTargets",
                "inspector:DescribeAssessmentTemplates",
                "inspector:DescribeCrossAccountAccessRole",
                "inspector:DescribeExclusions",
                "inspector:DescribeFindings",
                "inspector:DescribeResourceGroups",
                "inspector:DescribeRulesPackages",
                "inspector:GetAssessmentReport",
                "inspector:GetExclusionsPreview",
                "inspector:GetTelemetryMetadata",
                "inspector:ListAssessmentRunAgents",
                "inspector:ListAssessmentRuns",
                "inspector:ListAssessmentTargets",
                "inspector:ListAssessmentTemplates",
                "inspector:ListEventSubscriptions",
                "inspector:ListExclusions",
                "inspector:ListFindings",
                "inspector:ListRulesPackages",
                "inspector:ListTagsForResource",
                "inspector:PreviewAgents",
                "inspector:RegisterCrossAccountAccessRole",
                "inspector:RemoveAttributesFromFindings",
                "inspector:SetTagsForResource",
                "inspector:StartAssessmentRun",
                "inspector:StopAssessmentRun",
                "inspector:SubscribeToEvent",
                "inspector:UnsubscribeFromEvent",
                "inspector:UpdateAssessmentTarget"
            ]
        },
        {
            "Sid": "AWS RoboMaker",
            "Effect": "Allow",
            "Action": [
                "robomaker:BatchDeleteWorlds",
                "robomaker:BatchDescribeSimulationJob",
                "robomaker:CancelDeploymentJob",
                "robomaker:CancelSimulationJob",
                "robomaker:CancelSimulationJobBatch",
                "robomaker:CancelWorldExportJob",
                "robomaker:CancelWorldGenerationJob",
                "robomaker:CreateDeploymentJob",
                "robomaker:CreateFleet",
                "robomaker:CreateRobot",
                "robomaker:CreateRobotApplication",
                "robomaker:CreateRobotApplicationVersion",
                "robomaker:CreateSimulationApplication",
                "robomaker:CreateSimulationApplicationVersion",
                "robomaker:CreateSimulationJob",
                "robomaker:CreateWorldExportJob",
                "robomaker:CreateWorldGenerationJob",
                "robomaker:CreateWorldTemplate",
                "robomaker:DeleteFleet",
                "robomaker:DeleteRobot",
                "robomaker:DeleteRobotApplication",
                "robomaker:DeleteSimulationApplication",
                "robomaker:DeleteWorldTemplate",
                "robomaker:DeregisterRobot",
                "robomaker:DescribeDeploymentJob",
                "robomaker:DescribeFleet",
                "robomaker:DescribeRobot",
                "robomaker:DescribeRobotApplication",
                "robomaker:DescribeSimulationApplication",
                "robomaker:DescribeSimulationJob",
                "robomaker:DescribeSimulationJobBatch",
                "robomaker:DescribeWorld",
                "robomaker:DescribeWorldExportJob",
                "robomaker:DescribeWorldGenerationJob",
                "robomaker:DescribeWorldTemplate",
                "robomaker:GetWorldTemplateBody",
                "robomaker:ListDeploymentJobs",
                "robomaker:ListFleets",
                "robomaker:ListRobotApplications",
                "robomaker:ListRobots",
                "robomaker:ListSimulationApplications",
                "robomaker:ListSimulationJobBatches",
                "robomaker:ListSimulationJobs",
                "robomaker:ListSupportedAvailabilityZones",
                "robomaker:ListTagsForResource",
                "robomaker:ListWorldExportJobs",
                "robomaker:ListWorldGenerationJobs",
                "robomaker:ListWorldTemplates",
                "robomaker:ListWorlds",
                "robomaker:RegisterRobot",
                "robomaker:RestartSimulationJob",
                "robomaker:StartSimulationJobBatch",
                "robomaker:SyncDeploymentJob",
                "robomaker:TagResource",
                "robomaker:UntagResource",
                "robomaker:UpdateRobotApplication",
                "robomaker:UpdateRobotDeployment",
                "robomaker:UpdateSimulationApplication",
                "robomaker:UpdateWorldTemplate"
            ],
            "Resource": [
                "arn:${Partition}:robomaker:${Region}:${AccountId}:${ResourceType}/${ResourceName}"
            ],
            "Condition": {
                "SomeCondition-UNnIv": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-uhtxp": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-pqKfs": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon QLDB",
            "Effect": "Allow",
            "Action": [
                "qldb:CancelJournalKinesisStream",
                "qldb:CreateLedger",
                "qldb:DeleteLedger",
                "qldb:DescribeJournalKinesisStream",
                "qldb:DescribeJournalS3Export",
                "qldb:DescribeLedger",
                "qldb:ExecuteStatement",
                "qldb:ExportJournalToS3",
                "qldb:GetBlock",
                "qldb:GetDigest",
                "qldb:GetRevision",
                "qldb:InsertSampleData",
                "qldb:ListJournalKinesisStreamsForLedger",
                "qldb:ListJournalS3Exports",
                "qldb:ListJournalS3ExportsForLedger",
                "qldb:ListLedgers",
                "qldb:ListTagsForResource",
                "qldb:PartiQLCreateIndex",
                "qldb:PartiQLCreateTable",
                "qldb:PartiQLDelete",
                "qldb:PartiQLDropIndex",
                "qldb:PartiQLDropTable",
                "qldb:PartiQLHistoryFunction",
                "qldb:PartiQLInsert",
                "qldb:PartiQLSelect",
                "qldb:PartiQLUndropTable",
                "qldb:PartiQLUpdate",
                "qldb:SendCommand",
                "qldb:ShowCatalog",
                "qldb:StreamJournalToKinesis",
                "qldb:TagResource",
                "qldb:UntagResource",
                "qldb:UpdateLedger",
                "qldb:UpdateLedgerPermissionsMode"
            ],
            "Resource": [
                "arn:${Partition}:qldb:${region}:${account}:${resourceType}/${resourcePath}"
            ],
            "Condition": {
                "SomeCondition-JXzdC": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-rGlCH": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-PrhsD": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-bUjKt": {
                    "qldb:Purge": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS CodeStar",
            "Effect": "Allow",
            "Action": [
                "codestar:AssociateTeamMember",
                "codestar:CreateProject",
                "codestar:CreateUserProfile",
                "codestar:DeleteExtendedAccess",
                "codestar:DeleteProject",
                "codestar:DeleteUserProfile",
                "codestar:DescribeProject",
                "codestar:DescribeUserProfile",
                "codestar:DisassociateTeamMember",
                "codestar:GetExtendedAccess",
                "codestar:ListProjects",
                "codestar:ListResources",
                "codestar:ListTagsForProject",
                "codestar:ListTeamMembers",
                "codestar:ListUserProfiles",
                "codestar:PutExtendedAccess",
                "codestar:TagProject",
                "codestar:UntagProject",
                "codestar:UpdateProject",
                "codestar:UpdateTeamMember",
                "codestar:UpdateUserProfile"
            ],
            "Resource": [
                "arn:aws:codestar:<region>:<account_ID>:<resource_type>/<resource_id>"
            ],
            "Condition": {
                "SomeCondition-lqGNs": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-biUrM": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-xtEuq": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-MAzRv": {
                    "iam:ResourceTag/${TagKey}": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS CodeArtifact",
            "Effect": "Allow",
            "Action": [
                "codeartifact:AssociateExternalConnection",
                "codeartifact:AssociateWithDownstreamRepository",
                "codeartifact:CopyPackageVersions",
                "codeartifact:CreateDomain",
                "codeartifact:CreateRepository",
                "codeartifact:DeleteDomain",
                "codeartifact:DeleteDomainPermissionsPolicy",
                "codeartifact:DeletePackageVersions",
                "codeartifact:DeleteRepository",
                "codeartifact:DeleteRepositoryPermissionsPolicy",
                "codeartifact:DescribeDomain",
                "codeartifact:DescribePackageVersion",
                "codeartifact:DescribeRepository",
                "codeartifact:DisassociateExternalConnection",
                "codeartifact:DisposePackageVersions",
                "codeartifact:GetAuthorizationToken",
                "codeartifact:GetDomainPermissionsPolicy",
                "codeartifact:GetPackageVersionAsset",
                "codeartifact:GetPackageVersionReadme",
                "codeartifact:GetRepositoryEndpoint",
                "codeartifact:GetRepositoryPermissionsPolicy",
                "codeartifact:ListDomains",
                "codeartifact:ListPackageVersionAssets",
                "codeartifact:ListPackageVersionDependencies",
                "codeartifact:ListPackageVersions",
                "codeartifact:ListPackages",
                "codeartifact:ListRepositories",
                "codeartifact:ListRepositoriesInDomain",
                "codeartifact:ListTagsForResource",
                "codeartifact:PublishPackageVersion",
                "codeartifact:PutDomainPermissionsPolicy",
                "codeartifact:PutPackageMetadata",
                "codeartifact:PutRepositoryPermissionsPolicy",
                "codeartifact:ReadFromRepository",
                "codeartifact:TagResource",
                "codeartifact:UntagResource",
                "codeartifact:UpdatePackageVersionsStatus",
                "codeartifact:UpdateRepository"
            ],
            "Resource": [
                "arn:${Partition}:codeartifact:<region>:<account_ID>:<resource_type>/<resource_id>"
            ],
            "Condition": {
                "SomeCondition-oDBQT": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-FnMbd": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-aoNAM": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Direct Connect",
            "Effect": "Allow",
            "Action": [
                "directconnect:AcceptDirectConnectGatewayAssociationProposal",
                "directconnect:AllocateConnectionOnInterconnect",
                "directconnect:AllocateHostedConnection",
                "directconnect:AllocatePrivateVirtualInterface",
                "directconnect:AllocatePublicVirtualInterface",
                "directconnect:AllocateTransitVirtualInterface",
                "directconnect:AssociateConnectionWithLag",
                "directconnect:AssociateHostedConnection",
                "directconnect:AssociateVirtualInterface",
                "directconnect:ConfirmConnection",
                "directconnect:ConfirmPrivateVirtualInterface",
                "directconnect:ConfirmPublicVirtualInterface",
                "directconnect:ConfirmTransitVirtualInterface",
                "directconnect:CreateBGPPeer",
                "directconnect:CreateConnection",
                "directconnect:CreateDirectConnectGateway",
                "directconnect:CreateDirectConnectGatewayAssociation",
                "directconnect:CreateDirectConnectGatewayAssociationProposal",
                "directconnect:CreateInterconnect",
                "directconnect:CreateLag",
                "directconnect:CreatePrivateVirtualInterface",
                "directconnect:CreatePublicVirtualInterface",
                "directconnect:CreateTransitVirtualInterface",
                "directconnect:DeleteBGPPeer",
                "directconnect:DeleteConnection",
                "directconnect:DeleteDirectConnectGateway",
                "directconnect:DeleteDirectConnectGatewayAssociation",
                "directconnect:DeleteDirectConnectGatewayAssociationProposal",
                "directconnect:DeleteInterconnect",
                "directconnect:DeleteLag",
                "directconnect:DeleteVirtualInterface",
                "directconnect:DescribeConnectionLoa",
                "directconnect:DescribeConnections",
                "directconnect:DescribeConnectionsOnInterconnect",
                "directconnect:DescribeDirectConnectGatewayAssociationProposals",
                "directconnect:DescribeDirectConnectGatewayAssociations",
                "directconnect:DescribeDirectConnectGatewayAttachments",
                "directconnect:DescribeDirectConnectGateways",
                "directconnect:DescribeHostedConnections",
                "directconnect:DescribeInterconnectLoa",
                "directconnect:DescribeInterconnects",
                "directconnect:DescribeLags",
                "directconnect:DescribeLoa",
                "directconnect:DescribeLocations",
                "directconnect:DescribeTags",
                "directconnect:DescribeVirtualGateways",
                "directconnect:DescribeVirtualInterfaces",
                "directconnect:DisassociateConnectionFromLag",
                "directconnect:ListVirtualInterfaceTestHistory",
                "directconnect:StartBgpFailoverTest",
                "directconnect:StopBgpFailoverTest",
                "directconnect:TagResource",
                "directconnect:UntagResource",
                "directconnect:UpdateDirectConnectGatewayAssociation",
                "directconnect:UpdateLag",
                "directconnect:UpdateVirtualInterfaceAttributes"
            ],
            "Resource": [
                "arn:${Partition}:directconnect:${Region}:${Account}:${ResourceType}/${ResourceId}"
            ],
            "Condition": {
                "SomeCondition-CYPFk": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-bDdtI": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-uUktc": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Neptune",
            "Effect": "Allow",
            "Action": [
                "neptune-db:connect"
            ],
            "Resource": [
                "arn:aws:neptune-db:<region>:<accountID>:<relative-id>"
            ]
        },
        {
            "Sid": "AWSDataSync",
            "Effect": "Allow",
            "Action": [
                "datasync:CancelTaskExecution",
                "datasync:CreateAgent",
                "datasync:CreateLocationEfs",
                "datasync:CreateLocationFsxWindows",
                "datasync:CreateLocationNfs",
                "datasync:CreateLocationObjectStorage",
                "datasync:CreateLocationS3",
                "datasync:CreateLocationSmb",
                "datasync:CreateTask",
                "datasync:DeleteAgent",
                "datasync:DeleteLocation",
                "datasync:DeleteTask",
                "datasync:DescribeAgent",
                "datasync:DescribeLocationEfs",
                "datasync:DescribeLocationFsxWindows",
                "datasync:DescribeLocationNfs",
                "datasync:DescribeLocationObjectStorage",
                "datasync:DescribeLocationS3",
                "datasync:DescribeLocationSmb",
                "datasync:DescribeTask",
                "datasync:DescribeTaskExecution",
                "datasync:ListAgents",
                "datasync:ListLocations",
                "datasync:ListTagsForResource",
                "datasync:ListTaskExecutions",
                "datasync:ListTasks",
                "datasync:StartTaskExecution",
                "datasync:TagResource",
                "datasync:UntagResource",
                "datasync:UpdateAgent",
                "datasync:UpdateTask",
                "datasync:UpdateTaskExecution"
            ],
            "Resource": [
                "arn:${Partition}:datasync:<region>:<account>:<resourceType>/<resourceName>"
            ],
            "Condition": {
                "SomeCondition-UvwjM": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-mGKfa": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-unVyQ": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Organizations",
            "Effect": "Allow",
            "Action": [
                "organizations:AcceptHandshake",
                "organizations:AttachPolicy",
                "organizations:CancelHandshake",
                "organizations:CreateAccount",
                "organizations:CreateGovCloudAccount",
                "organizations:CreateOrganization",
                "organizations:CreateOrganizationalUnit",
                "organizations:CreatePolicy",
                "organizations:DeclineHandshake",
                "organizations:DeleteOrganization",
                "organizations:DeleteOrganizationalUnit",
                "organizations:DeletePolicy",
                "organizations:DeregisterDelegatedAdministrator",
                "organizations:DescribeAccount",
                "organizations:DescribeCreateAccountStatus",
                "organizations:DescribeEffectivePolicy",
                "organizations:DescribeHandshake",
                "organizations:DescribeOrganization",
                "organizations:DescribeOrganizationalUnit",
                "organizations:DescribePolicy",
                "organizations:DetachPolicy",
                "organizations:DisableAWSServiceAccess",
                "organizations:DisablePolicyType",
                "organizations:EnableAWSServiceAccess",
                "organizations:EnableAllFeatures",
                "organizations:EnablePolicyType",
                "organizations:InviteAccountToOrganization",
                "organizations:LeaveOrganization",
                "organizations:ListAWSServiceAccessForOrganization",
                "organizations:ListAccounts",
                "organizations:ListAccountsForParent",
                "organizations:ListChildren",
                "organizations:ListCreateAccountStatus",
                "organizations:ListDelegatedAdministrators",
                "organizations:ListDelegatedServicesForAccount",
                "organizations:ListHandshakesForAccount",
                "organizations:ListHandshakesForOrganization",
                "organizations:ListOrganizationalUnitsForParent",
                "organizations:ListParents",
                "organizations:ListPolicies",
                "organizations:ListPoliciesForTarget",
                "organizations:ListRoots",
                "organizations:ListTagsForResource",
                "organizations:ListTargetsForPolicy",
                "organizations:MoveAccount",
                "organizations:RegisterDelegatedAdministrator",
                "organizations:RemoveAccountFromOrganization",
                "organizations:TagResource",
                "organizations:UntagResource",
                "organizations:UpdateOrganizationalUnit",
                "organizations:UpdatePolicy"
            ],
            "Resource": [
                "arn:${Partition}:organizations::<masterAccountId>:<resource>/o-<organizationId>(/<resourceType>/<resourceId>)?"
            ],
            "Condition": {
                "SomeCondition-YvHkD": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-SCTLs": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-fJwAe": {
                    "aws:TagKeys": "...some value..."
                },
                "SomeCondition-IsZSV": {
                    "organizations:PolicyType": "...some value..."
                },
                "SomeCondition-VnQNT": {
                    "organizations:ServicePrincipal": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Performance Insights",
            "Effect": "Allow",
            "Action": [
                "pi:DescribeDimensionKeys",
                "pi:GetDimensionKeyDetails",
                "pi:GetResourceMetrics"
            ],
            "Resource": [
                "arn:aws:pi:<region>:<account>:<resource-type>/<relative-id>"
            ]
        },
        {
            "Sid": "Amazon Kinesis Analytics V2",
            "Effect": "Allow",
            "Action": [
                "kinesisanalytics:AddApplicationCloudWatchLoggingOption",
                "kinesisanalytics:AddApplicationInput",
                "kinesisanalytics:AddApplicationInputProcessingConfiguration",
                "kinesisanalytics:AddApplicationOutput",
                "kinesisanalytics:AddApplicationReferenceDataSource",
                "kinesisanalytics:AddApplicationVpcConfiguration",
                "kinesisanalytics:CreateApplication",
                "kinesisanalytics:CreateApplicationPresignedUrl",
                "kinesisanalytics:CreateApplicationSnapshot",
                "kinesisanalytics:DeleteApplication",
                "kinesisanalytics:DeleteApplicationCloudWatchLoggingOption",
                "kinesisanalytics:DeleteApplicationInputProcessingConfiguration",
                "kinesisanalytics:DeleteApplicationOutput",
                "kinesisanalytics:DeleteApplicationReferenceDataSource",
                "kinesisanalytics:DeleteApplicationSnapshot",
                "kinesisanalytics:DeleteApplicationVpcConfiguration",
                "kinesisanalytics:DescribeApplication",
                "kinesisanalytics:DescribeApplicationSnapshot",
                "kinesisanalytics:DiscoverInputSchema",
                "kinesisanalytics:ListApplicationSnapshots",
                "kinesisanalytics:ListApplications",
                "kinesisanalytics:ListTagsForResource",
                "kinesisanalytics:StartApplication",
                "kinesisanalytics:StopApplication",
                "kinesisanalytics:TagResource",
                "kinesisanalytics:UntagResource",
                "kinesisanalytics:UpdateApplication"
            ],
            "Resource": [
                "arn:aws:kinesisanalytics:<region>:<account_ID>:application/<applicationname>"
            ],
            "Condition": {
                "SomeCondition-JGOMY": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-OevTr": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-dqmAy": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "Amazon Kinesis Analytics",
            "Effect": "Allow",
            "Action": [
                "kinesisanalytics:AddApplicationInput",
                "kinesisanalytics:AddApplicationOutput",
                "kinesisanalytics:AddApplicationReferenceDataSource",
                "kinesisanalytics:CreateApplication",
                "kinesisanalytics:DeleteApplication",
                "kinesisanalytics:DeleteApplicationOutput",
                "kinesisanalytics:DeleteApplicationReferenceDataSource",
                "kinesisanalytics:DescribeApplication",
                "kinesisanalytics:DiscoverInputSchema",
                "kinesisanalytics:GetApplicationState",
                "kinesisanalytics:ListApplications",
                "kinesisanalytics:ListTagsForResource",
                "kinesisanalytics:StartApplication",
                "kinesisanalytics:StopApplication",
                "kinesisanalytics:TagResource",
                "kinesisanalytics:UntagResource",
                "kinesisanalytics:UpdateApplication"
            ],
            "Resource": [
                "arn:aws:kinesisanalytics:<region>:<account_ID>:application/<applicationname>"
            ],
            "Condition": {
                "SomeCondition-WvdFo": {
                    "aws:RequestTag/${TagKey}": "...some value..."
                },
                "SomeCondition-WhqJb": {
                    "aws:ResourceTag/${TagKey}": "...some value..."
                },
                "SomeCondition-WxDYa": {
                    "aws:TagKeys": "...some value..."
                }
            }
        },
        {
            "Sid": "AWS Accounts",
            "Effect": "Allow",
            "Action": [
                "account:DisableRegion",
                "account:EnableRegion",
                "account:ListRegions"
            ],
            "Condition": {
                "SomeCondition-gKfTN": {
                    "account:TargetRegion": "...some value..."
                }
            }
        }
    ]
}
